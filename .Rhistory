# Save it.
ggsave('figure/bw-study-area.jpg', plot=bw.map, width=148, units='mm', dpi=1200)
# Make a dummy plot so the caption prints.
knitr::include_graphics("figure/bw-study-area.jpg")
# Make half the data frame for the graph.
chi.graph <- left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source, zone) %>%
mutate(total.count=n()) %>%
distinct(source, zone, total.count) %>%
pivot_wider(names_from=source, values_from=total.count) %>%
mutate(RP=R + P) %>%
pivot_longer(!zone, names_to='source', values_to='total.count')
# Make the other half of the data frame, then join.
chi.graph <- left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source, zone, group) %>%
mutate(group.count=n()) %>%
distinct(source, zone, group, group.count) %>%
pivot_wider(names_from=source, values_from=group.count, values_fill=0) %>%
mutate(RP=R + P) %>%
pivot_longer(-c(group, zone), names_to='source', values_to='group.count') %>%
right_join(chi.graph, by=c('zone', 'source')) %>%
filter(source != 'R') %>%
mutate(prop=group.count/total.count) %>%
mutate(group=case_when(
group == 'corvid' ~ 'Corvids',
group == 'grouse' ~ 'Grouse',
group == 'thrush' ~ 'Thrushes',
group == 'bird' ~ 'Other\n Birds',
group == 'hare' ~ 'Hares',
group == 'squirrel' ~ 'Pine\n Squirrels',
group == 'mammal' ~ 'Other\n Mammals',
group == 'unknown' ~ 'Unknown'
)) %>%
mutate(group=factor(group,
levels=c('Other\n Birds', 'Corvids', 'Grouse', 'Thrushes',
'Other\n Mammals', 'Hares', 'Pine\n Squirrels', 'Unknown'))) %>%
mutate(source=factor(source,
levels=c('P', 'RP', 'C')))
# Source names for facet labels.
source_names <- list(
'P'='Pellets',
'RP'='Pooled Pellets-and-Remains',
'C'='Nest cameras'
)
# Labeller function.
labeller <- function(variable, value) {
return(source_names[value])
}
# Graph it.
chi.graph.bw <- chi.graph %>%
ggplot(aes(x=group, y=prop, fill=zone)) +
geom_bar(stat='identity', position='dodge') +
theme_classic() +
facet_grid(source ~., labeller=labeller) +
theme(legend.position='bottom',
legend.title=element_blank(),
text=element_text(family='Lato', size=12)) +
scale_fill_manual(labels=c('Coastal', 'Transition'), values=c('darkgrey', 'dimgrey')) +
xlab('Prey category') +
ylab('Proportion of items')
# Save it.
ggsave('figure/bw-chi-graph.jpg', plot=chi.graph.bw, width=148, units='mm', dpi=1200)
squirrel.graph <- model.data %>%
ggplot(aes(x=squirrel, y=n.fledge, shape=factor(year))) +
geom_point(position=position_jitter(h=0, w=0.25), size=2) +
labs(x=expression(paste('Diet Composition (Percent Pine Squirrel [',
italic('Tamiasciurus'), 'spp.] biomass)')),
y='Productivity (Number of Chicks Fledged)',
shape='Year') +
theme_classic() +
theme(text=element_text(family='Lato'))
diversity.graph <- model.data %>%
ggplot(aes(x=diet.diversity, y=n.fledge, shape=factor(year))) +
geom_point(position=position_jitter(h=0, w=0.25), size=2) +
labs(x='Diet Diversity (Simpson\'s Diversity Index)',
y='Productivitiy (Number of Chicks Fledged)',
shape='Year') +
theme_classic() +
theme(text=element_text(family='Lato'))
model.graphs <- squirrel.graph / diversity.graph +
plot_annotation(tag_levels=c('A'))
ggsave('figure/bw-model-plot.jpg', plot=model.graphs, width=148, units='mm', dpi=1200)
# Make a dummy plot so the caption prints.
knitr::include_graphics('figure/bw-model-plot.jpg')
# Make the data frame.
prey.table <- diet.items %>% distinct(category, class, family, genus, species, common, mass) %>%
mutate(mass=round(mass, digits=1)) %>%
arrange(category, common, mass) %>%
group_by(category, common) %>%
slice_tail(1) %>% ungroup() %>%
mutate(group=category) %>%
#  arrange(class, category, family, genus, species, mass) %>%
separate(category, c('size', 'type')) %>%
mutate(mass=round(mass, digits=1)) %>%
mutate(common=case_when(
common == 'unknown' & genus =='Unknown' ~ paste('average', size, type),
common == 'grouse' ~'unidentified grouse',
TRUE ~ common
)) %>%
mutate(species=case_when(
species == 'unknown' & genus != 'Unknown' ~ 'sp',
species =='unknown' ~ NA_character_,
TRUE ~ species
)) %>%
mutate(genus=case_when(
common == 'vole' ~ 'Subfamily: Avicolinae',
common == 'unidentified grouse' ~ 'Subfamily: Tentraoninae',
genus == 'Unknown' ~ NA_character_,
TRUE ~ genus
)) %>%
mutate(genus=case_when(
species != 'NA' ~ paste0('\\textit{', genus, '}'),
TRUE ~ genus
)) %>%
mutate(species=case_when(
species == 'sp' ~ 'sp.',
species != 'sp' ~ paste0('\\textit{', species, '}'),
genus == NA ~ NA_character_
)) %>%
mutate(family=case_when(
genus == NA ~ 'Unknown',
TRUE ~ family
)) %>%
mutate(binomial=case_when(
is.na(genus) | is.na(species) ~ coalesce(genus, species),
TRUE ~ paste(genus, species)
)) %>%
arrange(class, group, genus, species) %>%
select(common, binomial, mass) %>%
mutate(common=str_to_title(common))
# Unfortunately, we also need a separate version for word.
prey.table.word <- diet.items %>% distinct(category, class, family, genus, species, common, mass) %>%
mutate(mass=round(mass, digits=1)) %>%
arrange(category, common, mass) %>%
group_by(category, common) %>%
slice_tail(1) %>% ungroup() %>%
mutate(group=category) %>%
#  arrange(class, category, family, genus, species, mass) %>%
separate(category, c('size', 'type')) %>%
mutate(mass=round(mass, digits=1)) %>%
mutate(common=case_when(
common == 'unknown' & genus =='Unknown' ~ paste('average', size, type),
common == 'grouse' ~'unidentified grouse',
TRUE ~ common
)) %>%
mutate(species=case_when(
species == 'unknown' & genus != 'Unknown' ~ 'sp',
species =='unknown' ~ NA_character_,
TRUE ~ species
)) %>%
mutate(genus=case_when(
common == 'vole' ~ 'Subfamily: Avicolinae',
common == 'unidentified grouse' ~ 'Subfamily: Tentraoninae',
genus == 'Unknown' ~ NA_character_,
TRUE ~ genus
)) %>%
mutate(family=case_when(
genus == NA ~ 'Unknown',
TRUE ~ family
)) %>%
mutate(binomial=case_when(
is.na(genus) | is.na(species) ~ coalesce(genus, species),
TRUE ~ paste(genus, species)
)) %>%
arrange(class, group, genus, species) %>%
select(group, common, binomial, mass) %>%
mutate(common=str_to_title(common))
prey.table.word %>% flextable() %>%
set_caption('Mass of identified prey species and estimated mean mass of unidentified prey items categorized by size and class used to calculate the percent biomass of each prey in the diet of Northern Goshawks in southwestern British Columbia. Mass estimates of avian prey taken from Billerman et al. 2020 and mass estimates of mammalian prey taken from Nagorsen 2002. Where species are sexually dimorphic, the mean of both sexes was used.') %>%
fontsize(part='all', size=10) %>%
set_table_properties(layout='autofit')
# Make the initial data frame.
biomass.table <- diet.items %>% group_by(class, binomial) %>% mutate(count=n()) %>% ungroup() %>%
group_by(source) %>% mutate(total.source.count=n(),
total.source.mass=sum(mass)) %>% ungroup() %>%
group_by(source, class, binomial) %>% mutate(source.count=n(),
source.mass=sum(mass),
per.source.count=source.count/total.source.count*100,
per.source.mass=source.mass/total.source.mass*100) %>%
distinct(source, class, binomial, count, per.source.count, per.source.mass) %>%
mutate(source2=paste0(source, '2')) %>%
pivot_wider(names_from=source, values_from=per.source.count) %>%
pivot_wider(names_from=source2, values_from=per.source.mass) %>% ungroup() %>%
group_by(class, binomial) %>%
fill(everything(), .direction='downup') %>%
distinct() %>% left_join(prey.list, by=c('class', 'binomial')) %>%
select(class, common, binomial, count, C, C2, P, P2, R, R2) %>%
mutate(common=replace_na(common, 'unknown'),
binomial=str_replace(binomial, 'Unidentified item', ' '),
common=str_to_sentence(common, locale='en')) %>%
arrange(class, binomial) %>%
rownames_to_column(var='order') %>% mutate(order=as.numeric(order)) %>%
mutate(order=case_when(
class == 'Mammalia' ~ order + 1,
class == 'Unknown' ~ order + 2,
TRUE ~ order
))
# Make it better.
temp <- diet.items %>% group_by(class, binomial) %>% mutate(count=n()) %>% ungroup() %>%
group_by(source) %>% mutate(total.source.count=n(),
total.source.mass=sum(mass)) %>% ungroup() %>%
group_by(source, class, binomial) %>% mutate(source.count=n(),
source.mass=sum(mass),
per.source.count=source.count/total.source.count*100,
per.source.mass=source.mass/total.source.mass*100) %>%
distinct(source, class, binomial, count, per.source.count, per.source.mass) %>%
select(source, class, binomial,count, per.source.count, per.source.mass) %>%
mutate(source2=paste0(source, '2')) %>%
pivot_wider(names_from=source, values_from=per.source.count) %>%
pivot_wider(names_from=source2, values_from=per.source.mass) %>% ungroup() %>%
group_by(class, binomial) %>%
fill(everything(), .direction='downup') %>%
distinct() %>% left_join(prey.list, by=c('class', 'binomial')) %>%
select(class, common, binomial, genus, species, count, C, C2, P, P2, R, R2) %>%
mutate(common=replace_na(common, 'unknown'),
binomial=str_replace(binomial, 'Unidentified item', ' '),
common=str_to_sentence(common, locale='en')) %>%
arrange(class, binomial) %>%
rownames_to_column(var='order') %>% mutate(order=as.numeric(order)) %>%
mutate(order=case_when(
class == 'Mammalia' ~ order + 2,
class == 'Unknown' ~ order + 4,
TRUE ~ order
)) %>%
mutate(genus=case_when(
genus != 'NA' ~ paste0('\\textit{', genus, '}'),
TRUE ~ genus
)) %>%
mutate(species=case_when(
species == 'sp' ~ 'sp.',
species != 'sp' ~ paste0('\\textit{', species, '}'),
genus == NA ~ NA_character_
)) %>%
mutate(binomial=paste(genus, species)) %>%
mutate(binomial=case_when(
binomial == 'NA NA' ~ NA_character_,
TRUE ~ binomial
)) %>% ungroup() %>%
select(-c(genus, species))
# Find where total rows should be inserted.
table.breaks <- biomass.table %>% group_by(class) %>%
summarize(max=max(order), .groups='drop') %>% ungroup() %>%
select(max) %>% as.vector()
# Move the unknowns to the correct place.
temp <- temp %>% mutate(order=case_when(
class == 'Aves' & common == 'Unknown' ~ table.breaks$max[1] + 1,
class == 'Mammalia' & common == 'Unknown' ~ table.breaks$max[2] + 2,
TRUE ~ order
))
# Calculate total avian items.
avian.sums <- biomass.table %>% filter(class == 'Aves') %>%
ungroup() %>%
replace(is.na(.), 0) %>%
summarise(., across(where(is.numeric), sum)) %>%
mutate(order=table.breaks$max[1] + 2, class='Aves', common='TOTAL', binomial=' ') %>%
select(order, class, common, binomial, everything())
# Calculate total mammalian items.
mammal.sums <- biomass.table %>% filter(class == 'Mammalia') %>%
ungroup() %>%
replace(is.na(.), 0) %>%
summarise(., across(where(is.numeric), sum)) %>%
mutate(order=table.breaks$max[2] + 3, class='Mammalia', common='TOTAL', binomial=' ') %>%
select(order, class, common, binomial, everything())
# Calculate total items.
all.sums <- biomass.table %>% ungroup() %>%
replace(is.na(.), 0) %>%
summarise(., across(where(is.numeric), sum)) %>%
mutate(order=table.breaks$max[3] + 3, class=' ', common='TOTAL', binomial=' ') %>%
select(order, class, common, binomial, everything())
biomass.table <- biomass.table %>% mutate(order=case_when(
class == 'Aves' & common == 'Unknown' ~ table.breaks$max[1] + 1,
class == 'Mammalia' & common == 'Unknown' ~ table.breaks$max[2] + 2,
class == 'Unknown' & common == 'Unknown' ~ table.breaks$max[3] + 1,
TRUE ~ order
))
# Make the table (flextable style)
bind_rows(biomass.table, avian.sums, mammal.sums, all.sums) %>% arrange(order) %>%
mutate(across(C:R2, round, digits=2)) %>%
select(-order) %>%
flextable() %>%
add_header_row(values=c(' ', 'Camera', 'Pellets', 'Remains'), colwidths=c(4, 2, 2, 2)) %>%
colformat_num(na_str='-', digits=0) %>%
set_header_labels(class='Class', common='Common name', binomial='binomial', count='N',
C='% items', C2='% biomass',
P='% items', P2='% biomass',
R='% items', R2='% biomass') %>%
#  bg(i=table.breaks$max[1]+1, bg='lightgrey', part='body') %>%
#  bg(i=table.breaks$max[2]+1, bg='lightgrey', part='body') %>%
#  bg(i=table.breaks$max[3], bg='lightgrey', part='body') #%>%
set_caption('Summary of prey items recorded at active Northern Goshawk nests in southwestern British Columbia in 2019 and 2020 using  nest cameras n = 13 sites), pellets n = 25 sites), and prey remains n = 30 sites).') %>%
fontsize(part='all', size=10) %>%
set_table_properties(layout='autofit')
# Calculate counts per group per zone per source.
zone.counts <- left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(count=map(data, function(data) {
data %>% group_by(zone, group) %>%
mutate(count=n()) %>%
select(zone, group, count) %>%
distinct()
})) %>%
unnest(count) %>% select(!data)
# Hares in pellets.
zone.counts %>% pivot_wider(names_from=source, values_from=count) %>%
mutate(RP=R + P) %>%
pivot_longer(cols=c('R', 'C', 'P', 'RP'), names_to='source', values_to='count') %>%
filter(!is.na(count)) %>% filter(source == 'P') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0)
# Hares in pellets + remains.
zone.counts %>% pivot_wider(names_from=source, values_from=count) %>%
mutate(RP=R + P) %>%
pivot_longer(cols=c('R', 'C', 'P', 'RP'), names_to='source', values_to='count') %>%
filter(!is.na(count)) %>% filter(source == 'RP') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0)
zone.counts %>% pivot_wider(names_from=source, values_from=count) %>%
mutate(RP=R + P)
zone.counts %>% pivot_wider(names_from=source, values_from=count, values_fill=0) %>%
mutate(RP=R + P)
zone.chi <- zone.counts %>% pivot_wider(names_from=source, values_from=count, values_fill=0) %>%
mutate(RP=R + P) %>%
pivot_longer(cols=c('R', 'C', 'P', 'RP'), names_to='source', values_to='count') %>%
filter(!is.na(count)) %>%
group_by(source) %>% nest() %>%
mutate(ch=map(data, function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance))
# Run the chi-squared test.
zone.chi <- zone.counts %>% pivot_wider(names_from=source, values_from=count, values_fill=0) %>%
mutate(RP=R + P) %>%
pivot_longer(cols=c('R', 'C', 'P', 'RP'), names_to='source', values_to='count') %>%
filter(count > 0) %>%
group_by(source) %>% nest() %>%
mutate(ch=map(data, function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance))
# Look at the results.
zone.chi %>% unnest(gl)
# How many groups are present?
zone.chi %>% filter(source == 'RP') %>% unnest(data) %>% distinct(group)
# Set the bonferroni adjustment.
bon.rp <- 0.05/7
# What is it?
bon.rp
# Set up the data.
post.hoc.rp <- zone.chi %>% filter(source == 'RP') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
group_by(group) %>% nest()
# Look at it.
post.hoc.rp %>% filter(group == 'hare') %>% unnest(data)
zone.chi %>% filter(source == 'RP') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
pivot_wider(names_from=group, values_from=count) %>%
mutate(everything=bird + corvid + grouse + thrush + hare + mammal + squirrel) %>%
pivot_longer(-c(zone, everything), names_to='group', values_to='count') %>%
group_by(group) %>% nest() %>%
mutate(data=map(data, function(data){
data %>% mutate(everything.else = everything - count) %>%
select(zone, count, everything.else)
})) %>%
filter(group == 'hare') %>% unnest(data)
# Run the chi-square test group-by-group.
post.hoc.rp <- zone.chi %>% filter(source == 'RP') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
group_by(group) %>% nest() %>% ungroup() %>%
mutate(ch=map(data, function(data) {
data %>% column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance))
# Look at them.
post.hoc.rp %>% unnest(gl) %>% arrange(p.value)
# Reminder what the bonferonni-adjusted p-value is.
bon.rp
# Run the chi-square test group-vs-everything else.
zone.chi %>% filter(source == 'RP') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
pivot_wider(names_from=group, values_from=count) %>%
mutate(everything=bird + corvid + grouse + thrush + hare + mammal + squirrel) %>%
pivot_longer(-c(zone, everything), names_to='group', values_to='count') %>%
group_by(group) %>% nest() %>%
mutate(data=map(data, function(data){
data %>% mutate(everything.else = everything - count) %>%
select(zone, count, everything.else)
}),
ch=map(data, function(data) {
data %>% column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance)) %>%
unnest(gl) %>%
arrange(p.value)
# Reminder what the bonferonni-adjusted p-value is.
bon.rp
# Set the bonferroni adjustment.
bon.c <- 0.05/8
# What is it?
bon.c
# Run the chi-square test.
post.hoc.c <- zone.chi %>% filter(source == 'C') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
pivot_longer(-zone, names_to='group', values_to='count') %>%
group_by(group) %>% nest() %>%
mutate(ch=map(data, function(data) {
data %>% column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance))
# Look at them.
post.hoc.c %>% unnest(gl) %>% arrange(p.value)
# Reminder what the bonferonni-adjusted p-value is.
bon.c
# Run the chi-square test group-vs-everything else.
zone.chi %>% filter(source == 'C') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
pivot_wider(names_from=group, values_from=count) %>%
mutate(everything=bird + corvid + grouse + thrush + hare + mammal + squirrel + unknown) %>%
pivot_longer(-c(zone, everything), names_to='group', values_to='count') %>%
group_by(group) %>% nest() %>%
mutate(data=map(data, function(data){
data %>% mutate(everything.else = everything - count) %>%
select(zone, count, everything.else)
}),
ch=map(data, function(data) {
data %>% column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance)) %>%
unnest(gl) %>%
arrange(p.value)
zone.chi %>% filter(source == 'C') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
pivot_wider(names_from=group, values_from=count)# %>%
# Run the chi-square test group-vs-everything else.
zone.chi %>% filter(source == 'RP') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
mutate(everything=bird + corvid + grouse + thrush + hare + mammal + squirrel) %>%
pivot_longer(-c(zone, everything), names_to='group', values_to='count') %>%
group_by(group) %>% nest() %>%
mutate(data=map(data, function(data){
data %>% mutate(everything.else = everything - count) %>%
select(zone, count, everything.else)
}),
ch=map(data, function(data) {
data %>% column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance)) %>%
unnest(gl) %>%
arrange(p.value)
# Run the chi-square test group-vs-everything else.
zone.chi %>% filter(source == 'RP') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
mutate(everything=bird + corvid + grouse + thrush + hare + mammal + squirrel) %>%
pivot_longer(-c(zone, everything), names_to='group', values_to='count') %>%
group_by(group) %>% nest() %>%
mutate(data=map(data, function(data){
data %>% mutate(everything.else = everything - count) %>%
select(zone, count, everything.else)
}),
ch=map(data, function(data) {
data %>% column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance)) %>%
unnest(gl) %>%
arrange(p.value)
# Reminder what the bonferonni-adjusted p-value is.
bon.rp
# Run the chi-square test group-vs-everything else.
zone.chi %>% filter(source == 'C') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
mutate(everything=bird + corvid + grouse + thrush + hare + mammal + squirrel + unknown) %>%
pivot_longer(-c(zone, everything), names_to='group', values_to='count') %>%
group_by(group) %>% nest() %>%
mutate(data=map(data, function(data){
data %>% mutate(everything.else = everything - count) %>%
select(zone, count, everything.else)
}),
ch=map(data, function(data) {
data %>% column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance)) %>%
unnest(gl) %>%
arrange(p.value)
# Reminder what the bonferonni-adjusted p-value is.
bon.rp
# Run the chi-square test.
post.hoc.c <- zone.chi %>% filter(source == 'C') %>% ungroup() %>%
select(data) %>% unnest(data) %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
pivot_longer(-zone, names_to='group', values_to='count') %>%
group_by(group) %>% nest() %>%
mutate(ch=map(data, function(data) {
data %>% column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}),
gl=map(ch, glance))
# Look at them.
post.hoc.c %>% unnest(gl) %>% arrange(p.value)
# Reminder what the bonferonni-adjusted p-value is.
bon.c
