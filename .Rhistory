group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count) %>%
distinct() %>%
group_by(binomial) %>%
mutate(total=n()) %>%
pivot_wider(names_from=binomial, values_from=count, values_fill=list(count = 0))
diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count) %>%
distinct() %>%
group_by(binomial) %>%
mutate(total=n())# %>%
diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count) %>%
distinct() %>%
ungroup() %>% group_by(binomial) %>%
mutate(total=n())# %>%
diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(binomial) %>%
mutate(total.count=n()) %>%
group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count) %>%
distinct() #%>%
diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(binomial) %>%
mutate(total.count=n()) %>%
group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count, total.count) %>%
distinct() #%>%
diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(binomial) %>%
mutate(total.count=n()) %>%
group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count, total.count) %>%
distinct() %>%
pivot_wider(names_from=binomial, values_from=count, values_fill=list(count = 0))
diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(binomial) %>%
mutate(total.count=n()) %>%
group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count, total.count) %>%
distinct() %>%
pivot_wider(names_from=binomial, values_from=count, values_fill=list(count = 0)) %>% view()
diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(binomial) %>%
mutate(total.count=n()) %>%
group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count, total.count) %>%
distinct()# %>%
diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(binomial) %>%
group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count) %>%
distinct() %>%
pivot_wider(names_from=binomial, values_from=count, values_fill=list(count = 0)) %>% view()
hold <- diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(binomial) %>%
group_by(nest, binomial) %>%
mutate(count=n()) %>%
select(nest, binomial, count) %>%
distinct() %>%
pivot_wider(names_from=binomial, values_from=count, values_fill=list(count = 0))
hold %>% summarise_if(is.numeric, sum)
hold %>% summarise_if(is.numeric, sum) %>% view()
hold[,1]
hold[,2]
hold[,2] %>% class()
hold %>% summarise_if(is.numeric, mean)
diet.items %>% group_by(source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass))
View(study.area.mass)
View(diet.items)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
pivot_longer(-c(nest, data), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent) %>%
pivot_wider(id_cols=c(zone, variable), names_from=source, values_from=percent)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass))# %>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent) %>%
pivot_wider(id_cols=c(zone, variable), names_from=source, values_from=percent)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per)# %>%
diet.items %>% filter(source == 'C') %>%
group_by(nest) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
pivot_longer(-c(nest, data), names_to='var', values_to='per') %>%
unnest(per) #%>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() #%>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) #%>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') #%>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') #%>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) #%>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent) #%>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent) %>%
pivot_wider(id_cols=c(zone, source), names_from=variable, values_from=percent, values_fill=0)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent) %>%
pivot_wider(id_cols=c(zone, source), names_from=variable, values_from=percent, values_fill=0) %>%
arrange(zone)
View(study.area.mass)
View(nest.mass)
View(nest.mass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent) %>%
pivot_wider(id_cols=c(zone, source), names_from=variable, values_from=percent, values_fill=0) %>%
arrange(zone)
View(zone.mass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent)# %>%
pivot_wider(id_cols=c(zone, variable), names_from=source, values_from=percent, values_fill=0) %>%
arrange(zone)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent) %>%
pivot_wider(id_cols=c(zone, variable), names_from=source, values_from=percent, values_fill=0) %>%
arrange(zone)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent) %>%
pivot_wider(id_cols=c(zone, variable), names_from=source, values_from=percent, values_fill=0) %>%
mutate(R.P=R + P)
# Calculate % bird and % mammal for each source and each zone.
zone.mass <- left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(zone, source) %>% nest() %>%
mutate(class=map(data, class.mass),
genus=map(data, squirrel.mass),
group=map(data, group.mass)) %>%
select(!data) %>%
pivot_longer(-c(source, zone), names_to='var', values_to='per') %>%
unnest(per) %>%
select(source, zone, variable, percent) %>%
pivot_wider(id_cols=c(zone, variable), names_from=source, values_from=percent, values_fill=0) %>%
mutate(R.P=R + P) %>%
arrange(zone)
study.area.count
nest.count
diversity(study.area.count, index='simpson')
plyr::ddply(nest.count, ~nest, function(x) {
data.frame(diet.diversity=diversity(x[-1], index='simpson'))
})
# Diversity per nest.
nest.diversity <- plyr::ddply(nest.count, ~nest, function(x) {
data.frame(diet.diversity=diversity(x[-1], index='simpson'))
})
nest.diversity
# Calculate overlap between nests.
nest.count %>% column_to_rownames(var='nest') %>%
vegdist(., method='morisita')
# Calculate overlap between nests.
nest.count %>% column_to_rownames(var='nest') %>%
vegdist(., method='morisita') %>%
enframe()
# Calculate overlap between nests.
nest.overlap <- nest.count %>% column_to_rownames(var='nest') %>%
vegdist(., method='morisita') %>%
enframe()
diet.items
diet.items %>% filter(source == 'C' & binomial != 'Unidentified item')
diet.items %>% left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(zone)
diet.items %>% left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C' & binomial != 'Unidentified item')# %>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C' & binomial != 'Unidentified item')# %>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(zone)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(zone, binomial)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(zone, binomial) %>%
mutate(count=n()) %>%
5
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(zone, binomial) %>%
mutate(count=n())
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(zone, binomial) %>%
mutate(count=n()) %>%
select(zone, binomial, count) %>%
distinct()
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C' & binomial != 'Unidentified item') %>%
group_by(zone, binomial) %>%
mutate(count=n()) %>%
select(zone, binomial, count) %>%
distinct() %>%
pivot_wider(names_from=binomial, values_from=count, values_fill=list(count = 0))
zone.mass
zone.mass %>% filter(variable != c('Aves', 'Mammalia'))
zone.mass %>% filter(variable !%in% c('Aves', 'Mammalia'))
zone.mass %>% filter(variable %in% c('Aves', 'Mammalia'))
zone.mass %>% filter(!variable %in% c('Aves', 'Mammalia'))
zone.mass %>% filter(!variable %in% c('Aves', 'Mammalia')) %>%
pivot_longer(-c(zone, variable), names_to='source', values_to='count')
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>%
group_by(zone, binomial) %>%
mutate(count=n())# %>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>%
group_by(zone, binomial) %>%
mutate(count=n()) %>%
select(zone, binomial, count) %>%
distinct() #%>%
# Make a function to count each group.
group.count <- function(data) {
data %>% group_by(zone, binomial) %>%
mutate(count=n()) %>%
select(zone, binomial, count) %>%
distinct()
}
left_join(diet.items, centroids.sf, by=c('site'))
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest()
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(class=map(data, group.count))
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(class=map(data, group.count)) %>%
unnest(class)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(class=map(data, group.count)) %>%
unnest(class) %>% view()
# Make a function to count each group.
group.count <- function(data) {
data %>% group_by(zone, group) %>%
mutate(count=n()) %>%
select(zone, group, count) %>%
distinct()
}
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(class=map(data, group.count)) %>%
unnest(class) %>% view()
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(count=map(data, group.count)) %>%
unnest(count)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(count=map(data, group.count)) %>%
unnest(count) %>% select(!data)
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(count=map(data, function(data) {
data %>% group_by(zone, group) %>%
mutate(count=n()) %>%
select(zone, group, count) %>%
distinct()
})) %>%
unnest(count) %>% select(!data)
# Calculate counts per group per zone per source.
zone.counts <- left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(count=map(data, function(data) {
data %>% group_by(zone, group) %>%
mutate(count=n()) %>%
select(zone, group, count) %>%
distinct()
})) %>%
unnest(count) %>% select(!data)
zone.counts
zone.counts %>% filter(source == 'C')
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count)
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0)
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
select(!source)
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source)
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source) %>%
chisq.test()
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source) %>%
column_to_rowname(var='zone')
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source) %>%
column_to_rownames(var='zone')
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source) %>%
column_to_rownames(var='zone') %>%
chisq.test()
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
zone.counts %>% group_by(source)
zone.counts %>% group_by(source) %>% nest()
zone.counts %>% group_by(source) %>% nest() %>%
mutate(chi.test=map(data, function(data){
data %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}))
chit <- function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}
zone.counts %>% group_by(source) %>% nest() %>%
mutate(chi.test=map(data, chit))
zone.counts %>% group_by(source) %>% nest() #%>%
chit <- function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0)
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}
zone.counts %>% group_by(source) %>% nest() #%>%
zone.counts %>% group_by(source) %>% nest() %>%
mutate(chi.test=map(data, chit))
left_join(diet.items, centroids.sf, by=c('site')) %>%
group_by(source) %>% nest() %>%
mutate(count=map(data, function(data) {
data %>% group_by(zone, group) %>%
mutate(count=n()) %>%
select(zone, group, count) %>%
distinct()
}))
zone.counts %>% group_by(source) %>% nest()
test <- zone.counts %>% group_by(source) %>% nest()
View(test)
View(test[[2]][[1]])
chit <- function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0)
column_to_rownames(var='zone')
}
zone.counts %>% group_by(source) %>% nest() %>%
mutate(chi.test=map(data, chit))
View(zone.counts)
zone.counts %>% group_by(source) %>% nest() %>%
mutate(ch=map(data, chit))
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0)
chit <- function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
column_to_rownames(var='zone')
}
zone.counts %>% group_by(source) %>% nest() %>%
mutate(ch=map(data, chit))
chit <- function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}
zone.counts %>% group_by(source) %>% nest() %>%
mutate(ch=map(data, chit))
zone.counts %>% group_by(source) %>% nest() %>%
mutate(ch=map(data, function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}))
zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
test <- zone.counts %>% filter(source == 'C') %>%
pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
ungroup() %>% select(!source) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
library(broom)
tidy.htest(test)
tidy(test)
glance(test)
zone.counts %>% group_by(source) %>% nest() %>%
mutate(ch=map(data, function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
})) %>%
mutate(gl=map(ch, glance))
zone.counts %>% group_by(source) %>% nest() %>%
mutate(ch=map(data, function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
})) %>%
mutate(gl=map(ch, glance)) %>% unnest(gl)
# Run a chi-square test for each data source.
zone.chi <- zone.counts %>% group_by(source) %>% nest() %>%
mutate(ch=map(data, function(data) {
data %>% pivot_wider(names_from=group, values_from=count, values_fill=0) %>%
column_to_rownames(var='zone') %>%
chisq.test(., correct=FALSE, simulate.p.value=TRUE)
}))
