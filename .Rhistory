mutate_if(is.numeric, replace_na, 0)
left_join(rv, prey.list) %>% mutate_if(is.character, replace_na, 'Unknown') %>%
mutate_if(is.numeric, replace_na, 0) %>%
left_join(average.sizes) %>%
mutate(mass=coalesce(mass, average))
left_join(rv, prey.list) %>% mutate_if(is.character, replace_na, 'Unknown') %>%
mutate_if(is.numeric, replace_na, 0) %>%
left_join(average.sizes) %>%
mutate(mass=coalesce(mass, average)) %>% view()
left_join(rv, prey.list) %>% mutate_if(is.character, replace_na, 'Unknown') %>%
left_join(average.sizes) %>%
mutate(mass=coalesce(mass, average)) %>% view()
left_join(rv, prey.list) %>% mutate_if(is.character, replace_na, 'Unknown') %>%
left_join(average.sizes) %>%
mutate(mass=coalesce(mass, average)) %>%
select(author, class, family, order, genus, species, binomial, common, category, prop.count, mass) %>% view()
# Add mass.
rv <- left_join(rv, prey.list) %>% mutate_if(is.character, replace_na, 'Unknown') %>%
left_join(average.sizes) %>%
mutate(mass=coalesce(mass, average)) %>%
select(author, class, family, order, genus, species, binomial, common, category, prop.count, mass)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
#Load some libraries.
library(tidyverse)
library(ggplot2)
library(lubridate)
library(vegan)
# Let's name some colors.
aves <- '#89b0ae'
mammalia <- '#e9c46a'
unknown <- 'lightgrey'
bird <- '#114b5f' # Midnight green eagle
corvid <- '#7c9eb2' # Pewter blue
grouse <- '#c3e8bd' # Tea green
hare <- '#d1603d' # Copper red
mammal <- '#cdc392' # Sage
squirrel <- '#df9a57' # Persian orange
thrush <- '#553e4e' # Eggplant
# Bring in diet data.
remains.data <- read_csv('../data/raw/20210118_specimens.csv', guess_max=7000) %>%
## filter only records with at least size assigned...
filter(size != 'U') %>%
## and rename a confusing column.
rename(name=site)
# Bring in a list of site abbreviations and site names.
nest.list <- read_csv('../data/processed/site_abbreviations.csv')
# Join the site list to the remains data by site name.
remains.data <- left_join(remains.data, nest.list, by='name')
# Add a unique site/year identifier.
remains.data <- remains.data %>%
mutate(year=year(date), nest=paste(site, year, sep=''))
# Select just the relevant columns...
remains.data <- remains.data %>%
select(id, site, year, nest, class, order, family, genus, species, common, size, source) %>%
## then change the size column wording to make it look nicer...
mutate(size=case_when(
size == 'S' ~ 'small',
size == 'M' ~ 'medium',
size == 'L' ~ 'large'
)) %>%
## and replace all the "U"s with "Unknown"...
mutate_at(c('class', 'order', 'family', 'genus'), funs(case_when(
. == 'U' ~ 'Unknown',
TRUE ~ .
))) %>%
## in species as well...
mutate(species=case_when(
species == 'U' ~ 'unknown',
TRUE ~ species
))
# Make sure species is lowercase.
remains.data$species <- str_to_lower(remains.data$species)
# Bring in a list of all known prey.
prey.list <- read_csv('../data/interim/prey_attributes.csv')
# Join the biomass data to the list of diet items.
diet.items <- prey.list %>% select(genus, species, binomial, common, category, mass) %>%
right_join(remains.data, by=c('genus', 'species', 'common'))
# For unidentified items, classify them by size and class.
diet.items <- diet.items %>% mutate(category=case_when(
is.na(category) & class == 'Mammalia' & size == 'small' ~ 'small mammal',
is.na(category) & class == 'Mammalia' & size == 'medium' ~ 'medium mammal',
is.na(category) & class == 'Mammalia' & size == 'large' ~ 'large mammal',
is.na(category) & class == 'Aves' & size == 'small' ~ 'small bird',
is.na(category) & class == 'Aves' & size == 'medium' ~ 'medium bird',
is.na(category) & class == 'Aves' & size == 'large' ~ 'large bird',
is.na(category) & class == 'Unknown' ~ paste(size, 'item'),
TRUE ~ category))
# For unidentified items, fill in the binomial column.
diet.items <- diet.items %>% replace_na(list(binomial = 'Unidentified item'))
# Create a table with average masses by collecting all the items of known mass...
average.sizes <- prey.list %>%
group_by(category) %>%
## averaging the mass for each size & class category...
summarize(average=mean(mass)) %>%
pivot_wider(names_from=category, values_from=average) %>%
## calculating the average mass for complete unknowns...
mutate(`large item` = mean(`large bird`, `large mammal`),
`medium item` = mean(`medium bird`, `medium mammal`),
`small item` = mean(`small bird`, `small mammal`)) %>%
## and reassembling it in a tidy format.
pivot_longer(everything(), names_to='category', values_to='average')
# Join average mass to diet items...
diet.items <- left_join(diet.items, average.sizes, by='category') %>%
## and fill in missing mass with average values
mutate(mass=coalesce(mass, average)) %>%
## then drop no longer needed average column and rearrange.
select(id, site, year, nest, class, order, family, genus, species, binomial, common,
category, size, mass, source)
sc <- diet.items %>% filter(id != 1120) %>%
filter(id != 1171) %>%
filter(site != 'COM')
# Total number of items.
summarize(sc, n())
# Number of items per year.
sc %>% group_by(year) %>%
summarize(n())
# Biomass per year.
sc %>% group_by(year) %>%
summarize(sum(mass))
# Weird. Mean biomass of items for each year?
sc %>% group_by(year) %>%
summarize(mean(mass))
# For 2019.
sp.2019 <- sc %>% filter(year=='2019') %>% distinct (binomial) %>% arrange()
sp.2019
# For 2020.
sp.2020 <- sc %>% filter(year=='2020') %>% distinct (binomial) %>% arrange()
sp.2020
# Unique to 2019.
anti_join(sp.2019, sp.2020, by='binomial')
# Unique to 2020.
anti_join(sp.2020, sp.2019, by='binomial')
# Add grouping variable.
by.group <- sc %>% mutate(group=case_when(
class == 'Aves' & family == 'Phasianidae' ~ 'grouse',
class == 'Aves' & family == 'Corvidae' ~ 'corvid',
class == 'Aves' & family == 'Turdidae' ~ 'thrush',
class == 'Aves' ~ 'bird',
class == 'Mammalia' & genus == 'Tamiasciurus' ~ 'squirrel',
class == 'Mammalia' & genus == 'Lepus' ~ 'hare',
class == 'Mammalia' ~ 'mammal',
TRUE ~ 'unknown'
))
# Make a frequency table.
freq.by.year <- by.group %>% group_by(year, group) %>%
mutate(count=n()) %>%
select(year, group, count) %>%
distinct() %>% ungroup() %>%
pivot_wider(names_from='group', values_from='count', values_fill=0) %>%
column_to_rownames(var='year')
# Run a chi-squared test for differences between years (is this even the right way to do it??)
chi.year <- chisq.test(freq.by.year, correct=FALSE, simulate.p.value=TRUE)
chi.year
by.group %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from combined pellets and remains') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
by.group %>% filter(source == 'P') %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from pellets') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
sc %>% distinct (binomial) %>% arrange()
# Proportion biomass avian:mammalian for pooled sample.
sc %>% mutate(total.mass=sum(mass)) %>%
group_by(class) %>%
mutate(class.mass=sum(mass), prop.mass=class.mass/total.mass*100) %>%
distinct(class, prop.mass)
# Proportion biomass tree squirrel:everything else for pooled sample.
sc %>% mutate(total.mass=sum(mass)) %>%
group_by(genus) %>%
mutate(genus.mass=sum(mass), prop.mass=genus.mass/total.mass*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(genus, prop.mass)
# Proportion biomass avian:mammalian for pooled sample.
sc %>% filter(source == 'P') %>%
mutate(total.mass=sum(mass)) %>%
group_by(class) %>%
mutate(class.mass=sum(mass), prop.mass=class.mass/total.mass*100) %>%
distinct(class, prop.mass)
# Proportion biomass tree squirrel for pellets only.
sc %>% filter(source == 'P') %>%
mutate(total.mass=sum(mass)) %>%
group_by(genus) %>%
mutate(genus.mass=sum(mass), prop.mass=genus.mass/total.mass*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(genus, prop.mass)
# Proportion counts avian:mammalian for pooled sample.
sc %>% mutate(total.count=n()) %>%
group_by(class) %>%
mutate(class.count=n(), prop.count=class.count/total.count*100) %>%
distinct(class, prop.count)
# Proportion counts tree squirrel:everything else for pooled sample.
sc %>% mutate(total.count=n()) %>%
group_by(genus) %>%
mutate(genus.count=n(), prop.count=genus.count/total.count*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(genus, prop.count)
# Proportion counts avian:mammalian for pellets only sample.
sc %>% filter(source == 'P') %>%
mutate(total.count=n()) %>%
group_by(class) %>%
mutate(class.count=n(), prop.count=class.count/total.count*100) %>%
distinct(class, prop.count)
# Proportion counts tree squirrel for pellets only.
sc %>% filter(source == 'P') %>%
mutate(total.count=n()) %>%
group_by(genus) %>%
mutate(genus.count=n(), prop.count=genus.count/total.count*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(genus, prop.count)
View(rv)
rv
rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass)
rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass) %>% view()
203.5*6
rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass, total.mass=sum(biomass)) %>%
group_by(class)
test <- rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass, total.mass=sum(biomass)) %>%
group_by(class)
test
test <- rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass, total.mass=sum(biomass)) %>%
group_by(auhtor, class)
test <- rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass, total.mass=sum(biomass)) %>%
group_by(author, class)
test
rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass, total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(mass), prop.mass=class.mass/total.mass*100)
rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass, total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(mass), prop.mass=class.mass/total.mass*100) %>%
distinct(author, class, prop.mass)
rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass, total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(mass), prop.mass=class.mass/total.mass*100) %>% view()
1410.535/5044.49
0.27*100
rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass, total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(biomass), prop.mass=class.mass/total.mass*100) %>% view()
rv %>% group_by(author) %>%
mutate(biomass=prop.count*mass, total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(biomass), prop.mass=class.mass/total.mass*100) %>%
distinct(author, class, prop.mass)
# Calculate biomass.
rv <- rv %>% mutate(biomass=prop.count*mass)
rv %>% group_by(author) %>%
mutate(total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(biomass), prop.mass=class.mass/total.mass*100) %>%
distinct(author, class, prop.mass)
mn <- tribble(
~author, ~class, ~prop.mass,
'case', 'Aves', 62.7,
'case', 'Mammalia', 37.9,
'watson', 'Aves', 52.6,
'watson', 'Mammalia', 47.1
)
mn <- tribble(
~author, ~class, ~prop.mass,
'case', 'Aves', 62.7,
'case', 'Mammalia', 37.9,
'watson', 'Aves', 52.6,
'watson', 'Mammalia', 47.1
)
rv %>% group_by(author) %>%
mutate(total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(biomass), prop.mass=class.mass/total.mass*100) %>%
distinct(author, class, prop.mass)
rv %>% group_by(author) %>%
mutate(total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(biomass), prop.mass=class.mass/total.mass*100) %>%
distinct(author, class, prop.mass) %>%
bind_rows(mn)
rv %>% group_by(author) %>%
mutate(total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(biomass), prop.mass=class.mass/total.mass*100) %>%
distinct(author, class, prop.mass) %>%
bind_rows(mn) %>%
pivot_wider(names_from=class, values_from=prop.mass)
rv %>% group_by(author) %>%
mutate(total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(biomass), prop.mass=class.mass/total.mass*100) %>%
distinct(author, class, prop.mass) %>%
bind_rows(mn) %>%
pivot_wider(names_from=class, values_from=prop.mass) %>%
arrange(Aves)
sq <- tribble(
~author, ~genus, ~prop.mass,
'case', 'Tamiasciurus', 14.1,
'watson', 'Tamiasciurus', 9.6,
)
# Add in my and Watson's data.
sq <- tribble(
~author, ~genus, ~prop.mass,
'case', 'Tamiasciurus', 14.1,
'watson', 'Tamiasciurus', 9.6,
)
rv %>% group_by(author) %>%
mutate(total.mass=sum(biomass)) %>%
group_by(author, genus) %>%
mutate(genus.mass=sum(biomass), prop.mass=genus.mass/total.mass*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(author, genus, prop.mass) %>%
bind_rows(sq)
rv %>% group_by(author) %>%
mutate(total.mass=sum(biomass)) %>%
group_by(author, genus) %>%
mutate(genus.mass=sum(biomass), prop.mass=genus.mass/total.mass*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(author, genus, prop.mass) %>%
bind_rows(sq) %>%
arrange(prop.mass)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
#Load some libraries.
library(tidyverse)
blx <- tribble(
~class, ~family, ~category, ~common, ~prop.count,
'Aves', 'Phasianidae', 'large bird', 'grouse', 31,
'Aves', 'Columbidae', 'large bird', 'band-tailed pigeon', 22,
'Aves', 'Corvidae', 'medium bird', "steller\'s jay", 14,
'Aves', 'Picidae', 'medium bird', 'woodpecker', 4,
'Aves', 'Turdidae', 'small bird', 'thrush', 4,
'Aves', 'Unknown', 'small bird', 'unknown', 2,
'Mammalia', 'Leporidae', 'large mammal', 'snowshoe hare', 10,
'Mammalia', 'Sciuridae', 'medium mammal', 'douglas squirrel', 6,
'Mammalia', 'Sciuridae', 'small mammal', 'flying squirrel', 4,
'Mammalia', 'Rodentia', 'small mammal', 'unknown', 3
)
blx
thr <- tribble(
~class, ~family, ~category, ~common, ~prop.count,
'Aves', 'Phasianidae', 'large bird', 'ruffed grouse', 45,
'Aves', 'Corvidae', 'medium bird', "steller\'s jay", 13,
'Aves', 'Turdidae', 'medium bird', 'american robin', 13,
'Aves', 'Phasianidae', 'large bird', 'ring-necked pheasant', 8,
'Aves', 'Odontophoridae', 'large bird', 'mountain quail', 5,
'Mammalia', 'Sciuridae', 'medium mammal', 'douglas squirrel', 13,
'Mammalia', 'Aplodontiidae', 'large mammal', 'mountain beaver', 3
)
thr
# Add author information to each data frame.
blx <- blx %>% mutate(author='bloxton')
thr <- thr %>% mutate(author='thraikill')
# Join the two frames together.
rv <- bind_rows(blx, thr)
# Import prey information.
prey.list <- read_csv('../data/interim/prey_attributes.csv')
# Create a table of average masses.
average.sizes <- prey.list %>%
group_by(category) %>%
## averaging the mass for each size & class category...
summarize(average=mean(mass)) %>%
pivot_wider(names_from=category, values_from=average) %>%
## calculating the average mass for complete unknowns...
mutate(`large item` = mean(`large bird`, `large mammal`),
`medium item` = mean(`medium bird`, `medium mammal`),
`small item` = mean(`small bird`, `small mammal`)) %>%
## and reassembling it in a tidy format.
pivot_longer(everything(), names_to='category', values_to='average')
# Add mass.
rv <- left_join(rv, prey.list) %>% mutate_if(is.character, replace_na, 'Unknown') %>%
left_join(average.sizes) %>%
mutate(mass=coalesce(mass, average)) %>%
select(author, class, family, order, genus, species, binomial, common, category, prop.count, mass)
# Calculate biomass.
rv <- rv %>% mutate(biomass=prop.count*mass)
# Add in new data.
mn <- tribble(
~author, ~class, ~prop.mass,
'case', 'Aves', 62.7,
'case', 'Mammalia', 37.9,
'watson', 'Aves', 52.6,
'watson', 'Mammalia', 47.1
)
# Join with Bloxton & Thraikill.
rv %>% group_by(author) %>%
mutate(total.mass=sum(biomass)) %>%
group_by(author, class) %>%
mutate(class.mass=sum(biomass), prop.mass=class.mass/total.mass*100) %>%
distinct(author, class, prop.mass) %>%
bind_rows(mn) %>%
pivot_wider(names_from=class, values_from=prop.mass) %>%
arrange(Aves)
# Add in my and Watson's data.
sq <- tribble(
~author, ~genus, ~prop.mass,
'case', 'Tamiasciurus', 14.1,
'watson', 'Tamiasciurus', 9.6,
)
# Join with Bloxton & Thraikill.
rv %>% group_by(author) %>%
mutate(total.mass=sum(biomass)) %>%
group_by(author, genus) %>%
mutate(genus.mass=sum(biomass), prop.mass=genus.mass/total.mass*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(author, genus, prop.mass) %>%
bind_rows(sq) %>%
arrange(prop.mass)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
#Load some libraries.
library(tidyverse)
library(vegan)
library(raster)
library(sf)
library(landscapemetrics)
library(broom)
library(knitr)
library(kableExtra)
library(GGally)
library(extrafont)
library(QuantPsyc)
# Area is in hectares.
landscape <- data.frame(
size=c('PFA', 'breeding area', 'home range', 'maximum range'),
area=c(60, 200, 3800, 15600)
)
# Convert area in hectares to radii in meters.
landscape <- landscape %>% mutate(radius=sqrt(area*10000/pi))
landscape
# Read in the data.
occupancy <- read_csv('../data/processed/occupancy_sc.csv')
# Calculate number of years NOGO detected out of number of years surveyed.
territory.quality <- occupancy %>% pivot_longer(-c(site, name), names_to='year', values_to='status') %>%
filter(status > 0) %>%
group_by(site, status) %>%
add_tally() %>%
distinct(site, status, .keep_all=TRUE) %>%
select(-year) %>%
pivot_wider(names_from=status, values_from=n, values_fill=0) %>%
ungroup() %>% rowwise(site, name) %>%
mutate(years.surveyed=sum(c(`3`, `2`, `1`)),
years.detect=sum(c(`3`, `2`)),
years.no.detect=years.surveyed-years.detect,
quality.index=years.detect/years.surveyed) %>%
select(site, name, years.surveyed, years.detect, years.no.detect, quality.index)
# Look at it.
territory.quality
# Read in the data.
nests <- read_csv('../data/processed/sc_nests.csv')
# Calculate a centroid for each site.
centroids <- nests %>% group_by(site) %>%
mutate(xcoord=mean(xcoord), ycoord=mean(ycoord)) %>%
distinct(site, name, xcoord, ycoord) %>% ungroup()
# Make it a spatial object for later.
sites.sf <- centroids %>%
st_as_sf(coords=c('xcoord', 'ycoord')) %>%
st_set_crs('+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs')
# Also make a list of site names for later.
site.names <- sites.sf$site
# Load all the rasters.
source('../src/load_rasters.R')
# Calculate metrics for each site.
source('../src/calc_land_metrics.R')
# Load in a list of site names.
site.names <- read_csv('../data/processed/site_abbreviations.csv')
# Join the data together.
data <- full_join(site.names, bec.landscape.metrics, by=c('site'='nest')) %>%
full_join(suitable.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(landcover.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(hsi.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(gap.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(canopy.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(territory.quality, by=c('site', 'name'))
write_csv(data, '../data/processed/landscape_metrics_zeroes.csv')
