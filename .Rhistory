knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load up some libraries.
library(tidyver)
# Load up some libraries.
library(tidyverse)
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv')
source('../src/prey_attributes.R')
head(items)
View(items)
items <- items %>% mutate(species=case_when(
genus == 'Tamiasciurus' & species == 'sp' ~ 'douglasii',
TRUE ~ species
))
View(items)
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv')
source('../src/prey_attributes.R')
head(items)
items <- items %>% mutate(common=case_when(
genus == 'Tamiasciurus' & species == 'sp' ~ 'Douglass squirrel',
TRUE ~ common
))
items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count)
items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct()
items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
install.packages('factorextra')
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load up some libraries.
library(tidyverse)
# Import the data.
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv')
source('../src/prey_attributes.R')
head(items)
items <- items %>% mutate(common=case_when(
genus == 'Tamiasciurus' & species == 'sp' ~ 'Douglass squirrel',
TRUE ~ common
))
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
by.site
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load up some libraries.
library(tidyverse)
# Import the data.
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv')
source('../src/prey_attributes.R')
head(items)
items <- items %>% mutate(common=case_when(
genus == 'Tamiasciurus' & species == 'sp' ~ 'Douglass squirrel',
TRUE ~ common
))
install.packages('factorextra')
prcomp()
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
by.site
items <- items %>% mutate(common=case_when(
genus == 'Tamiasciurus' & species == 'sp' ~ 'Douglass squirrel',
TRUE ~ common
))
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
by.site
prcomp(by.site, scale=TRUE)
class(by.site$site)
ncols(by.site)
ncol(by.site)
by.site[, 2:ncol(by.site)]
class(by.site[, 2:ncol(by.site)])
prcomp(by.site[, 2:ncol(by.site)], scale=TRUE)
by.site <- by.site %>% column_to_rownames(var='site')
# Convert site names to row names.
by.site <- by.site %>% column_to_rownames(var='site')
# Make the PCA.
diet.pca <- prcomp(by.site, center=TRUE, scale=TRUE)
# Look at it.
diet.pca
# How'd it come out?
suymmary(diet.pca)
# How'd it come out?
summary(diet.pca)
View(by.site)
str(diet.pca)
data(mtcars)
head(mtcars)
mtcars.pca <- prcomp(mtcars[,c(1:7,10,11)], center = TRUE,scale. = TRUE)
summary(mtcars.pca)
head(by.site)
str(mtcars)
str(by.site)
class(mtcars$mpg)
class(by.site$`band-tailed pigeon`)
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=as.numeric(count), values_fill=list(count=0))
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
# Convert site names to row names.
by.site <- by.site %>% column_to_rownames(var='site') %>%
as.numeric()
as.numeric(by.site)
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
by.site %>% unlist()
class(by.site)
by.site %>% ungroup()
by.site %>% ungroup() %>%
mutate(where(is.integer), as.numeric)
by.site %>% ungroup() %>%
mutate(across(where(is.integer), as.numeric))
# Convert site names to row names.
by.site <- by.site %>% column_to_rownames(var='site')
test <- by.site %>% ungroup() %>%
mutate(across(where(is.integer), as.numeric))
str(test)
prcomp(test)
prcomp(mtcars)
prcomp(mtcars[,c(1:7,10,11)])
prcomp(test)
# Make the PCA.
diet.pca <- prcomp(by.site, center=TRUE, scale=TRUE)
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
# Look at it.
by.site
# Convert site names to row names.
by.site <- by.site %>% column_to_rownames(var='site')
# Make the PCA.
diet.pca <- prcomp(by.site, center=TRUE, scale=TRUE)
# How'd it come out?
summary(diet.pca)
str(diet.pca)
devtools::install_github("vqv/ggbiplot")
install.packages("devtools")
install_github("vqv/ggbiplot")
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
library(ggplot2)
ggbiplot(diet.pca)
ggbiplot(diet.pca, labels=rownames(by.site))
ggbiplot(diet.pca, labels=rownames(by.site))
ggbiplot(diet.pca, labels=rownames(by.site)) +
theme_classic()
ggbiplot(diet.pca, labels=rownames(by.site)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load up some libraries.
library(tidyverse)
library(ggplot2)
library(ggbiplot) # This is experimental and must be installed from GitHub.
# Import the data.
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv')
source('../src/prey_attributes.R')
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv')
source('../src/prey_attributes.R')
View(items)
head(items)
items <- items %>% mutate(common=case_when(
genus == 'Tamiasciurus' & species == 'sp' ~ 'Douglass squirrel',
TRUE ~ common
))
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
# Load up some libraries.
library(tidyverse)
library(ggplot2)
library(ggbiplot) # This is experimental and must be installed from GitHub.
library(dplyr)
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
summarize(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
dplyr::mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
install.packages('conflicted')
library(conflicted)
# Resolve conflicts.
conflict_prefer('mutate', 'dplyr')
conflict_prefer('select', 'dplyr')
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
dplyr::select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
# Look at it.
by.site
# Convert site names to row names.
by.site <- by.site %>% column_to_rownames(var='site')
# Make the PCA.
diet.pca <- prcomp(by.site, center=TRUE, scale=TRUE)
# How'd it come out?
summary(diet.pca)
str(diet.pca)
ggbiplot(diet.pca, labels=rownames(by.site)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
head(items)
by.site %>% select(-`average small item`)
by.site %>% select(-`average small item`, -`average medium item`)
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv')
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv', guess_max=7000)
source('../src/prey_attributes.R')
conflict_prefer('arrange', 'dplyr')
source('../src/prey_attributes.R')
conflict_prefer('filter', 'dplyr')
source('../src/prey_attributes.R')
conflict_prefer('summarise', 'dplyr')
source('../src/prey_attributes.R')
conflict_prefer('summarize', 'dplyr')
source('../src/prey_attributes.R')
head(items)
items <- items %>% mutate(common=case_when(
genus == 'Tamiasciurus' & species == 'sp' ~ 'Douglas squirrel',
TRUE ~ common
))
# Twist and reorganize the data.
by.site <- items %>% group_by(site, common) %>%
mutate(count=n()) %>%
select(site, common, count) %>%
distinct() %>%
pivot_wider(names_from=common, values_from=count, values_fill=list(count=0))
# Look at it.
by.site
# Convert site names to row names.
by.site <- by.site %>% column_to_rownames(var='site')
# Make the PCA.
diet.pca <- prcomp(by.site, center=TRUE, scale=TRUE)
# How'd it come out?
summary(diet.pca)
str(diet.pca)
ggbiplot(diet.pca, labels=rownames(by.site)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
# Make a new PCA.
diet.pca.2 <- prcomp(by.site.2, center=TRUE, scale=TRUE)
# Remove unidentified items.
by.site.2 <- by.site %>% select(-`average small item`, `average medium item`)
# Make a new PCA.
diet.pca.2 <- prcomp(by.site.2, center=TRUE, scale=TRUE)
# Plot the new PCA.
ggbiplot(diet.pca, labels=rownames(by.site)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
# Plot the new PCA.
ggbiplot(diet.pca.2, labels=rownames(by.site)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
View(diet.pca)
diet.pca.2
str(diet.pca.2)
str(diet.pca.2)$x
diet.pca.2$x
size <- items %>% filter(class != 'Unknown') %>%
group_by(site, group) %>%
mutate(count=n()) %>%
select(site, group, count) %>%
distinct() %>%
pivot_wider(names_from=group, values_from=count, values_fill=list(count=0))
View(size)
size <- size %>% column_to_rownames(var='site')
size.pca <- prcomp(size, center=TRUE, scale=TRUE)
ggbiplot(size.pca, labels=rownames(size)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
to.genus <- items %>% filter(genus != 'Unknown') %>%
group_by(site, genus, species) %>%
mutate(count=n()) %>%
select(site, genus, species, count) %>%
unite(name, 2:3, sep=' ') %>%
distinct() %>%
pivot_wider(names_from=names, values_from=count, values_fill=list(count=0))
to.genus <- items %>% filter(genus != 'Unknown') %>%
group_by(site, genus, species) %>%
mutate(count=n()) %>%
select(site, genus, species, count) %>%
unite(name, 2:3, sep=' ') %>%
distinct() %>%
pivot_wider(names_from=name, values_from=count, values_fill=list(count=0))
View(to.genus)
to.genus <- to.genus %>% column_to_rownames(var='site')
genus.pca <- prcomp(to.genus, center=TRUE, scale=TRUE)
ggbiplot(genus.pca, labels=rownames(size)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
# Select only items identified at least to genus.
to.genus <- items %>% filter(genus != 'Unknown') %>%
group_by(site, genus, species) %>%
mutate(count=n()) %>%
select(site, genus, species, count) %>%
unite(name, 2:3, sep=' ') %>%
distinct() %>%
pivot_wider(names_from=name, values_from=count, values_fill=list(count=0))
# Make site names row names.
to.genus <- to.genus %>% column_to_rownames(var='site')
# Make the PCA.
genus.pca <- prcomp(to.genus, center=TRUE, scale=TRUE)
# Check it out.
ggbiplot(genus.pca, labels=rownames(size)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
# Check it out.
ggbiplot(genus.pca, labels=rownames(size)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
ggbiplot(genus.pca, labels=rownames(size)) +
xlim(-2, 2) +
ylim(-2, 2) +
theme_classic()
summary(genus.pca)
36+24
29
29+26
str(diet.pca.2)
summary(diet.pca.2)
30+25
