# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/Gowan_2020/100RECNX_Gowan 2020/'
# What site is it?
site <- 'GOW'
# Where are the pictures going?
# END WITH A FORWARD SLASH
path.out <- 'D:/'
# What year is the data from?
year <- '2020'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/SaintVincent_2020/100RECNX_StVincents 2020/'
# What site is it?
site <- 'STV'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/Gravell_2020/100RECNX_Gravell 2020/'
# What site is it?
site <- 'GRV'
# What year is the data from?
year <- '2020'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/Gravell_2020/101RECNX_Gravell 2020/'
# What year is the data from?
year <- '2020-1'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/Gravell_2020/102RECNX_Gravell 2020/'
# What year is the data from?
year <- '2020-2'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/Gravell_2020/103RECNX_Gravell 2020/'
# What year is the data from?
year <- '2020-3'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/Gravell_2020/104RECNX_Gravell 2020/'
# What year is the data from?
year <- '2020-4'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/PeersCreek_2020/100RECNX_Peers 2020/'
# What site is it?
site <- 'PCR'
# What year is the data from?
year <- '2020'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
View(photo.df)
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/PeersCreek_2020/101RECNX_Peers 2020/'
# What year is the data from?
year <- '2020-1'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Fill in these three things:
# Where are the pictures now?
path.in <- 'E:/RECONYX/RubyLake_2020/100RECNX_Ruby 2020/'
# What site is it?
site <- 'RLK'
# What year is the data from?
year <- '2020'
# Make a new directory for the files.
site.dir <- paste0(path.out, site, year)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', order='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, year, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Copy the photos into the appropriate directories.
walk2(photo.df$week, photo.df$filename, function(week, filename) {
target <-  paste0(site.dir, '/', week, '/', filename)
source <- file.path(path.in, filename)
file.copy(source, target)
})
# Import conflict settings.
source('../src/conflicted.R')
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
plot(cars)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
#Load some libraries.
library(tidyverse)
# Bring in diet data.
source('../src/prey_attributes_revised.R')
# Add grouping variable.
diet.items <- diet.items %>% mutate(group=case_when(
class == 'Aves' & family == 'Phasianidae' ~ 'grouse',
class == 'Aves' & family == 'Corvidae' ~ 'corvid',
class == 'Aves' & family == 'Turdidae' ~ 'thrush',
class == 'Aves' ~ 'bird',
class == 'Mammalia' & genus == 'Tamiasciurus' ~ 'squirrel',
class == 'Mammalia' & genus == 'Lepus' ~ 'hare',
class == 'Mammalia' ~ 'mammal',
TRUE ~ 'unknown'
))
# Bring in zone data.
centroids <- read_csv('../data/interim/zone_centroid_sites.csv')
# Make a frequency table of groups for camera data.
freq.camera <- centroids %>%
select(site, zone) %>% right_join(diet.items, by=c('site')) %>%
filter(method == 'camera') %>%
group_by(zone, group) %>%
mutate(count=n()) %>%
select(zone, group, count) %>%
distinct() %>% ungroup() %>%
pivot_wider(names_from='group', values_from='count', values_fill=0) %>%
column_to_rownames(var='zone')
View(nest.list)
View(freq.camera)
chi.camera <- chisq.test(freq.camera, correct=FALSE, simulate.p.value=TRUE)
chi.camera
freq.camera
chi.camera$stdres
# Raw residuals.
chi.camera$residuals
# Standardized residuals.
chi.camera$stdres
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
#Load some libraries.
library(tidyverse)
# Bring in diet data.
source('../src/prey_attributes_revised.R')
# Add grouping variable.
diet.items <- diet.items %>% mutate(group=case_when(
class == 'Aves' & family == 'Phasianidae' ~ 'grouse',
class == 'Aves' & family == 'Corvidae' ~ 'corvid',
class == 'Aves' & family == 'Turdidae' ~ 'thrush',
class == 'Aves' ~ 'bird',
class == 'Mammalia' & genus == 'Tamiasciurus' ~ 'squirrel',
class == 'Mammalia' & genus == 'Lepus' ~ 'hare',
class == 'Mammalia' ~ 'mammal',
TRUE ~ 'unknown'
))
# Bring in zone data.
centroids <- read_csv('../data/interim/zone_centroid_sites.csv')
# Make a frequency table of groups for camera data.
freq.camera <- centroids %>%
select(site, zone) %>% right_join(diet.items, by=c('site')) %>%
filter(method == 'camera') %>%
group_by(zone, group) %>%
mutate(count=n()) %>%
select(zone, group, count) %>%
distinct() %>% ungroup() %>%
pivot_wider(names_from='group', values_from='count', values_fill=0) %>%
column_to_rownames(var='zone')
freq.camera
chi.camera <- chisq.test(freq.camera, correct=FALSE, simulate.p.value=TRUE)
chi.camera
# Raw residuals.
chi.camera$residuals
# Standardized residuals.
chi.camera$stdres
print(freq.camera)
