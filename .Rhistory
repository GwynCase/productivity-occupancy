mcp.area(percent=95, unin='m', unout='ha', plotit=FALSE)
vi.sites <- read_csv('../data/processed/vi_occupancy_2018-2019.csv')
sc.sites <- read_csv('../data/processed/sc_occupancy_2018-2019.csv')
dt <- read.csv('../data/raw/total_data_twisted.csv', stringsAsFactors=FALSE) %>%
replace(is.na(.), ' ')
# kable(dt, 'latex', booktabs=T, caption='Summary of available sites',
#       table.envir = "capctable",
#       col.names=
#         c('Site', 'Name', 'Type', 'Date', 'N', 'Date', 'N', 'Date', 'N', 'Date', 'Comments')) %>%
#   kable_styling(latex_options=c('scale_down')) %>%
#   add_header_above(c(' '=3, 'Physical remains'=2, 'Cameras'=2, 'Telemetry'=2, 'Occupancy'=1, ' '=1)) %>%
#   landscape(margin = c('1cm'))
kable(dt, 'latex', booktabs=T, caption='Summary of available data',
table.envir = "capctable",
col.names=
c('Site', 'Name', 'Int', 'Ext', 'Phys. rem.', 'Cameras', '2018 M', '2018 F', '2019 M', '2019 F', '2015', '2016', '2017', '2018', '2019')) %>%
kable_styling(latex_options=c('scale_down', 'striped')) %>%
footnote(general='Additional physical remains may be available from 2018 and from Vancouver Island') %>%
add_header_above(c(' '=2, 'Type'=2, 'Diet - 2019 only'=2, 'Telemetry'=4, 'Occupancy'=5)) %>%
landscape(margin = c('1cm'))
# All occupancy data
read_csv('../data/processed/all_sites_occupancy.csv') %>%
kable('latex', booktabs=T, caption='South Coast and Vancouver Island occupancy data',
table.envir='capctable',
col.names=c('Site', 'Region', '2018', '2019')) %>%
kable_styling(latex_options=c('striped')) %>%
footnote(general='1 = no birds observed, 2 = birds present, no evidence of breeding, 3 = active, evidence of breeding')
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load some libraries.
library('tidyverse')
df <- read_csv('../data/interim/the_big_list_of_nests.csv')
# Load some libraries.
library('tidyverse')
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load in the data.
df <- read_csv('../data/interim/big_list_of_nests.csv')
# Load in the data.
df <- read_csv('../data/external/SC_nest_database.csv')
# Load in the data.
df <- read_csv('../data/interim/the_big_list_of_nests.csv')
View(df)
df %>% mutate(score=0)
View(df)
# Load in the data.
df <- read_csv('../data/interim/the_big_list_of_nests.csv') %>%
dplyr::select(-starts_with('X'))
View(df)
View(df)
# Load in the data.
df <- read_csv('../data/interim/the_big_list_of_nests.csv') %>%
dplyr::select(-starts_with('X')) %>%
rename(status.2013=Occup2013, status.2014=Occup2014)
df %>% mutate(score=0)
df2 <- df %>% mutate(score=0) %>% dplyr::select(name, score, everything)
df %>% mutate(score=0) %>% dplyr::select(name, score, everything())
df %>% group_by(name) %>%
mutate(lat.centroid=mean(lat), lon.centroid=mean(lon))
df2 <- df %>% group_by(name) %>%
mutate_at(c('lat', 'lon'), mean)
View(df2)
df2 <- df %>% dplyr::select(name, lat, lon, zone, access, telemetry, cameras,
remains, starts_with('status')) %>%
group_by(name) %>%
mutate_at(c('lat', 'lon'), mean) %>%
mutate_at(vars(starts_with('status')), max) %>%
mutate_at(c('telemetry', 'cameras', 'remains'), max)
df2 <- df %>% dplyr::select(name, lat, lon, zone, access, telemetry, cameras,
remains, starts_with('status')) %>%
group_by(name) %>%
mutate_at(c('lat', 'lon'), mean) %>%
mutate_at(vars(starts_with('status')), max) %>%
mutate_at(c('telemetry', 'cameras', 'remains'), max) %>%
distinct()
sites <- df %>% dplyr::select(name, lat, lon, zone, access, telemetry, cameras,
remains, starts_with('status')) %>%
group_by(name) %>%
mutate_at(c('lat', 'lon'), mean) %>%
mutate_at(vars(starts_with('status')), max) %>%
mutate_at(c('telemetry', 'cameras', 'remains'), max) %>%
distinct()
sites
sites2 %>% mutate(score=0, score=case_when(
telemtry == 1 ~ score + 3,
TRUE ~ score
))
sites2 <- sites %>% mutate(score=0, score=case_when(
telemtry == 1 ~ score + 3,
TRUE ~ score
))
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
))
View(sites2)
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
cameras == 1 ~ score + 2,
TRUE ~ score
))
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 2,
TRUE ~ score
))
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ 1,
TRUE ~ score
))
max(sites$score)
sites$score
sites <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ 1,
TRUE ~ score
))
sites$score
max(sites$score)
sites <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
access %within% c('h', 'b', 'q') ~ score - 6,
TRUE ~ score
))
sites <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
access %in% c('h', 'b', 'q') ~ score - 6,
TRUE ~ score
))
sites %>% filter(access %in% c('b', 'h', 'q'))
sites %>% filter(access %in% c('b', 'h', 'q')) %>%
filter(status.2019 > 0)
sites %>% filter(access %in% c('b', 'h', 'q')) %>%
filter(status.2019 > 0) %>%
filter(status.2018 > 0)
sites %>% filter(access %in% c('b', 'h', 'q')) %>%
filter(status.2019 > 0) %>%
filter(status.2018 > 0) %>%
select(name, score, everything())
sites %>% select(name, score) %>%
arrange(score)
sites %>% select(name, score) %>%
arrange(desc(score))
View(sites)
sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
select(name, score, everything())
sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
select(name, score, everything()) %>%
sample_n(10)
sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
select(name, score, everything()) %>%
sample_n(size=10)
sites2 %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
select(name, score, everything())
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
select(name, score, everything())
View(sites2)
sample_n(sites2, 10)
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
select(name, score, everything()) %>%
mutate(score=case_when(
cameras == 1 ~ score + 2,
TRUE ~ score
))
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
select(name, score, everything()) %>%
mutate(score=case_when(
cameras == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 1,
TRUE ~ score
))
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
select(name, score, everything()) %>%
mutate(score=case_when(
cameras == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
))
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 3,
TRUE ~ score
)) %>%
select(name, score, everything()) %>%
mutate(score=case_when(
cameras == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
access %in% c('h', 'b', 'q') ~ score - 6,
TRUE ~ score
))
sites2 <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 4,
TRUE ~ score
)) %>%
select(name, score, everything()) %>%
mutate(score=case_when(
cameras == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
access %in% c('h', 'b', 'q') ~ score - 11,
TRUE ~ score
))
sites <- sites %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 4,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
access %in% c('h', 'b', 'q') ~ score - 11,
TRUE ~ score
))
sites %>% filter(score > 0) %>%
arrange(desc(score))
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
exp.data <- read_csv('../data/raw/data_wishlist_2020.csv')
exp.data
dt <- read_csv('../data/interim/the_big_list_of_nests.csv') %>%
dplyr::select(-starts_with('X')) %>%
rename(status.2013=Occup2013, status.2014=Occup2014) %>%
dplyr::select(name, zone, access, telemetry, cameras, remains, starts_with('status')) %>%
group_by(name) %>% mutate_at(vars(starts_with('status')), max) %>%
mutate_at(c('telemetry', 'cameras', 'remains'), max) %>%
distinct()
sites <- dt %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 4,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
access %in% c('h', 'b', 'q') ~ score - 11,
TRUE ~ score
)) %>%
filter(score > 0) %>%
arrange(desc(score))
View(sites)
sites <- dt %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 4,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
access %in% c('h', 'b', 'q') ~ score - 11,
TRUE ~ score
)) %>%
filter(score > 0 | remains == 1) %>%
arrange(desc(score))
sites <- dt %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 4,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
access %in% c('h', 'b', 'q') ~ score - 11,
TRUE ~ score
)) %>%
filter(score > 0 | remains == 1) %>%
dplyr::select(name, score, everything()) %>%
arrange(desc(score))
kable(sites, caption='Summary of available data for South Coast sites',
col.names=
c('Site', 'Priority', 'Zone', 'Access', 'Telemetry', 'Cameras', 'Phys. remains', '2013', '2014', '2015', '2016', '2017', '2018', '2019'))
library(knitr)
kable(sites, caption='Summary of available data for South Coast sites',
col.names=
c('Site', 'Priority', 'Zone', 'Access', 'Telemetry', 'Cameras', 'Phys. remains', '2013', '2014', '2015', '2016', '2017', '2018', '2019'))
# dt <- read.csv('../data/raw/total_data_twisted.csv', stringsAsFactors=FALSE) %>%
replace(is.na(.), ' ')
# dt <- read.csv('../data/raw/total_data_twisted.csv', stringsAsFactors=FALSE) %>%
#  replace(is.na(.), ' ')
dt <- read_csv('../data/interim/the_big_list_of_nests.csv') %>%
dplyr::select(-starts_with('X')) %>%
rename(status.2013=Occup2013, status.2014=Occup2014) %>%
dplyr::select(name, zone, access, telemetry, cameras, remains, starts_with('status')) %>%
group_by(name) %>% mutate_at(vars(starts_with('status')), max) %>%
mutate_at(c('telemetry', 'cameras', 'remains'), max) %>%
distinct()
sites <- dt %>% mutate(score=0, score=case_when(
telemetry == 1 ~ score + 4,
TRUE ~ score
)) %>%
mutate(score=case_when(
cameras == 1 ~ score + 3,
TRUE ~ score
)) %>%
mutate(score=case_when(
remains == 1 ~ score + 2,
TRUE ~ score
)) %>%
mutate(score=case_when(
zone == 'cs' ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
status.2018 > 0 & status.2019 > 0 ~ score + 1,
TRUE ~ score
)) %>%
mutate(score=case_when(
access %in% c('h', 'b', 'q') ~ score - 11,
TRUE ~ score
)) %>%
filter(score > 0 | remains == 1) %>%
dplyr::select(name, score, everything()) %>%
arrange(desc(score))
kable(sites, 'latex', booktabs=T, caption='Summary of available data for South Coast sites',
table.envir = "capctable",
col.names=
c('Site', 'Priority', 'Zone', 'Access', 'Telemetry', 'Cameras', 'Phys. remains', '2013', '2014', '2015', '2016', '2017', '2018', '2019')) %>%
kable_styling(latex_options=c('scale_down', 'striped')) %>%
footnote(general='Zone: tz=transition, cs=coastal; Access: t=truck, b=boat, h=helicopter.') %>%
footnote(general='Additional physical remains may be available from 2018 and from Vancouver Island') %>%
add_header_above(c(' '=4, 'Movement'=1, 'Diet - 2019 only'=2, 'Occupancy'=7)) %>%
landscape(margin = c('1cm'))
library(kableExtra)
kable(sites, 'latex', booktabs=T, caption='Summary of available data for South Coast sites',
table.envir = "capctable",
col.names=
c('Site', 'Priority', 'Zone', 'Access', 'Telemetry', 'Cameras', 'Phys. remains', '2013', '2014', '2015', '2016', '2017', '2018', '2019')) %>%
kable_styling(latex_options=c('scale_down', 'striped')) %>%
footnote(general='Zone: tz=transition, cs=coastal; Access: t=truck, b=boat, h=helicopter.') %>%
footnote(general='Additional physical remains may be available from 2018 and from Vancouver Island') %>%
add_header_above(c(' '=4, 'Movement'=1, 'Diet - 2019 only'=2, 'Occupancy'=7)) %>%
landscape(margin = c('1cm'))
