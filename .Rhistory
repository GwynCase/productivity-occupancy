proportion.mammal.cameras
# Calculate biomass and counts for mammalian prey.
proportion.mammal.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Mammalia') %>%
mutate(mass.mm=sum(mass), count.mm=n(),
prop.mm.mass=mass.mm/total.mass, prop.mm.count=count.mm/total.count) %>%
select(nest, prop.mm.mass, prop.mm.count) %>% distinct()
proportion.mammal.cameras
proportion.mammal.cameras %>% select(prop.mm.mass) %>%
ggplot(aes(x=prop.mm.mass)) %>%
geom_density()
proportion.mammal.cameras %>% select(prop.mm.mass) %>%
ggplot(aes(x=prop.mm.mass)) +
geom_density()
proportion.mammal.cameras %>% pivot_longer(!nest, names_to='metric', values_to='value')
proportion.mammal.cameras %>% pivot_longer(!nest, names_to='metric', values_to='value') %>%
ggplot(aes(x=value, group=metric)) +
geom_density()
proportion.mammal.cameras %>% pivot_longer(!nest, names_to='metric', values_to='value') %>%
ggplot(aes(x=value, group=metric)) +
geom_density() +
theme_classic()
proportion.mammal.cameras %>% pivot_longer(!nest, names_to='metric', values_to='value') %>%
ggplot(aes(x=value, group=metric, fill=metric)) +
geom_density(alpha=0.5) +
theme_classic()
proportion.mammal.cameras %>% pivot_longer(!nest, names_to='metric', values_to='value') %>%
ggplot(aes(x=value)) +
geom_density() +
theme_classic()
proportion.mammal.cameras %>% pivot_longer(!nest, names_to='metric', values_to='value') %>%
shapiro.test(.$value)
proportion.mammal.cameras %>% pivot_longer(!nest, names_to='metric', values_to='value') %>%
shapiro.test(., .$value)
# Calculate biomass and counts for mammalian prey.
proportion.mammal.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Mammalia') %>%
mutate(mass.mm=sum(mass), count.mm=n(),
prop.mm.mass=mass.mm/total.mass, prop.mm.count=count.mm/total.count) %>%
select(nest, prop.mm.mass, prop.mm.count) %>% distinct() %>%
pivot_longer(!nest, names_to='metric', values_to='value')
shapiro.test(proportion.mammal.cameras$value)
# Calculate biomass and counts for mammalian prey.
proportion.mammal.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Mammalia') %>%
mutate(mass.mm=sum(mass), count.mm=n(),
prop.mm.mass=mass.mm/total.mass, prop.mm.count=count.mm/total.count) %>%
select(nest, prop.mm.mass, prop.mm.count) %>% distinct() %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Look at the distribution.
proportion.mammal.cameras %>% pivot_longer(!nest, names_to='metric', values_to='value') %>%
ggplot(aes(x=value)) +
geom_density() +
theme_classic()
# Calculate biomass and counts for mammalian prey.
proportion.mammal.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Mammalia') %>%
mutate(mass.mm=sum(mass), count.mm=n(),
prop.mm.mass=mass.mm/total.mass, prop.mm.count=count.mm/total.count) %>%
select(nest, prop.mm.mass, prop.mm.count) %>% distinct() %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Look at the distribution.
proportion.mammal.cameras %>%
ggplot(aes(x=value)) +
geom_density() +
theme_classic()
# Check for normality.
shapiro.test(proportion.mammal.cameras$value)
proportion.mammal.cameras
proportion.mammal.cameras.wide <- pivot_wider(names_from=metric, values_from=value)
proportion.mammal.cameras.wide <- proportion.mammal.cameras %>%
pivot_wider(names_from=metric, values_from=value)
proportion.mammal.cameras.wide
t.test(proportion.mammal.cameras.wide$prop.mm.mass, proportion.mammal.cameras.wide$prop.mm.count)
var.test(proportion.mammal.cameras.wide$prop.mm.mass, proportion.mammal.cameras.wide$prop.mm.count)
qqnorm(proportion.mammal.cameras$value)
qqline(proportion.mammal.cameras$value)
# Run a t-test.
t.test(proportion.mammal.cameras.wide$prop.mm.mass, proportion.mammal.cameras.wide$prop.mm.count)
# Calculate biomass and counts for mammalian prey.
proportion.avian.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), count.av=n(),
prop.av.mass=mass.av/total.mass, prop.av.count=count.av/total.count)
# Calculate biomass and counts for mammalian prey.
proportion.avian.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), count.av=n(),
prop.av.mass=mass.av/total.mass, prop.av.count=count.av/total.count) %>%
select(nest, prop.mm.mass, prop.mm.count) %>% distinct()
# Calculate biomass and counts for mammalian prey.
proportion.avian.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), count.av=n(),
prop.av.mass=mass.av/total.mass, prop.av.count=count.av/total.count) %>%
select(nest, prop.av.mass, prop.av.count) %>% distinct()
# Also in long format.
proportion.avian.cameras.long <- proportion.avian.cameras %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Do the same with proportion avian biomass/counts.
# Calculate biomass and counts for mammalian prey.
proportion.avian.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), count.av=n(),
prop.av.mass=mass.av/total.mass, prop.av.count=count.av/total.count) %>%
select(nest, prop.av.mass, prop.av.count) %>% distinct()
proportion.avian.cameras
# Also in long format.
proportion.avian.cameras.long <- proportion.avian.cameras %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Look at the distribution.
qqnorm(proportion.avian.cameras.long$value)
qqline(proportion.avian.cameras.long$value)
# Check for normality.
shapiro.test(proportion.avian.cameras.long$value)
# Run a t-test.
t.test(proportion.avian.cameras$prop.av.mass, proportion.avian.cameras$prop.av.count)
# Do the same with proportion avian biomass/counts.
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Aves') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(nest, prop.sq.mass, prop.sq.count) %>% distinct()
proportion.squirrel.cameras
# Also in long format.
proportion.squirrel.cameras.long <- proportion.squirrel.cameras %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Look at the distribution.
qqnorm(proportion.squirrel.cameras.long$value)
qqline(proportion.squirrel.cameras.long$value)
# Check for normality.
shapiro.test(proportion.squirrel.cameras.long$value)
# Run a t-test.
t.test(proportion.squirrel.cameras$prop.av.mass, proportion.squirrel.cameras$prop.av.count)
# Do the same with proportion avian biomass/counts.
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Aves') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(nest, prop.sq.mass, prop.sq.count) %>% distinct()
proportion.squirrel.cameras
# Also in long format.
proportion.squirrel.cameras.long <- proportion.squirrel.cameras %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Look at the distribution.
qqnorm(proportion.squirrel.cameras.long$value)
qqline(proportion.squirrel.cameras.long$value)
# Check for normality.
shapiro.test(proportion.squirrel.cameras.long$value)
# Run a t-test.
t.test(proportion.squirrel.cameras$prop.sq.mass, proportion.squirrel.cameras$prop.sq.count)
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.remains <- diet.items %>%
filter(method == 'remains') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Aves') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(nest, prop.sq.mass, prop.sq.count) %>% distinct()
proportion.squirrel.remains
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Aves') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(nest, prop.sq.mass, prop.sq.count) %>% distinct()
proportion.squirrel.remains
# Calculate biomass and counts for mammalian prey.
diet.items %>%
filter(method == 'remains') #%>%
# Calculate biomass and counts for mammalian prey.
diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass), total.count=n()) %>% view()
diet.items %>%
filter(method == 'remains') %>% sum(mass)
# Calculate biomass and counts for mammalian prey.
diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(as.numeric(mass)), total.count=n()) %>% view()
class(diet.items$mass)
# Calculate biomass and counts for mammalian prey.
diet.items %>%
filter(method == 'remains') %>%
group_by(site) %>%
mutate(total.mass=sum(mass), total.count=n()) %>% view()
# Calculate biomass and counts for mammalian prey.
diet.items %>%
filter(method == 'remains') %>%
# group_by(site) %>%
mutate(total.mass=sum(mass), total.count=n()) %>% view()
# Calculate biomass and counts for mammalian prey.
diet.items %>%
filter(method == 'remains') %>%
# group_by(site) %>%
mutate(total.mass=sum(mass, na.rm=TRUE), total.count=n()) %>% view()
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(nest, prop.sq.mass, prop.sq.count) %>% distinct()
# Do the same with proportion avian biomass/counts.
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(nest, prop.sq.mass, prop.sq.count) %>% distinct()
proportion.squirrel.cameras
# Also in long format.
proportion.squirrel.cameras.long <- proportion.squirrel.cameras %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Look at the distribution.
qqnorm(proportion.squirrel.cameras.long$value)
qqline(proportion.squirrel.cameras.long$value)
# Check for normality.
shapiro.test(proportion.squirrel.cameras.long$value)
# Run a t-test.
t.test(proportion.squirrel.cameras$prop.sq.mass, proportion.squirrel.cameras$prop.sq.count)
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE), total.count=n()) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(nest, prop.sq.mass, prop.sq.count) %>% distinct()
proportion.squirrel.remains
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE), total.count=n()) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(prop.sq.mass, prop.sq.count) %>% distinct()
proportion.squirrel.remains
# Also in long format.
proportion.squirrel.remains.long <- proportion.squirrel.cameras %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Do the same with proportion avian biomass/counts.
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE), total.count=n()) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(prop.sq.mass, prop.sq.count) %>% distinct()
proportion.squirrel.remains
# Also in long format.
proportion.squirrel.remains.long <- proportion.squirrel.cameras %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Look at the distribution.
qqnorm(proportion.squirrel.remains.long$value)
qqline(proportion.squirrel.remains.long$value)
# Check for normality.
shapiro.test(proportion.squirrel.remains.long$value)
# Run a t-test.
t.test(proportion.squirrel.remains$prop.sq.mass, proportion.squirrel.remains$prop.sq.count)
# Calculate biomass and counts for mammalian prey.
diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), prop.sq.mass=mass.sq/total.mass) %>%
select(prop.sq.mass) %>% distinct()
# Calculate biomass and counts for mammalian prey.
diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), prop.sq.mass=mass.sq/total.mass) %>% view()
# Calculate biomass and counts for mammalian prey.
diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>% view()
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), prop.sq.mass=mass.sq/total.mass) %>%
select(prop.sq.mass) %>% distinct()
proportion.squirrel.remains
# Calculate biomass for mammals
proportion.mammal.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(class == 'Mammalia') %>%
mutate(mass.mm=sum(mass), prop.mm.mass=mass.mm/total.mass) %>%
select(prop.mm.mass) %>% distinct()
proportion.squirrel.remains
proportion.mammal.remains
# Do the same with proportion avian biomass/counts.
# Calculate biomass for squirrels.
proportion.squirrel.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), prop.sq.mass=mass.sq/total.mass) %>%
select(prop.sq.mass) %>% distinct()
proportion.squirrel.remains
# Calculate biomass for mammals
proportion.mammal.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(class == 'Mammalia') %>%
mutate(mass.mm=sum(mass), prop.mm.mass=mass.mm/total.mass) %>%
select(prop.mm.mass) %>% distinct()
proportion.mammal.remains
# Calculate biomass for birds
proportion.avian.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), prop.av.mass=mass.av/total.mass) %>%
select(prop.av.mass) %>% distinct()
proportion.avian.remains
proportion.squirrel.cameras$prop.sq.mass %>% summarize(mean())
proportion.squirrel.cameras$prop.sq.mass %>% mean()
proportion.avian.cameras$prop.av.mass %>% mean()
# Calculate biomass for birds
proportion.avian.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), prop.av.mass=mass.av/total.mass) %>%
select(prop.av.mass) %>% distinct()
proportion.avian.remains
proportion.avian.cameras$prop.av.mass %>% mean()
# Calculate biomass for mammals
proportion.mammal.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(class == 'Mammalia') %>%
mutate(mass.mm=sum(mass), prop.mm.mass=mass.mm/total.mass) %>%
select(prop.mm.mass) %>% distinct()
proportion.mammal.remains
proportion.mammal.cameras.wide$prop.mm.mass %>% mean()
# Do the same with proportion avian biomass/counts.
# Calculate biomass for squirrels.
proportion.squirrel.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), prop.sq.mass=mass.sq/total.mass) %>%
select(prop.sq.mass) %>% distinct()
proportion.squirrel.remains
proportion.squirrel.cameras$prop.sq.mass %>% mean()
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
# Load some libraries.
library(tidyverse)
library(lubridate)
library(vegan)
library(ggplot2)
# Bring in data.
source('../src/prey_attributes_revised.R')
# Calculate biomass and counts for mammalian prey.
proportion.mammal.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Mammalia') %>%
mutate(mass.mm=sum(mass), count.mm=n(),
prop.mm.mass=mass.mm/total.mass, prop.mm.count=count.mm/total.count) %>%
select(nest, prop.mm.mass, prop.mm.count) %>% distinct() %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Also in wide format.
proportion.mammal.cameras.wide <- proportion.mammal.cameras %>%
pivot_wider(names_from=metric, values_from=value)
proportion.mammal.cameras.wide
# Look at the distribution.
qqnorm(proportion.mammal.cameras$value)
qqline(proportion.mammal.cameras$value)
# Check for normality.
shapiro.test(proportion.mammal.cameras$value)
# Run a t-test.
t.test(proportion.mammal.cameras.wide$prop.mm.mass, proportion.mammal.cameras.wide$prop.mm.count)
# Do the same with proportion avian biomass/counts.
# Calculate biomass and counts for mammalian prey.
proportion.avian.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), count.av=n(),
prop.av.mass=mass.av/total.mass, prop.av.count=count.av/total.count) %>%
select(nest, prop.av.mass, prop.av.count) %>% distinct()
proportion.avian.cameras
# Also in long format.
proportion.avian.cameras.long <- proportion.avian.cameras %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Look at the distribution.
qqnorm(proportion.avian.cameras.long$value)
qqline(proportion.avian.cameras.long$value)
# Check for normality.
shapiro.test(proportion.avian.cameras.long$value)
# Run a t-test.
t.test(proportion.avian.cameras$prop.av.mass, proportion.avian.cameras$prop.av.count)
# Do the same with proportion avian biomass/counts.
# Calculate biomass and counts for mammalian prey.
proportion.squirrel.cameras <- diet.items %>%
filter(method == 'camera') %>%
group_by(nest) %>%
mutate(total.mass=sum(mass), total.count=n()) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), count.sq=n(),
prop.sq.mass=mass.sq/total.mass, prop.sq.count=count.sq/total.count) %>%
select(nest, prop.sq.mass, prop.sq.count) %>% distinct()
proportion.squirrel.cameras
# Also in long format.
proportion.squirrel.cameras.long <- proportion.squirrel.cameras %>%
pivot_longer(!nest, names_to='metric', values_to='value')
# Look at the distribution.
qqnorm(proportion.squirrel.cameras.long$value)
qqline(proportion.squirrel.cameras.long$value)
# Check for normality.
shapiro.test(proportion.squirrel.cameras.long$value)
# Run a t-test.
t.test(proportion.squirrel.cameras$prop.sq.mass, proportion.squirrel.cameras$prop.sq.count)
# Do the same with proportion avian biomass/counts.
# Calculate biomass for squirrels.
proportion.squirrel.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(mass.sq=sum(mass), prop.sq.mass=mass.sq/total.mass) %>%
select(prop.sq.mass) %>% distinct()
proportion.squirrel.remains
proportion.squirrel.cameras$prop.sq.mass %>% mean()
# Calculate biomass for mammals
proportion.mammal.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(class == 'Mammalia') %>%
mutate(mass.mm=sum(mass), prop.mm.mass=mass.mm/total.mass) %>%
select(prop.mm.mass) %>% distinct()
proportion.mammal.remains
proportion.mammal.cameras.wide$prop.mm.mass %>% mean()
# Calculate biomass for birds
proportion.avian.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), prop.av.mass=mass.av/total.mass) %>%
select(prop.av.mass) %>% distinct()
proportion.avian.remains
proportion.avian.cameras$prop.av.mass %>% mean()
# Calculate biomass for birds
proportion.avian.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), prop.av.mass=mass.av/total.mass) %>%
select(prop.av.mass) %>% distinct()
proportion.avian.remains %>% print()
proportion.avian.cameras$prop.av.mass %>% mean()
proportion.avian.cameras$prop.av.mass %>% mean() %>% print()
# Calculate biomass for birds
proportion.avian.remains <- diet.items %>%
filter(method == 'remains') %>%
mutate(total.mass=sum(mass, na.rm=TRUE)) %>%
filter(class == 'Aves') %>%
mutate(mass.av=sum(mass), prop.av.mass=mass.av/total.mass) %>%
select(prop.av.mass) %>% distinct()
proportion.avian.remains
proportion.avian.cameras$prop.av.mass %>% mean() %>% print()
