# Calculate percent counts of avian items for camera data for the entire study area.
count.avian.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(class == 'Aves') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Class = Aves
### Level = Nest
# Calculate mean percent avian biomass per nest.
percent.avian.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Aves') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of avian biomass per nest.
sd.avian.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Aves') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Class = Unknown
### Level = Study area
# Calculate percent unidentified biomass for camera data for the entire study area.
percent.unknown.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(class == 'Unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of unidentified items for camera data for the entire study area.
count.unknown.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(class == 'Unknown') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Class = Unknown
### Level = Nest
# Calculate mean percent unknown biomass per nest.
percent.unknown.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of unknown biomass per nest.
sd.unknown.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Group = Squirrels
### Level = Study area
# Calculate percent squirrel biomass for camera data for the entire study area.
percent.squirrel.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(group == 'squirrel') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of squirrels for camera data for the entire study area.
count.squirrel.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'squirrel') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Group = Squirrel
### Level = Nest
# Calculate mean percent squirrel biomass per nest.
percent.squirrel.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'squirrel') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of squirrel biomass per nest.
sd.squirrel.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'squirrel') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Group = Other mammals
### Level = Study area
# Calculate percent other mammal biomass for camera data for the entire study area.
percent.other.mammal.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(group == 'mammal') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of other mammals for camera data for the entire study area.
count.other.mammal.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'mammal') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Group = Other mammal
### Level = Nest
# Calculate mean percent other mammal biomass per nest.
percent.other.mammal.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'mammal') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of other mammal biomass per nest.
sd.other.mammal.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'mammal') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Group = Unknown
### Level = Study area
# Calculate percent unknown biomass for camera data for the entire study area.
percent.unk.gr.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(group == 'unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of unknown for camera data for the entire study area.
count.unk.gr.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'group') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Group = Unknown
### Level = Nest
# Calculate mean percent unknown biomass per nest.
percent.unk.gr.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of unknown biomass per nest.
sd.unk.gr.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'uknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Group = Thrushes
### Level = Study area
# Calculate percent other thrush biomass for camera data for the entire study area.
percent.thrush.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(group == 'thrush') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of other thrushes for camera data for the entire study area.
count.thrush.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'thrush') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Group = Thrush
### Level = Nest
# Calculate mean percent thrush biomass per nest.
percent.thrush.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'thrush') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of thrush biomass per nest.
sd.other.mammal.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'thrush') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Class = Aves
### Level = Study area
# Calculate percent avian biomass for camera data for the entire study area.
percent.avian.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(class == 'Aves') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of avian items for camera data for the entire study area.
count.avian.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(class == 'Aves') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Class = Aves
### Level = Nest
# Calculate mean percent avian biomass per nest.
percent.avian.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Aves') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of avian biomass per nest.
sd.avian.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Aves') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Class = Unknown
### Level = Study area
# Calculate percent unidentified biomass for camera data for the entire study area.
percent.unknown.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(class == 'Unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of unidentified items for camera data for the entire study area.
count.unknown.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(class == 'Unknown') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Class = Unknown
### Level = Nest
# Calculate mean percent unknown biomass per nest.
percent.unknown.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of unknown biomass per nest.
sd.unknown.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Group = Squirrels
### Level = Study area
# Calculate percent squirrel biomass for camera data for the entire study area.
percent.squirrel.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(group == 'squirrel') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of squirrels for camera data for the entire study area.
count.squirrel.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'squirrel') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Group = Squirrel
### Level = Nest
# Calculate mean percent squirrel biomass per nest.
percent.squirrel.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'squirrel') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of squirrel biomass per nest.
sd.squirrel.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'squirrel') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Group = Other mammals
### Level = Study area
# Calculate percent other mammal biomass for camera data for the entire study area.
percent.other.mammal.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(group == 'mammal') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of other mammals for camera data for the entire study area.
count.other.mammal.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'mammal') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Group = Other mammal
### Level = Nest
# Calculate mean percent other mammal biomass per nest.
percent.other.mammal.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'mammal') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of other mammal biomass per nest.
sd.other.mammal.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'mammal') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Group = Unknown
### Level = Study area
# Calculate percent unknown biomass for camera data for the entire study area.
percent.unk.gr.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(group == 'unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of unknown for camera data for the entire study area.
count.unk.gr.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'group') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Group = Unknown
### Level = Nest
# Calculate mean percent unknown biomass per nest.
percent.unk.gr.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of unknown biomass per nest.
sd.unk.gr.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'uknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
### Group = Thrushes
### Level = Study area
# Calculate percent other thrush biomass for camera data for the entire study area.
percent.thrush.biomass.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=sum(mass)) %>% filter(group == 'thrush') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(to.mass) %>% peretty(0)
# Calculate percent counts of other thrushes for camera data for the entire study area.
count.thrush.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'thrush') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
### Group = Thrush
### Level = Nest
# Calculate mean percent thrush biomass per nest.
percent.thrush.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'thrush') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(mean(to.mass)) %>% peretty(0)
# Calculate standard deviation of thrush biomass per nest.
sd.thrush.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'thrush') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
# Calculate percent counts of unknown for camera data for the entire study area.
count.unk.gr.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'unknow') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
# Calculate percent counts of unknown for camera data for the entire study area.
count.unk.gr.items.study.area <- filter(diet.items, source == 'C') %>%
mutate(total=n()) %>% filter(group == 'unknown') %>%
mutate(count=n(), to.count=count/total*100) %>% distinct(to.count) %>% peretty(0)
# Calculate standard deviation of unknown biomass per nest.
sd.unk.gr.biomass.nest <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'unknown') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, to.mass) %>%
ungroup() %>% summarize(sd(to.mass)) %>% peretty(0)
diversity(study.area.count, index='simpson')
# Total study area diversity.
study.area.diversity <- diversity(study.area.count, index='simpson')
peretty()
peretty
nest.diversty
nest.diversity
mean.nest.diversity <- mean(nest.diversity$diet.diversity)
mean.nest.diversity
mean.nest.diversity <- mean(nest.diversity$diet.diversity) %>% round(2)
mean.nest.diversity
sd(nest.diversity$diet.diversity) %>% round(2)
# Standard deviation of nest diversity.
sd.nest.diversity <- sd(nest.diversity$diet.diversity) %>% round(2)
nest.overlap
mean(nest.overlap$value)
mean(nest.overlap$value) %>% round(2)
sd(nest.overlap$value) %>% round(2)
# Mean nest overlap.
mean.nest.overlap <- mean(nest.overlap$value) %>% round(2)
# Standard deviation of nest overlap.
sd.nest.overlap <- sd(nest.overlap$value) %>% round(2)
zone.mass
zone.mass %>% view()
zone.mass %>% filter(variable %in% c('Aves', 'Mammalia'))
zone.mass %>% filter(variable %in% c('Aves', 'Mammalia')) %>% select(zone, variable, C)
zone.mass %>% filter(variable == squirrel) %>% select(zone, variable, C)
zone.mass %>% filter(variable == 'squirrel') %>% select(zone, variable, C)
left_join(diet.items, centroids.sf, by=c('site'))
left_join(diet.items, centroids.sf, by=c('site')) %>% filter(zone == 'tz')
left_join(diet.items, centroids.sf, by=c('site')) %>% filter(zone == 'tz') %>% distinct(site)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% distinct(site)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% distinct(site) %>%
summarize(n()) %>% as.numeric()
# Number of transition zone sites.
n.tz.sites <- left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% distinct(site) %>%
summarize(n()) %>% as.numeric()
# Number of transition zone sites.
n.tz.cam.sites <- left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% distinct(site) %>%
summarize(n()) %>% as.numeric()
# Number of coastal zone sites.
n.cs.cam.sites <- left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'cs' & source == 'C') %>% distinct(site) %>%
summarize(n()) %>% as.numeric()
percent.other.mammal.biomass.nest
filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'squirrel') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, total, mass, to.mass)
filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'squirrel') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, total, mass, to.mass) %>% hist()
temp <- filter(diet.items, source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(group == 'squirrel') %>%
mutate(mass=sum(mass), to.mass=mass/total*100) %>% distinct(nest, total, mass, to.mass)
temp$to.mass
hist(temp$to.mass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C')
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass))
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total) %>%
distinct(site, cmass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total) %>%
distinct(nest, cmass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total) %>%
distinct(nest, cmass) %>% summarize(mean(cmass))
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total) %>%
distinct(nest, cmass) %>% ungroup() %>% summarize(mean(cmass))
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(nest, cmass) %>% ungroup() %>% summarize(mean(cmass))
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(nest, cmass) %>% ungroup() %>% summarize(mean(cmass)) %>% as.numeric()
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(nest, cmass) %>% ungroup() %>% summarize(mean(cmass)) %>% as.numeric() %>% round(0)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(nest, cmass) %>% ungroup() %>% summarize(mean(cmass)) %>% peretty()
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(nest, cmass) %>% ungroup() %>% summarize(mean(cmass)) %>% peretty(0)
# Mean proportion mammalian biomass in transition zone.
percent.mammal.biomass.tz <- left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(nest, cmass) %>% ungroup() %>% summarize(mean(cmass)) %>% peretty(0)
# Mean proportion mammalian biomass in coastal zone.
percent.mammal.biomass.cs <- left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'cs' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(nest, cmass) %>% ungroup() %>% summarize(mean(cmass)) %>% peretty(0)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(nest, cmass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'cs' & source == 'C') %>% distinct(nest)# %>%
diet.items %>% filter(nest == 'RLK2020')
# Number of transition zone sites.
n.tz.cam.sites <- left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'tz' & source == 'C') %>% distinct(nest) %>%
summarize(n()) %>% as.numeric()
# Number of coastal zone sites.
n.cs.cam.sites <- left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'cs' & source == 'C') %>% distinct(nest) %>%
summarize(n()) %>% as.numeric()
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% distinct(zone, nest)
left_join(diet.items, centroids.sf, by=c('site')) %>%
distinct(zone, nest)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'cs' & source == 'C') %>% distinct(nest)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% distinct(zone, nest)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(zone == 'cs' & source == 'C') %>% distinct(nest) %>% arrange(zone)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% distinct(zone, nest) %>% arrange(zone)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass) %>% arrange(zone)
temp <- left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass) %>% arrange(zone)
t.test(cmass ~ zone, data=temp, var.equal=TRUE)
t.test(cmass ~ zone, data=temp, var.equal=TRUE) %>% glance()
library(broom)
t.test(cmass ~ zone, data=temp, var.equal=TRUE) %>% glance()
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass) %>%
t.test(cmass ~ zone. data=., var.equal=TRUE)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass) #%>%
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass) %>% arrange(zone)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass) %>%
t.test(cmass ~ zone. data=., var.equal=TRUE)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass) %>%
t.test(cmass ~ zone. var.equal=TRUE)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total*100) %>%
distinct(zone, nest, cmass)
left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total) %>%
distinct(zone, nest, cmass)
# Percent mammalian biomass per zest, by zone.
percent.mammal.biomass.zone.nest <- left_join(diet.items, centroids.sf, by=c('site')) %>%
filter(source == 'C') %>% group_by(nest) %>%
mutate(total=sum(mass)) %>% filter(class == 'Mammalia') %>%
mutate(mmass=sum(mass), cmass=mmass/total) %>%
distinct(zone, nest, cmass)
t.test(cmass ~ zone, data=percent.mammal.biomass.zone.nest, var.equal=TRUE) %>% glance()
t.test(cmass ~ zone, data=percent.mammal.biomass.zone.nest, var.equal=TRUE) %>%
glance() %>% select(p.value)
t.test(cmass ~ zone, data=percent.mammal.biomass.zone.nest, var.equal=TRUE) %>%
glance() %>% select(p.value) %>% as.numeric()
t.test(cmass ~ zone, data=percent.mammal.biomass.zone.nest, var.equal=TRUE) %>%
glance() %>% select(p.value) %>% peretty()
# P-value for unpaired two-sample t-test for mammal biomass between zones.
p.value.mammal.biomass.zone <- t.test(cmass ~ zone,
data=percent.mammal.biomass.zone.nest, var.equal=TRUE) %>%
glance() %>% select(p.value) %>% peretty()
