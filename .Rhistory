# Make a frequency table.
freq.by.year <- by.group %>% group_by(year, group) %>%
mutate(count=n()) %>%
select(year, group, count) %>%
distinct() %>% ungroup() %>%
pivot_wider(names_from='group', values_from='count', values_fill=0) %>%
column_to_rownames(var='year')
# Run a chi-squared test for differences between years (is this even the right way to do it??)
chi.year <- chisq.test(freq.by.year, correct=FALSE, simulate.p.value=TRUE)
chi.year
library(vegan)
View(sc)
aves <- '#89b0ae'
mammalia <- '#e9c46a'
unknown <- 'lightgrey'
bird <- '#114b5f' # Midnight green eagle
corvid <- '#7c9eb2' # Pewter blue
grouse <- '#c3e8bd' # Tea green
hare <- '#d1603d' # Copper red
mammal <- '#cdc392' # Sage
squirrel <- '#df9a57' # Persian orange
thrush <- '#553e4e' # Eggplant
sc %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup()
# Add grouping variable.
by.group <- sc %>% mutate(group=case_when(
class == 'Aves' & family == 'Phasianidae' ~ 'grouse',
class == 'Aves' & family == 'Corvidae' ~ 'corvid',
class == 'Aves' & family == 'Turdidae' ~ 'thrush',
class == 'Aves' ~ 'bird',
class == 'Mammalia' & genus == 'Tamiasciurus' ~ 'squirrel',
class == 'Mammalia' & genus == 'Lepus' ~ 'hare',
class == 'Mammalia' ~ 'mammal',
TRUE ~ 'unknown'
))
# Make a frequency table.
freq.by.year <- by.group %>% group_by(year, group) %>%
mutate(count=n()) %>%
select(year, group, count) %>%
distinct() %>% ungroup() %>%
pivot_wider(names_from='group', values_from='count', values_fill=0) %>%
column_to_rownames(var='year')
# Run a chi-squared test for differences between years (is this even the right way to do it??)
chi.year <- chisq.test(freq.by.year, correct=FALSE, simulate.p.value=TRUE)
chi.year
View(sc)
by.group %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup()
by.group %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of items',
title='Prey items identified from combined pellets and remains') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
by.group %>%
mutate(total.mass=n()) %>%
group_by(group) %>%
mutate(group.mass=n(),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from combined pellets and remains') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
by.group %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from combined pellets and remains') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
View(by.group)
by.group %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from combined pellets and remains') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
by.group %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from combined pellets and remains') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
by.group %>% filter(source == 'P') %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from combined pellets and remains') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
by.group %>% filter(source == 'P') %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from combined pellets') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
sc %>% distinct (binomial) %>% arrange()
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
#Load some libraries.
library(tidyverse)
library(ggplot2)
library(lubridate)
library(vegan)
# Let's name some colors.
aves <- '#89b0ae'
mammalia <- '#e9c46a'
unknown <- 'lightgrey'
bird <- '#114b5f' # Midnight green eagle
corvid <- '#7c9eb2' # Pewter blue
grouse <- '#c3e8bd' # Tea green
hare <- '#d1603d' # Copper red
mammal <- '#cdc392' # Sage
squirrel <- '#df9a57' # Persian orange
thrush <- '#553e4e' # Eggplant
# Bring in diet data.
remains.data <- read_csv('../data/raw/20210118_specimens.csv', guess_max=7000) %>%
## filter only records with at least size assigned...
filter(size != 'U') %>%
## and rename a confusing column.
rename(name=site)
# Bring in a list of site abbreviations and site names.
nest.list <- read_csv('../data/processed/site_abbreviations.csv')
# Join the site list to the remains data by site name.
remains.data <- left_join(remains.data, nest.list, by='name')
# Add a unique site/year identifier.
remains.data <- remains.data %>%
mutate(year=year(date), nest=paste(site, year, sep=''))
# Select just the relevant columns...
remains.data <- remains.data %>%
select(id, site, year, nest, class, order, family, genus, species, common, size, source) %>%
## then change the size column wording to make it look nicer...
mutate(size=case_when(
size == 'S' ~ 'small',
size == 'M' ~ 'medium',
size == 'L' ~ 'large'
)) %>%
## and replace all the "U"s with "Unknown"...
mutate_at(c('class', 'order', 'family', 'genus'), funs(case_when(
. == 'U' ~ 'Unknown',
TRUE ~ .
))) %>%
## in species as well...
mutate(species=case_when(
species == 'U' ~ 'unknown',
TRUE ~ species
))
# Make sure species is lowercase.
remains.data$species <- str_to_lower(remains.data$species)
# Bring in a list of all known prey.
prey.list <- read_csv('../data/interim/prey_attributes.csv')
# Join the biomass data to the list of diet items.
diet.items <- prey.list %>% select(genus, species, binomial, common, category, mass) %>%
right_join(remains.data, by=c('genus', 'species', 'common'))
# For unidentified items, classify them by size and class.
diet.items <- diet.items %>% mutate(category=case_when(
is.na(category) & class == 'Mammalia' & size == 'small' ~ 'small mammal',
is.na(category) & class == 'Mammalia' & size == 'medium' ~ 'medium mammal',
is.na(category) & class == 'Mammalia' & size == 'large' ~ 'large mammal',
is.na(category) & class == 'Aves' & size == 'small' ~ 'small bird',
is.na(category) & class == 'Aves' & size == 'medium' ~ 'medium bird',
is.na(category) & class == 'Aves' & size == 'large' ~ 'large bird',
is.na(category) & class == 'Unknown' ~ paste(size, 'item'),
TRUE ~ category))
# For unidentified items, fill in the binomial column.
diet.items <- diet.items %>% replace_na(list(binomial = 'Unidentified item'))
# Create a table with average masses by collecting all the items of known mass...
average.sizes <- diet.items %>% drop_na(mass) %>%
group_by(category) %>%
## averaging the mass for each size & class category...
summarize(average=mean(mass)) %>%
pivot_wider(names_from=category, values_from=average) %>%
## calculating the average mass for complete unknowns...
mutate(`large item` = mean(`large bird`, `large mammal`),
`medium item` = mean(`medium bird`, `medium mammal`),
`small item` = mean(`small bird`, `small mammal`)) %>%
## and reassembling it in a tidy format.
pivot_longer(everything(), names_to='category', values_to='average')
# Join average mass to diet items...
diet.items <- left_join(diet.items, average.sizes, by='category') %>%
## and fill in missing mass with average values
mutate(mass=coalesce(mass, average)) %>%
## then drop no longer needed average column and rearrange.
select(id, site, year, nest, class, order, family, genus, species, binomial, common,
category, size, mass, source)
sc <- diet.items %>% filter(id != 1120) %>%
filter(id != 1171)
# Total number of items.
summarize(sc, n())
# Number of items per year.
sc %>% group_by(year) %>%
summarize(n())
# Biomass per year.
sc %>% group_by(year) %>%
summarize(sum(mass))
# Weird. Mean biomass of items for each year?
sc %>% group_by(year) %>%
summarize(mean(mass))
# For 2019.
sp.2019 <- sc %>% filter(year=='2019') %>% distinct (binomial) %>% arrange()
sp.2019
# For 2020.
sp.2020 <- sc %>% filter(year=='2020') %>% distinct (binomial) %>% arrange()
sp.2020
# Unique to 2019.
anti_join(sp.2019, sp.2020, by='binomial')
# Unique to 2020.
anti_join(sp.2020, sp.2019, by='binomial')
# Add grouping variable.
by.group <- sc %>% mutate(group=case_when(
class == 'Aves' & family == 'Phasianidae' ~ 'grouse',
class == 'Aves' & family == 'Corvidae' ~ 'corvid',
class == 'Aves' & family == 'Turdidae' ~ 'thrush',
class == 'Aves' ~ 'bird',
class == 'Mammalia' & genus == 'Tamiasciurus' ~ 'squirrel',
class == 'Mammalia' & genus == 'Lepus' ~ 'hare',
class == 'Mammalia' ~ 'mammal',
TRUE ~ 'unknown'
))
# Make a frequency table.
freq.by.year <- by.group %>% group_by(year, group) %>%
mutate(count=n()) %>%
select(year, group, count) %>%
distinct() %>% ungroup() %>%
pivot_wider(names_from='group', values_from='count', values_fill=0) %>%
column_to_rownames(var='year')
# Run a chi-squared test for differences between years (is this even the right way to do it??)
chi.year <- chisq.test(freq.by.year, correct=FALSE, simulate.p.value=TRUE)
chi.year
by.group %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from combined pellets and remains') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
by.group %>% filter(source == 'P') %>%
mutate(total.mass=sum(mass)) %>%
group_by(group) %>%
mutate(group.mass=sum(mass),
proportion.mass=group.mass/total.mass*100) %>%
distinct(group, group.mass, proportion.mass) %>%
ungroup() %>%
ggplot(aes(x=group, y=proportion.mass, fill=group)) +
geom_bar(stat='identity', color='white') +
scale_fill_manual(values=c(bird, corvid, grouse,
hare, mammal, squirrel,
thrush, unknown)) +
labs(y='Proportion of biomass',
title='Prey items identified from pellets') +
theme_classic() +
theme(axis.title.x=element_blank(),
legend.position='none')
sc %>% distinct (binomial) %>% arrange()
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
#Load some libraries.
library(tidyverse)
library(ggplot2)
library(lubridate)
library(vegan)
# Let's name some colors.
aves <- '#89b0ae'
mammalia <- '#e9c46a'
unknown <- 'lightgrey'
bird <- '#114b5f' # Midnight green eagle
corvid <- '#7c9eb2' # Pewter blue
grouse <- '#c3e8bd' # Tea green
hare <- '#d1603d' # Copper red
mammal <- '#cdc392' # Sage
squirrel <- '#df9a57' # Persian orange
thrush <- '#553e4e' # Eggplant
# Bring in diet data.
remains.data <- read_csv('../data/raw/20210118_specimens.csv', guess_max=7000) %>%
## filter only records with at least size assigned...
filter(size != 'U') %>%
## and rename a confusing column.
rename(name=site)
# Bring in a list of site abbreviations and site names.
nest.list <- read_csv('../data/processed/site_abbreviations.csv')
# Join the site list to the remains data by site name.
remains.data <- left_join(remains.data, nest.list, by='name')
# Add a unique site/year identifier.
remains.data <- remains.data %>%
mutate(year=year(date), nest=paste(site, year, sep=''))
# Select just the relevant columns...
remains.data <- remains.data %>%
select(id, site, year, nest, class, order, family, genus, species, common, size, source) %>%
## then change the size column wording to make it look nicer...
mutate(size=case_when(
size == 'S' ~ 'small',
size == 'M' ~ 'medium',
size == 'L' ~ 'large'
)) %>%
## and replace all the "U"s with "Unknown"...
mutate_at(c('class', 'order', 'family', 'genus'), funs(case_when(
. == 'U' ~ 'Unknown',
TRUE ~ .
))) %>%
## in species as well...
mutate(species=case_when(
species == 'U' ~ 'unknown',
TRUE ~ species
))
# Make sure species is lowercase.
remains.data$species <- str_to_lower(remains.data$species)
# Bring in a list of all known prey.
prey.list <- read_csv('../data/interim/prey_attributes.csv')
# Join the biomass data to the list of diet items.
diet.items <- prey.list %>% select(genus, species, binomial, common, category, mass) %>%
right_join(remains.data, by=c('genus', 'species', 'common'))
# For unidentified items, classify them by size and class.
diet.items <- diet.items %>% mutate(category=case_when(
is.na(category) & class == 'Mammalia' & size == 'small' ~ 'small mammal',
is.na(category) & class == 'Mammalia' & size == 'medium' ~ 'medium mammal',
is.na(category) & class == 'Mammalia' & size == 'large' ~ 'large mammal',
is.na(category) & class == 'Aves' & size == 'small' ~ 'small bird',
is.na(category) & class == 'Aves' & size == 'medium' ~ 'medium bird',
is.na(category) & class == 'Aves' & size == 'large' ~ 'large bird',
is.na(category) & class == 'Unknown' ~ paste(size, 'item'),
TRUE ~ category))
# For unidentified items, fill in the binomial column.
diet.items <- diet.items %>% replace_na(list(binomial = 'Unidentified item'))
# Create a table with average masses by collecting all the items of known mass...
average.sizes <- diet.items %>% drop_na(mass) %>%
group_by(category) %>%
## averaging the mass for each size & class category...
summarize(average=mean(mass)) %>%
pivot_wider(names_from=category, values_from=average) %>%
## calculating the average mass for complete unknowns...
mutate(`large item` = mean(`large bird`, `large mammal`),
`medium item` = mean(`medium bird`, `medium mammal`),
`small item` = mean(`small bird`, `small mammal`)) %>%
## and reassembling it in a tidy format.
pivot_longer(everything(), names_to='category', values_to='average')
# Join average mass to diet items...
diet.items <- left_join(diet.items, average.sizes, by='category') %>%
## and fill in missing mass with average values
mutate(mass=coalesce(mass, average)) %>%
## then drop no longer needed average column and rearrange.
select(id, site, year, nest, class, order, family, genus, species, binomial, common,
category, size, mass, source)
sc <- diet.items %>% filter(id != 1120) %>%
filter(id != 1171)
View(sc)
sc %>% filter(family == 'Phasianidae')
sc %>% filter(family == 'Phasianidae') %>% view()
sc <- diet.items %>% filter(id != 1120) %>%
filter(id != 1171) %>%
filter(site != 'COM')
sc %>% filter(family == 'Phasianidae') %>% view()
# Total number of items.
summarize(sc, n())
# Number of items per year.
sc %>% group_by(year) %>%
summarize(n())
# Biomass per year.
sc %>% group_by(year) %>%
summarize(sum(mass))
# Weird. Mean biomass of items for each year?
sc %>% group_by(year) %>%
summarize(mean(mass))
# For 2019.
sp.2019 <- sc %>% filter(year=='2019') %>% distinct (binomial) %>% arrange()
sp.2019
# For 2020.
sp.2020 <- sc %>% filter(year=='2020') %>% distinct (binomial) %>% arrange()
sp.2020
# Unique to 2019.
anti_join(sp.2019, sp.2020, by='binomial')
# Unique to 2020.
anti_join(sp.2020, sp.2019, by='binomial')
sc %>% mutate(total.mass=sum(mass))
sc %>% mutate(total.mass=sum(mass)) %>%
group_by(class) %>%
mutate(class.mass=sum(mass))
sc %>% mutate(total.mass=sum(mass)) %>%
group_by(class) %>%
mutate(class.mass=sum(mass), prop.mass=class.mass/total.mass*100)
sc %>% mutate(total.mass=sum(mass)) %>%
group_by(class) %>%
mutate(class.mass=sum(mass), prop.mass=class.mass/total.mass*100) %>%
distinct(class, prop.mass)
sc %>% mutate(total.mass=sum(mass)) %>%
group_by(genus) %>%
mutate(genus.mass=sum(mass), prop.mass=genus.mass/total.mass*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(genus, prop.mass)
sc %>% filter(source == 'P') %>%
mutate(total.mass=sum(mass)) %>%
group_by(genus) %>%
mutate(genus.mass=sum(mass), prop.mass=genus.mass/total.mass*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(genus, prop.mass)
# Proportion biomass avian:mammalian for pooled sample.
sc %>% mutate(total.mass=sum(mass)) %>%
group_by(class) %>%
mutate(class.mass=sum(mass), prop.mass=class.mass/total.mass*100) %>%
distinct(class, prop.mass)
# Proportion biomass tree squirrel:everything else for pooled sample.
sc %>% mutate(total.mass=sum(mass)) %>%
group_by(genus) %>%
mutate(genus.mass=sum(mass), prop.mass=genus.mass/total.mass*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(genus, prop.mass)
# Proportion biomass avian:mammalian for pooled sample.
sc %>% filter(source == 'P') %>%
mutate(total.mass=sum(mass)) %>%
group_by(class) %>%
mutate(class.mass=sum(mass), prop.mass=class.mass/total.mass*100) %>%
distinct(class, prop.mass)
# Proportion biomass tree squirrel for pellets only.
sc %>% filter(source == 'P') %>%
mutate(total.mass=sum(mass)) %>%
group_by(genus) %>%
mutate(genus.mass=sum(mass), prop.mass=genus.mass/total.mass*100) %>%
filter(genus == 'Tamiasciurus') %>%
distinct(genus, prop.mass)
