hr %>% st_area()
plyr::ddply(hr, ~site, function(x) {
data.frame(simpson=st_area(tz))
})
plyr::ddply(hr, ~site, function(x) {
data.frame(area=st_area(tz))
})
as.numeric(area=st_area(tz))
as.numeric(st_area(tz))
plyr::ddply(hr, ~site, function(x) {
data.frame(area=as.numeric(st_area(tz)))
})
plyr::ddply(hr, ~site, function(x) {
data.frame(area=as.numeric(st_area(tz)))
}) %>%
group_by(site) %>% summarize(sum())
test <- plyr::ddply(hr, ~site, function(x) {
data.frame(area=as.numeric(st_area(tz)))
})
test %>% group_by(site) %>% summarize(sum())
test %>% group_by(site) %>% summarize_at(vars(area), list(t.area=sum))
test %>% group_by(site) %>% summarize_at(vars(area), list(t.area=sum))
test %>% group_by(site) %>% summarize(area=sum(area))
class(test$site)
class(test$area)
test %>% group_by(site) %>% summarize(n())
test %>% transmute(site=as.character(site)) %>%
group_by(site) %>% summarize(n())
test %>% filter(site == 'RLK') %>%
summarize(area=sum(area))
test %>% filter(site == 'TCR') %>%
summarize(area=sum(area))
data.frame(area=as.numeric(st_intersection(tz)))
test <- plyr::ddply(hr, ~site, function(x) {
data.frame(area=as.numeric(st_intersection(tz)))
})
st_intersection(hr, tz)
as.numeric(st_intersection(hr, tz))
as.numeric(unlist(st_intersection(hr, tz)))
lapply(st_intersection(hr, tz). as.numeric)
lapply(st_intersection(hr, tz), as.numeric)
st_intersection(hr, tz)
st_intersection(hr, tz) %>% st_area()
int.test <- st_intersection(hr, tz)
data.frame(area=(st_area(int.test))
})
test <- plyr::ddply(hr, ~site, function(x) {
}
+
)
+
4+5
plyr::ddply(int.test, ~site, function(x) {
data.frame(area=st_area(x))
})
plyr::ddply(int.test, ~site, function(x) {
st_area(x)
})
plyr::ddply(int.test, ~site, function(x) {
data.frame(area=as.numeric(st_area(int.test)))
})
test <- plyr::ddply(int.test, ~site, function(x) {
data.frame(area=as.numeric(st_area(int.test)))
})
test %>% group_by(site) %>%
summarize(sum=sum(area))
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load up some libraries.
library('tidyverse')
library('lubridate')
# Vancouver Island 2018 survey data.
vi.2018 <- read_csv('../data/external/VI_surveydata_2018.csv')
# Vancouver Island 2019 survey data.
vi.2019 <- read_csv('../data/external/VI_surveydata_2019.csv')
# South Coast nest database (2013-2019).
sc.nests <- read_csv('../data/external/SC_nest_database.csv')
# Sites that were checked on Vancouver Island in 2018.
vi.checked.2018 <- vi.2018 %>%
filter(NestAssess == 'Yes')
# Sites that were checked on Vancouver Island in 2019.
vi.checked.2019 <- vi.2019 %>% filter(`Nest  Assess` == 'Yes') %>%
mutate(`Site Name`=case_when(
`Site Name` == 'Lukwa S' ~ 'Lukwa South',
`Site Name` == 'Seymour River W' ~ 'Seymour River West',
`Site Name` == 'Tsitika W' ~ 'Tsitika West',
TRUE ~ `Site Name`
))
# Sites that were checked on the South Coast in 2018.
sc.checked.2018 <- sc.nests %>% filter(Occup2018 %in% c('Breeding', 'Not Occupied', 'Resident')) %>%
mutate(TerrName=case_when(
TerrName == 'St.Vincent' ~ 'St. Vincent',
TRUE ~ TerrName
))
# Sites that were checked on the South Coast in 2019.
sc.checked.2019 <- sc.nests %>% filter(Occup2019 %in% c('Breeding', 'Not Occupied', 'Resident'))
# Vancouver Island sites checked both years.
intersect(vi.checked.2018$SiteName, vi.checked.2019$`Site Name`)
# South Coast sites checked both years.
intersect(sc.checked.2018$TerrName, sc.checked.2019$TerrName)
# Take the intersection, make pretty site names.
sc.sites <- intersect(sc.checked.2018$TerrName, sc.checked.2019$TerrName) %>%
data.frame() %>% rename(old.name=1) %>%
mutate(old.name=as.character(old.name), site=case_when(
old.name == 'DewdneyCreek' ~ 'Dewdney Creek',
old.name == 'MtHolden' ~ 'Mt Holden',
old.name == 'Granite Mtn' ~ 'Granite Mt',
old.name == 'MtPearkes' ~ 'Mt Pearkes',
TRUE ~ old.name
))
# Add occupancy info from 2018.
sc.sites <- sc.checked.2018 %>% dplyr::select(TerrName, Occup2018) %>%
right_join(sc.sites, by=c('TerrName'='old.name')) %>%
distinct() %>%
rename(old.name=TerrName, st.18=Occup2018)
# Add occupancy info from 2019.
sc.sites <- sc.checked.2019 %>% dplyr::select(TerrName, Occup2019) %>%
right_join(sc.sites, by=c('TerrName'='old.name')) %>%
distinct() %>%
rename(old.name=TerrName, st.19=Occup2019)
# Fix occupancy.
sc.sites <- sc.sites %>%
mutate_at(.vars=vars(st.19, st.18),
.funs=funs(.=case_when(
. == 'Not Occupied' ~ 1,
. == 'Breeding' ~ 3,
. == 'Resident' ~ 2,
TRUE ~ NA_real_
))) %>%
dplyr::select(site, status.2018=st.18_., status.2019=st.19_., old.name)
sc.sites %>% dplyr::select(-old.name) %>% print()
# Find the interestion of the two years.
vi.sites <- intersect(vi.checked.2018$SiteName, vi.checked.2019$`Site Name`) %>%   data.frame() %>% rename(site=1)
# Add nest status from 2018.
vi.sites <- vi.checked.2018 %>% dplyr::select(SiteName, NestStatus) %>%
right_join(vi.sites, by=c('SiteName'='site')) %>%
distinct() %>% rename(st.18=NestStatus) %>%
filter(st.18 != 'Not Found')
# Add nest status from 2019.
vi.sites <- vi.checked.2019 %>% dplyr::select(`Site Name`, `Nest Status`) %>%
right_join(vi.sites, by=c(`Site Name`='SiteName')) %>%
distinct() %>% rename(st.19=`Nest Status`) %>%
filter(st.19 != 'Not Found')
# Fix occupancy.
vi.sites <- vi.sites %>%
mutate_at(.vars=vars(st.19, st.18),
.funs=funs(.=case_when(
. == 'Inactive' ~ 1,
. == 'Active' ~ 3,
TRUE ~ NA_real_
))) %>%
dplyr::select(site=`Site Name`, status.2018=st.18_., status.2019=st.19_.)
vi.sites
vi.2018 %>% right_join(vi.sites, by=c('SiteName'='site')) %>%
dplyr::select(SiteName, TotalNumberOfGoshawks) %>%
drop_na()
colnames(vi.2018)
vi.2018 %>% right_join(vi.sites, by=c('SiteName'='site')) %>%
dplyr::select(SiteName, NOGODetected_DuringBC) %>%
drop_na()
vi.2018 %>% right_join(vi.sites, by=c('SiteName'='site')) %>%
dplyr::select(SiteName, NOGO1_VI_IncomeBearing) %>%
drop_na()
vi.2018 %>% right_join(vi.sites, by=c('SiteName'='site')) %>%
dplyr::select(SiteName, NOGO1_Observation) %>%
drop_na()
vi.2018 %>% right_join(vi.sites, by=c('SiteName'='site')) %>%
dplyr::select(SiteName, TotalNumberOfGoshawks) %>%
drop_na() %>% distinct()
vi.2019 %>% right_join(vi.sites, by=c(`Site Name`='site')) %>%
dplyr::select(`Site Name`, TotalNumberOfGoshawks) %>%
drop_na() %>% distinct()
colnames(vi.2019)
vi.2019 %>% right_join(vi.sites, by=c(`Site Name`='site')) %>%
dplyr::select(`Site Name`, `Total Number Of Goshawks`) %>%
drop_na() %>% distinct()
# In 2018?
vi.2018 %>% right_join(vi.sites, by=c('SiteName'='site')) %>%
dplyr::select(SiteName, TotalNumberOfGoshawks) %>%
drop_na() %>% distinct()
# And in 2019?
vi.2019 %>% right_join(vi.sites, by=c(`Site Name`='site')) %>%
dplyr::select(`Site Name`, `Total Number Of Goshawks`) %>%
drop_na() %>% distinct()
vi.2019 %>% dplyr::select(`Site Name`, `Total Number Of Goshawks`) %>%
right_join(vi.sites, by=c(`Site Name`='site')) %>%
drop_na() %>% distinct()
vi.sites %>% mutate(status.2018=case_when(
site == 'China Beach' ~ 2,
site == 'Keta' ~ 3,
TRUE ~ status.2018
),
status.2019=case_when(
site == 'Cook Creek' ~ 2,
TRUE ~ status.2019
)
)
write_csv(vi.sites, '../data/processed/vi_occupancy_2018-2019.csv')
write_csv(sc.sites, '../data/processed/sc_occupancy_2018-2019.csv')
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
vi.sites <- read_csv('../data/processed/vi_occupancy_2018-2019.csv')
sc.sites <- read_csv('../data/processed/sc_occupancy_2018-2019.csv')
vi.sites <- read_csv('../data/processed/vi_occupancy_2018-2019.csv')
sc.sites <- read_csv('../data/processed/sc_occupancy_2018-2019.csv')
nrow(vi.sites)
vi.sites
# Vancouver Island occupancy data
kable(vi.sites, 'latex', booktabs=T, caption='Vancouver Island occupancy data',
table.envir='capctable',
col.names=c('Site', '2018',' 2019')) %>%
kable_styling(latex_options=c('striped')) %>%
footnote(general='1 = no birds observed, 2 = birds present, no evidence of breeding, 3 = active, evidence of breeding')
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
library('knitr')
library('kableExtra')
library('tidyverse')
library('lubridate')
pr <- read.csv('../data/raw/20200424_specimens.csv', stringsAsFactors=FALSE)
pr %>% group_by(class, family, genus, species) %>%
summarize(n()) %>%
kable('latex', booktabs=T, caption='Prey identified from physical remains',
table.envir = 'capctable',
col.names=c('Class', 'Family', 'Genus', 'Species', 'N'))
df <- read.csv('../data/interim/camera_corrected.csv', stringsAsFactors=FALSE)
# Do the datetime thing.
df <- df %>% mutate(datetime=parse_date_time(datetime,
orders=c('%Y-%m-%d %H:%M:%S', '%Y/%m/%d %H:%M:%S')))
source('../src/prey_attributes.R')
# Calculate days.
timespan <- df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime)) %>%
mutate(first=date(first), last=date(last)) %>%
mutate(days=difftime(last, first))
n.prey <- df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>% summarize(prey=n())
# Photos per day?
bind_cols(timespan, n.prey) %>%
mutate(days=as.numeric(days), per.day=prey/days) %>%
mutate(per.day=round(per.day)) %>%
dplyr::select(site, first, last, prey, per.day) %>%
kable('latex', booktabs=T, caption='Deliveries recorded on nest cameras',
table.envir = "capctable",
col.names=c('Site', 'First delivery recorded', 'Last delivery recorded', 'N. deliveries', 'Deliveries/day'))
vi.sites <- read_csv('../data/processed/vi_occupancy_2018-2019.csv')
sc.sites <- read_csv('../data/processed/sc_occupancy_2018-2019.csv')
dt <- read.csv('../data/raw/total_data_twisted.csv', stringsAsFactors=FALSE) %>%
replace(is.na(.), ' ')
# kable(dt, 'latex', booktabs=T, caption='Summary of available sites',
#       table.envir = "capctable",
#       col.names=
#         c('Site', 'Name', 'Type', 'Date', 'N', 'Date', 'N', 'Date', 'N', 'Date', 'Comments')) %>%
#   kable_styling(latex_options=c('scale_down')) %>%
#   add_header_above(c(' '=3, 'Physical remains'=2, 'Cameras'=2, 'Telemetry'=2, 'Occupancy'=1, ' '=1)) %>%
#   landscape(margin = c('1cm'))
kable(dt, 'latex', booktabs=T, caption='Summary of available data',
table.envir = "capctable",
col.names=
c('Site', 'Name', 'Int', 'Ext', 'Phys. rem.', 'Cameras', '2018 M', '2018 F', '2019 M', '2019 F', '2015', '2016', '2017', '2018', '2019')) %>%
kable_styling(latex_options=c('scale_down', 'striped')) %>%
add_header_above(c(' '=2, 'Type'=2, 'Diet'=2, 'Telemetry'=4, 'Occupancy'=5)) %>%
landscape(margin = c('1cm'))
# Do the calculations
mass.table <- items %>% mutate(mass=as.numeric(mass)) %>%
# Calculate totall biomass & total count.
mutate(t.biomass=sum(mass), t.n=n()) %>%
group_by(common) %>%
# Calcuate biomass and count by group.
# Calculate percent biomass and count by group.
mutate(n=n(), biomass=sum(mass), p.biomass=(biomass/t.biomass*100),
p.n=(n/t.n*100))
# Make a pretty table.
prey.table <- mass.table %>% arrange(class, group, genus) %>%
unite(name, 4:5, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(common, name, n, p.n, p.biomass) %>%
distinct()
# Print it out.
prey.table %>%
kable('latex', booktabs=T, caption='Summary of nest camera data',
table.envir = "capctable", col.names=(c('Prey species', '', 'count', '% count', '% biomass')),
digits=2) %>%
kable_styling(full_width=TRUE) %>%
column_spec(1, width='20em') %>%
column_spec(2, italic=T, width='20em') %>%
pack_rows('Large birds (> 150 g)', 1, 3) %>%
pack_rows('Medium birds (60-150 g)', 4, 8) %>%
pack_rows('Small birds (< 40 g)', 9, 10) %>%
pack_rows('Large mammals (> 600 g)', 11, 12) %>%
pack_rows('Medium mammals (200-600 g)', 13, 18) %>%
pack_rows('Small mammals (< 200 g)', 19, 22) %>%
pack_rows('Unidentified items', 23, 24)
# Vancouver Island occupancy data
kable(vi.sites, 'latex', booktabs=T, caption='Vancouver Island occupancy data',
table.envir='capctable',
col.names=c('Site', '2018',' 2019')) %>%
kable_styling(latex_options=c('striped')) %>%
footnote(general='1 = no birds observed, 2 = birds present, no evidence of breeding, 3 = active, evidence of breeding')
kable(sc.sites, 'latex', booktabs=T, caption='Vancouver Island occupancy data',
table.envir='capctable',
col.names=c('Site', '2018',' 2019')) %>%
kable_styling(latex_options=c('striped'))
# South Coast occupancy data
sc.sites %>% dplyr::select(-old.names) %>%
kable(sc.sites, 'latex', booktabs=T, caption='Vancouver Island occupancy data',
table.envir='capctable',
col.names=c('Site', '2018',' 2019')) %>%
kable_styling(latex_options=c('striped'))
View(sc.sites)
# South Coast occupancy data
sc.sites %>% dplyr::select(-old.name) %>%
kable(sc.sites, 'latex', booktabs=T, caption='Vancouver Island occupancy data',
table.envir='capctable',
col.names=c('Site', '2018',' 2019')) %>%
kable_styling(latex_options=c('striped'))
# South Coast occupancy data
sc.sites %>% dplyr::select(-old.name) %>%
kable('latex', booktabs=T, caption='Vancouver Island occupancy data',
table.envir='capctable',
col.names=c('Site', '2018',' 2019')) %>%
kable_styling(latex_options=c('striped'))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
library('knitr')
library('kableExtra')
library('tidyverse')
library('lubridate')
pr <- read.csv('../data/raw/20200424_specimens.csv', stringsAsFactors=FALSE)
pr %>% group_by(class, family, genus, species) %>%
summarize(n()) %>%
kable('latex', booktabs=T, caption='Prey identified from physical remains',
table.envir = 'capctable',
col.names=c('Class', 'Family', 'Genus', 'Species', 'N'))
df <- read.csv('../data/interim/camera_corrected.csv', stringsAsFactors=FALSE)
# Do the datetime thing.
df <- df %>% mutate(datetime=parse_date_time(datetime,
orders=c('%Y-%m-%d %H:%M:%S', '%Y/%m/%d %H:%M:%S')))
source('../src/prey_attributes.R')
# Calculate days.
timespan <- df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime)) %>%
mutate(first=date(first), last=date(last)) %>%
mutate(days=difftime(last, first))
n.prey <- df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>% summarize(prey=n())
# Photos per day?
bind_cols(timespan, n.prey) %>%
mutate(days=as.numeric(days), per.day=prey/days) %>%
mutate(per.day=round(per.day)) %>%
dplyr::select(site, first, last, prey, per.day) %>%
kable('latex', booktabs=T, caption='Deliveries recorded on nest cameras',
table.envir = "capctable",
col.names=c('Site', 'First delivery recorded', 'Last delivery recorded', 'N. deliveries', 'Deliveries/day'))
vi.sites <- read_csv('../data/processed/vi_occupancy_2018-2019.csv')
sc.sites <- read_csv('../data/processed/sc_occupancy_2018-2019.csv')
dt <- read.csv('../data/raw/total_data_twisted.csv', stringsAsFactors=FALSE) %>%
replace(is.na(.), ' ')
# kable(dt, 'latex', booktabs=T, caption='Summary of available sites',
#       table.envir = "capctable",
#       col.names=
#         c('Site', 'Name', 'Type', 'Date', 'N', 'Date', 'N', 'Date', 'N', 'Date', 'Comments')) %>%
#   kable_styling(latex_options=c('scale_down')) %>%
#   add_header_above(c(' '=3, 'Physical remains'=2, 'Cameras'=2, 'Telemetry'=2, 'Occupancy'=1, ' '=1)) %>%
#   landscape(margin = c('1cm'))
kable(dt, 'latex', booktabs=T, caption='Summary of available data',
table.envir = "capctable",
col.names=
c('Site', 'Name', 'Int', 'Ext', 'Phys. rem.', 'Cameras', '2018 M', '2018 F', '2019 M', '2019 F', '2015', '2016', '2017', '2018', '2019')) %>%
kable_styling(latex_options=c('scale_down', 'striped')) %>%
add_header_above(c(' '=2, 'Type'=2, 'Diet'=2, 'Telemetry'=4, 'Occupancy'=5)) %>%
landscape(margin = c('1cm'))
# Do the calculations
mass.table <- items %>% mutate(mass=as.numeric(mass)) %>%
# Calculate totall biomass & total count.
mutate(t.biomass=sum(mass), t.n=n()) %>%
group_by(common) %>%
# Calcuate biomass and count by group.
# Calculate percent biomass and count by group.
mutate(n=n(), biomass=sum(mass), p.biomass=(biomass/t.biomass*100),
p.n=(n/t.n*100))
# Make a pretty table.
prey.table <- mass.table %>% arrange(class, group, genus) %>%
unite(name, 4:5, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(common, name, n, p.n, p.biomass) %>%
distinct()
# Print it out.
prey.table %>%
kable('latex', booktabs=T, caption='Summary of nest camera data',
table.envir = "capctable", col.names=(c('Prey species', '', 'count', '% count', '% biomass')),
digits=2) %>%
kable_styling(full_width=TRUE) %>%
column_spec(1, width='20em') %>%
column_spec(2, italic=T, width='20em') %>%
pack_rows('Large birds (> 150 g)', 1, 3) %>%
pack_rows('Medium birds (60-150 g)', 4, 8) %>%
pack_rows('Small birds (< 40 g)', 9, 10) %>%
pack_rows('Large mammals (> 600 g)', 11, 12) %>%
pack_rows('Medium mammals (200-600 g)', 13, 18) %>%
pack_rows('Small mammals (< 200 g)', 19, 22) %>%
pack_rows('Unidentified items', 23, 24)
# Vancouver Island occupancy data
kable(vi.sites, 'latex', booktabs=T, caption='Vancouver Island occupancy data',
table.envir='capctable',
col.names=c('Site', '2018',' 2019')) %>%
kable_styling(latex_options=c('striped')) %>%
footnote(general='1 = no birds observed, 2 = birds present, no evidence of breeding, 3 = active, evidence of breeding')
# South Coast occupancy data
sc.sites %>% dplyr::select(-old.name) %>%
kable('latex', booktabs=T, caption='South Coast occupancy data',
table.envir='capctable',
col.names=c('Site', '2018',' 2019')) %>%
kable_styling(latex_options=c('striped'))
# Load up the 'new' telemetry data.
tl <- read_csv('../data/processed/telemetry_2018-2019.csv') %>%
drop_na('lat')
# Do the datetime thing.
tl$date <- ymd(df$date)
# Do the datetime thing.
tl$date <- ymd(tl$date)
# I previously defined nestling and fledgling stages.
breeding.2019 <- interval(ymd(20190511), ymd(20190901))
breeding.2018 <- interval(ymd(20180511), ymd(20180901))
# Filter out the breeding season points.
tl <- tl %>% filter(date %within% breeding.2018 | breeding.2019)
tl %>% group_by(site, id) %>%
summarize(first=min(date), last=max(date), n=n())
# Make a table.
tl %>% group_by(site, id) %>%
summarize(first=min(date), last=max(date), n=n()) %>%
kable('latex', booktabs=T, caption='Summary of telemetry location data',
table.envir = "capctable",
col.names=c('Site', 'ID', 'First location', 'Last location', 'N. points'))
tl.sf <- tl <- st_as_sf(tl, coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Load a few more libraries.
library('sf')
library('adehabitatHR')
tl.sf <- tl <- st_as_sf(tl, coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Make some 95% MCPs.
mcp.95 <- tl.sf %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
mcp(percent=95, unin='m', unout='ha')
tl.sf %>% dplyr::select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=95, unin='m', unout='ha', plotit=FALSE) %>%
pivot_longer(cols=1:4) %>%
summarize(mean(value))
tl.sf %>% dplyr::select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=95, unin='m', unout='ha', plotit=FALSE)# %>%
tl.sf %>% dplyr::select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=95, unin='m', unout='ha', plotit=FALSE) %>%
pivot_longer(cols=1:4) %>%
summarize(mean(value)) %>%
as.numeric()
# Make some 95% MCPs.
area.95 <- tl.sf %>% dplyr::select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=95, unin='m', unout='ha', plotit=FALSE)
area.95 %>% pivot_longer(cols=1:4) %>%
summarize(mean(value)) %>%
as.numeric()
area.95 %>% pivot_longer(cols=1:4) %>%
summarize(mean(value)) %>%
as.numeric() %>% round(digits=2)
View(area.95)
area.95
pivot_longer(cols=1:4) %>%
summarize(mean(value)) %>%
as.numeric() %>% round(digits=2)
area.95
area.95 %>%
pivot_longer(cols=1:6) %>%
summarize(mean(value)) %>%
as.numeric() %>% round(digits=2)
area.95 %>%
pivot_longer(cols=1:4) %>%
summarize(mean(value)) %>%
as.numeric() %>% round(digits=2)
pivot_longer(cols=1:3) %>%
summarize(mean(value)) %>%
as.numeric() %>% round(digits=2)
area.95 %>% filter(id %within% c('HAR04', 'HAR10', 'HAR08')) %>%
pivot_longer(cols=1:3) %>%
summarize(mean(value)) %>%
as.numeric() %>% round(digits=2)
area.95 %>% filter(id %within% c('HAR04', 'HAR10', 'HAR08'))# %>%
area.95 %>% filter(id %in% c('HAR04', 'HAR10', 'HAR08'))# %>%
area.95 %>% pivot_longer(cols=1:6)# %>%
area.95 %>% pivot_longer(cols=1:6) %>%
filter(name %within% c('HAR07', 'HAR05', 'HAR09'))
area.95 %>% pivot_longer(cols=1:6) %>%
filter(name %in% c('HAR07', 'HAR05', 'HAR09'))
area.95 %>% pivot_longer(cols=1:6) %>%
filter(name %in% c('HAR07', 'HAR05', 'HAR09')) %>%
summarize(mean(value)) %>%
as.numeric() %>% round(digits=2)
area.95 %>% pivot_longer(cols=1:6) %>%
filter(name %in% c('HAR04', 'HAR10', 'HAR08')) %>%
summarize(mean(value)) %>%
as.numeric() %>% round(digits=2)
area.95 %>% pivot_longer(cols=1:6) %>%
filter(name %in% c('HAR04', 'HAR10', 'HAR08')) %>%
summarize(sd(value)) %>%
as.numeric() %>% round(digits=2)
