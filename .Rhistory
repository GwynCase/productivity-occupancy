# Calculate number of years NOGO detected out of number of years surveyed.
occupied <- occupancy %>% pivot_longer(-c(site, name), names_to='year', values_to='status') %>%
filter(status > 0) %>%
group_by(site, status) %>%
add_tally() %>%
distinct(site, status, .keep_all=TRUE) %>%
select(-year) %>%
pivot_wider(names_from=status, values_from=n, values_fill=0) %>%
ungroup() %>% rowwise(site, name) %>%
mutate(years.surveyed=sum(c(`3`, `2`, `1`)),
years.occupied=sum(c(`3`, `2`)),
proportion.occupied=years.occupied/years.surveyed) %>%
select(site, name, years.surveyed, years.occupied, proportion.occupied) %>%
filter(years.surveyed > 1)
# Look at it.
occupied
View(occupied)
View(occupancy)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
#Load some libraries.
library(tidyverse)
library(vegan)
library(raster)
library(sf)
library(landscapemetrics)
library(broom)
library(knitr)
library(kableExtra)
library(GGally)
library(extrafont)
# Area is in hectares.
landscape <- data.frame(
size=c('PFA', 'breeding area', 'home range', 'maximum range'),
area=c(60, 200, 3800, 15600)
)
# Convert area in hectares to radii in meters.
landscape <- landscape %>% mutate(radius=sqrt(area*10000/pi))
landscape
# Read in the data.
occupancy <- read_csv('../data/processed/occupancy_sc.csv')
# Calculate number of years NOGO detected out of number of years surveyed.
occupied <- occupancy %>% pivot_longer(-c(site, name), names_to='year', values_to='status') %>%
filter(status > 0) %>%
group_by(site, status) %>%
add_tally() %>%
distinct(site, status, .keep_all=TRUE) %>%
select(-year) %>%
pivot_wider(names_from=status, values_from=n, values_fill=0) %>%
ungroup() %>% rowwise(site, name) %>%
mutate(years.surveyed=sum(c(`3`, `2`, `1`)),
years.occupied=sum(c(`3`, `2`)),
proportion.occupied=years.occupied/years.surveyed) %>%
select(site, name, years.surveyed, years.occupied, proportion.occupied) %>%
filter(years.surveyed > 1)
# Look at it.
occupied
# How many sites have occupancy data?
nrow(occupied)
# How many years have sites been surveyed?
mean(occupied$years.surveyed)
range(occupied$years.surveyed)
# Bring in centroid data.
centroids <- read_csv('../data/interim/zone_centroid_sites.csv')
# Join to occupancy data. Not all sites have occupancy data, so we'll keep just the ones that do.
occupied <- left_join(occupied, centroids, by=c('site')) %>%
rename(xcoord=MEAN_X, ycoord=MEAN_Y) %>%
drop_na()
# Make it a spatial object for later.
sites.sf <- occupied %>%
st_as_sf(coords=c('xcoord', 'ycoord')) %>%
st_set_crs('+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs')
# Also make a list of site names for later.
site.names <- occupied$site
# Load all the rasters.
source('../src/load_rasters.R')
# Calculate metrics for each site.
source('../src/calc_land_metrics.R')
# Join the data together.
data <- full_join(occupied, bec.landscape.metrics, by=c('site' = 'nest')) %>%
full_join(suitable.landscape.metrics, by=c('site' = 'nest', 'radius')) %>%
full_join(landcover.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(hsi.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(gap.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(canopy.landscape.metrics, by=c('site' = 'nest', 'radius', 'size'))
data <- data %>% filter(site != 'SIS')
View(occupied)
# Calculate number of years NOGO detected out of number of years surveyed.
occupied <- occupancy %>% pivot_longer(-c(site, name), names_to='year', values_to='status') %>%
filter(status > 0) %>%
group_by(site, status) %>%
add_tally() %>%
distinct(site, status, .keep_all=TRUE) %>%
select(-year) %>%
pivot_wider(names_from=status, values_from=n, values_fill=0) %>%
ungroup() %>% rowwise(site, name) %>%
mutate(years.surveyed=sum(c(`3`, `2`, `1`)),
years.occupied=sum(c(`3`, `2`)),
years.empty=years.surveyed-years.occupied,
proportion.occupied=years.occupied/years.surveyed) %>%
select(site, name, years.surveyed, years.occupied, proportion.occupied) %>%
filter(years.surveyed > 1)
# Look at it.
occupied
# Calculate number of years NOGO detected out of number of years surveyed.
occupied <- occupancy %>% pivot_longer(-c(site, name), names_to='year', values_to='status') %>%
filter(status > 0) %>%
group_by(site, status) %>%
add_tally() %>%
distinct(site, status, .keep_all=TRUE) %>%
select(-year) %>%
pivot_wider(names_from=status, values_from=n, values_fill=0) %>%
ungroup() %>% rowwise(site, name) %>%
mutate(years.surveyed=sum(c(`3`, `2`, `1`)),
years.occupied=sum(c(`3`, `2`)),
years.empty=years.surveyed-years.occupied,
proportion.occupied=years.occupied/years.surveyed) %>%
select(site, name, years.surveyed, years.occupied, proportion.occupied) %>%
filter(years.surveyed > 1)
# Look at it.
occupied
# Calculate number of years NOGO detected out of number of years surveyed.
occupied <- occupancy %>% pivot_longer(-c(site, name), names_to='year', values_to='status') %>%
filter(status > 0) %>%
group_by(site, status) %>%
add_tally() %>%
distinct(site, status, .keep_all=TRUE) %>%
select(-year) %>%
pivot_wider(names_from=status, values_from=n, values_fill=0) %>%
ungroup() %>% rowwise(site, name) %>%
mutate(years.surveyed=sum(c(`3`, `2`, `1`)),
years.occupied=sum(c(`3`, `2`)),
years.empty=years.surveyed-years.occupied,
proportion.occupied=years.occupied/years.surveyed) %>%
select(site, name, years.surveyed, years.occupied, years.empty, proportion.occupied) %>%
filter(years.surveyed > 1)
# Look at it.
occupied
# Join the data together.
data <- full_join(occupied, bec.landscape.metrics, by=c('site' = 'nest')) %>%
full_join(suitable.landscape.metrics, by=c('site' = 'nest', 'radius')) %>%
full_join(landcover.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(hsi.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(gap.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(canopy.landscape.metrics, by=c('site' = 'nest', 'radius', 'size'))
data <- data %>% filter(site != 'SIS')
View(data)
glm(cbind(years.occupied, years.empty) ~ proportion.suitable, data=data, family=binomial(logit))
glm(proportion.occupied ~ proportion.suitable, data=data, family=binomial, weights=years.surveyed)
glm(cbind(years.occupied, years.empty) ~ proportion.suitable, data=data, family=binomial(logit))
# Proportion suitable.
occupancy.by.bec.diversity <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ bec.diversity, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='forest type diversity')
occupancy.by.proportion.cover.mature <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ proportion.cover.mature, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='proportion older forest')
occupancy.by.cover.edge.density <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.edge.density, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='landcover edge density')
occupancy.by.cover.contagion <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.contagion, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='landcover contagion')
occupancy.by.cover.diversity <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.diversity, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='landcover diversity')
occupancy.by.cover.richness <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.richness, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='landcover richness')
occupancy.by.cover.evenness <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.evenness, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='landcover evenness')
occupancy.by.gap.edge.density <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ gap.edge.density, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='gap edge density')
occupancy.by.canopy.cover <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ canopy.high, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='high canopy cover')
occupancy.by.hsi.edge.density <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ hsi.edge.density, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='hsi edge density')
occupancy.by.hsi.contagion <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ hsi.contagion, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='hsi contagion')
occupancy.by.proportion.suitable <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ proportion.suitable, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='proportion suitable')
occupancy.by.suitable.edge.density <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ suitable.edge.density, data=.x,
family=binomial(logit), weights=years.surveyed)) %>%
map(tidy) %>%
bind_rows(.id='size') %>%
mutate(variable='suitable habitat edge density')
# Bind it all together.
occupancy.landscape.statistics <- bind_rows(occupancy.by.bec.diversity,
occupancy.by.proportion.cover.mature,
occupancy.by.cover.edge.density,
occupancy.by.cover.contagion,
occupancy.by.cover.diversity,
occupancy.by.cover.evenness,
occupancy.by.cover.richness,
occupancy.by.gap.edge.density,
occupancy.by.canopy.cover,
occupancy.by.hsi.edge.density,
occupancy.by.hsi.contagion,
occupancy.by.proportion.suitable,
occupancy.by.suitable.edge.density)
occupancy.landscape.statistics <- occupancy.landscape.statistics %>%
mutate(sig=round(p.value, digits=2)) %>%
mutate(sig=case_when(
p.value < 0.05 ~ paste(as.character(sig), '*'),
TRUE ~  paste(as.character(sig))
))
occupancy.landscape.statistics %>%
filter(term != '(Intercept)') %>%
select(size, sig, variable) %>%
pivot_wider(names_from=size, values_from=sig) %>%
select(variable, PFA, everything()) %>%
kable() %>% kable_styling(bootstrap_options=c('striped'))
occupancy.landscape.statistics %>%
filter(term != '(Intercept)' & p.value < 0.05) %>%
select(size, estimate, variable) %>%
pivot_wider(names_from=size, values_from=estimate) %>%
select(variable, PFA, `breeding area`, everything()) %>%
kable() %>% kable_styling(bootstrap_options=c('striped'))
occupancy.landscape.statistics %>%
filter(term != '(Intercept)' & p.value < 0.05)
out <- glm(cbind(years.occupied, years.empty) ~ proportion.suitable, data=data,
family=binomial(logit), weights=years.surveyed)
out
out %>% tidy()
out %>% summary()
lm.beta()
install.packages('MASS')
install.packages("MASS")
lm.beta()
library(MASS)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
#Load some libraries.
library(tidyverse)
library(vegan)
library(raster)
library(sf)
library(landscapemetrics)
library(broom)
library(knitr)
library(kableExtra)
library(GGally)
library(extrafont)
library(MASS)
# Area is in hectares.
landscape <- data.frame(
size=c('PFA', 'breeding area', 'home range', 'maximum range'),
area=c(60, 200, 3800, 15600)
)
# Convert area in hectares to radii in meters.
landscape <- landscape %>% mutate(radius=sqrt(area*10000/pi))
landscape
# Read in the data.
occupancy <- read_csv('../data/processed/occupancy_sc.csv')
# Calculate number of years NOGO detected out of number of years surveyed.
occupied <- occupancy %>% pivot_longer(-c(site, name), names_to='year', values_to='status') %>%
filter(status > 0) %>%
group_by(site, status) %>%
add_tally() %>%
distinct(site, status, .keep_all=TRUE) %>%
select(-year) %>%
pivot_wider(names_from=status, values_from=n, values_fill=0) %>%
ungroup() %>% rowwise(site, name) %>%
mutate(years.surveyed=sum(c(`3`, `2`, `1`)),
years.occupied=sum(c(`3`, `2`)),
years.empty=years.surveyed-years.occupied,
proportion.occupied=years.occupied/years.surveyed) %>%
select(site, name, years.surveyed, years.occupied, years.empty, proportion.occupied) %>%
filter(years.surveyed > 1)
# Look at it.
occupied
# How many sites have occupancy data?
nrow(occupied)
# How many years have sites been surveyed?
mean(occupied$years.surveyed)
range(occupied$years.surveyed)
# Bring in centroid data.
centroids <- read_csv('../data/interim/zone_centroid_sites.csv')
# Bring in centroid data.
centroids <- read_csv('../data/interim/zone_centroid_sites.csv')
# Join to occupancy data. Not all sites have occupancy data, so we'll keep just the ones that do.
occupied <- left_join(occupied, centroids, by=c('site')) %>%
rename(xcoord=MEAN_X, ycoord=MEAN_Y) %>%
drop_na()
# Make it a spatial object for later.
sites.sf <- occupied %>%
st_as_sf(coords=c('xcoord', 'ycoord')) %>%
st_set_crs('+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs')
# Also make a list of site names for later.
site.names <- occupied$site
# Load all the rasters.
source('../src/load_rasters.R')
# Calculate metrics for each site.
source('../src/calc_land_metrics.R')
# Join the data together.
data <- full_join(occupied, bec.landscape.metrics, by=c('site' = 'nest')) %>%
full_join(suitable.landscape.metrics, by=c('site' = 'nest', 'radius')) %>%
full_join(landcover.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(hsi.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(gap.landscape.metrics, by=c('site' = 'nest', 'radius', 'size')) %>%
full_join(canopy.landscape.metrics, by=c('site' = 'nest', 'radius', 'size'))
data <- data %>% filter(site != 'SIS')
test <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ bec.diversity, data=.x,
family=binomial(logit), weights=years.surveyed))
test
test$`breeding area`
test2 <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ proportion.cover.mature, data=.x,
family=binomial(logit), weights=years.surveyed))
`proportion cover mature` <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ proportion.cover.mature, data=.x,
family=binomial(logit), weights=years.surveyed))
`proportion cover mature`
`forest type diversity` <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ bec.diversity, data=.x,
family=binomial(logit), weights=years.surveyed))
set <- c(`proportion cover mature`, `forest type diversity`)
set
str(test)
str(test$`breeding area`)
4+5
str(test$`breeding area`)
test$`breeding area`$terms
str(test$`breeding area`$terms)
test %>% map(tidy)
set %>% map(tidy)
# Proportion suitable.
occupancy.by.bec.diversity <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ bec.diversity, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.proportion.cover.mature <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ proportion.cover.mature, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.cover.edge.density <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.edge.density, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.cover.contagion <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.contagion, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.cover.diversity <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.diversity, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.cover.richness <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.richness, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.cover.evenness <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ cover.evenness, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.gap.edge.density <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ gap.edge.density, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.canopy.cover <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ canopy.high, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.hsi.edge.density <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ hsi.edge.density, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.hsi.contagion <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ hsi.contagion, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.proportion.suitable <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ proportion.suitable, data=.x,
family=binomial(logit), weights=years.surveyed))
occupancy.by.suitable.edge.density <- data %>%
split(.$size) %>%
map(~glm(cbind(years.occupied, years.empty) ~ suitable.edge.density, data=.x,
family=binomial(logit), weights=years.surveyed))
# Bind it all together.
occupancy.models <- c(occupancy.by.bec.diversity,
occupancy.by.proportion.cover.mature,
occupancy.by.cover.edge.density,
occupancy.by.cover.contagion,
occupancy.by.cover.diversity,
occupancy.by.cover.evenness,
occupancy.by.cover.richness,
occupancy.by.gap.edge.density,
occupancy.by.canopy.cover,
occupancy.by.hsi.edge.density,
occupancy.by.hsi.contagion,
occupancy.by.proportion.suitable,
occupancy.by.suitable.edge.density)
occupancy.models %>% map(tidy)
occupancy.models %>% map(tidy) %>%
bind_rows(.id='size')
occupancy.models %>% map(tidy) %>%
bind_rows(.id='size') %>%
mutate(sig=round(p.value, digits=2)) %>%
mutate(sig=case_when(
p.value < 0.05 ~ paste(as.character(sig), '*'),
TRUE ~  paste(as.character(sig))
)) %>%
filter(term != '(Intercept)') %>%
select(size, sig, variable) %>%
pivot_wider(names_from=size, values_from=sig) %>%
select(variable, PFA, everything())
occupancy.models %>% map(tidy) %>%
bind_rows(.id='size') %>%
mutate(sig=round(p.value, digits=2)) %>%
mutate(sig=case_when(
p.value < 0.05 ~ paste(as.character(sig), '*'),
TRUE ~  paste(as.character(sig))
)) %>%
filter(term != '(Intercept)')# %>%
occupancy.models %>% map(tidy) %>%
bind_rows(.id='size') %>%
mutate(sig=round(p.value, digits=2)) %>%
mutate(sig=case_when(
p.value < 0.05 ~ paste(as.character(sig), '*'),
TRUE ~  paste(as.character(sig))
)) %>%
filter(term != '(Intercept)') %>%
select(size, sig, term) %>%
pivot_wider(names_from=size, values_from=sig) %>%
select(term, PFA, everything())
occupancy.models %>% map(tidy) %>%
bind_rows(.id='size') %>%
mutate(sig=round(p.value, digits=2)) %>%
mutate(sig=case_when(
p.value < 0.05 ~ paste(as.character(sig), '*'),
TRUE ~  paste(as.character(sig))
)) %>%
filter(term != '(Intercept)') %>%
select(size, sig, term) %>%
pivot_wider(names_from=size, values_from=sig) %>%
select(term, PFA, everything()) %>%
kable() %>% kable_styling(bootstrap_options=c('striped'))
occupancy.models
lm.beta(test$`breeding area`)
install.packages('QuantPsyc')
library(QuantPsyc)
lm.beta(test$`breeding area`)
install.packages('arm')
library(arm)
coefplot(test$`breeding area`)
coefplot(test2$`breeding area`)
coefplot(test$`breeding area`)
coefplot(test2$`breeding area`, add=TRUE)
