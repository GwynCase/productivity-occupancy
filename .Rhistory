df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(day(datetime)), last=max(datetime))
df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime))
df %>% ymd_hms(datetime)
df %>% ymd_hms(df$datetime)
ymd_hms(df$datetime)
parse_date_time(df$datetime)
parse_date_time(df$datetime, orders='ymd HMS')
df.br <- df %>% mutate(datetime=ymd_hms(datetime))
View(df.br)
class(df.br$datetime)
is.na(df.br$datetime)
df.br %>% filter(datetime == NA)
df.br %>% mutate(day=day(datetime))
View(df.br)
df.br %>% mutate(day=day(datetime)) %>% summarize(n())
df.br %>% mutate(day=day(datetime)) %>% summarize(n(day))
df.br %>% mutate(day=day(datetime)) %>% group_by(day) %>% summarise(n())
df.br %>% mutate(month=month(datetime)) %>% group_by(month) %>% summarise(n())
df.br <- df %>% mutate(datetime=ymd_hms(datetime))
which(is.na(df.br$datetime))
dr.br[which(is.na(df.br$datetime))]
df.br[which(is.na(df.br$datetime))]
df.br[, which(is.na(df.br$datetime))]
df.br[which(is.na(df.br$datetime)), ]
df[18930:18940, ]
# Load up some libraries.
library('tidyverse')
library('exiftoolr')
library('lubridate')
library('purrr')
# Fill in these three things:
# Where are the pictures now?
path.in <- 'D:/RECONYX/TwentyMileCreek/100RECNX_TwentyMile/'
# What site is it?
site <- 'TMC'
# Where are the pictures going?
# END WITH A FORWARD SLASH
path.out <- 'D:/'
# Make a new directory for the files.
site.dir <- paste0(path.out, site)
dir.create(site.dir)
# Get a list of the photos.
photo.list <- list.files(path.in, full.names=TRUE) %>%
exif_read(tags=c('filename', 'CreateDate', 'SerialNumber'))
# Create a data frame.
photo.df <- photo.list %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site=site, datetime=ymd_hms(datetime)) %>%
add_column(interest='', live.chicks='', class='', family='',
genus='', species='', common='', size='', comments='')
# Save a csv with all the photos.
write.csv(photo.df,
file=paste0(site.dir, '/', site, '_photos_all.csv'),
row.names=FALSE)
# Add a week column.
photo.df <- photo.df %>%
mutate(week=week(datetime), week=paste0('week_', week))
# Nest the data frame.
photo.nest <- photo.df %>% group_nest(week)
# Split the data frame by week and save as separate csvs.
walk2(photo.nest$week, photo.nest$data, function(week, data) {
path <-  paste0(site.dir, '/', week, '/', site, '_photos_', week, '.csv')
dir.create(dirname(path), recursive=TRUE, showWarning=FALSE)
write.csv(data, file=path, row.names=FALSE)
})
# Load some libraries.
library('tidyverse')
# Find all the files.
files <- list.files('../data/raw', pattern='photos*', full.names=TRUE)
# Check how they should be imported.
files %>% map(~spec_csv(.))
df <- list.files('../data/raw', pattern='photos*', full.names=TRUE) %>%
map_df(~read_csv(., col_types=cols(
filename = col_character(),
datetime = col_character(),
serial = col_character(),
site = col_character(),
interest = col_character(),
live.chicks = col_integer(),
class = col_character(),
order = col_character(),
family = col_character(),
genus = col_character(),
species = col_character(),
common = col_character(),
size = col_character(),
comments = col_character(),
sex = col_character()
)))
str(df)
distinct(df, interest)
distinct(df, class)
distinct(df, order)
distinct(df, family)
distinct(df, genus)
distinct(df, species)
distinct(df, common)
distinct(df, size)
# Fix genus.
df <- df %>%
mutate(genus = replace(genus, genus=='Tamasciurus', 'Tamiasciurus')) %>%
mutate(genus = replace(genus, genus=='U', 'Unknown'))
# Fix family.
df <- df %>%
mutate(family = replace(family, family=='Sciruidae', 'Sciuridae')) %>%
mutate(family = replace(family, family=='U', 'Unknown'))
# Let's do order, too.
df <- df %>%
mutate(order = replace(order, order=='U', 'Unknown'))
# Also class.
df <- df %>%
mutate(class = replace(class, class=='U', 'Unknown'))
# Make sizes prettier.
df <- df %>% mutate(size=
case_when(size == 'S' ~ 'Small',
size == 'M' ~ 'Medium',
size == 'L' ~ 'Large',
size == 'U' ~ 'Unknown',
TRUE ~ NA_character_))
# Species names.
df <- df %>% mutate(species=
case_when(species == 'spp' ~ 'sp',
species == 'U' ~ 'unknown',
TRUE ~ species))
# And finally common names.
df <- df %>% mutate(common=
case_when(common == 'American.robin' ~ 'American robin',
common == 'american.robin' ~ 'American robin',
common == 'Swainsons.thrush' ~ 'Swainson\'s thrush',
common == 'swainsons.thrush' ~ 'Swainson\'s thrush',
common == 'varied.thrush' ~ 'varied thrush',
common == 'Varied.thrush' ~ 'varied thrush',
common == 'stellers.jay' ~ 'Steller\'s jay',
common == 'gray.jay' ~ 'gray jay',
common == 'band-tailed.pigeon' ~ 'band-tailed pigeon',
common == 'bad-tailed.pigeon' ~ 'band-tailed pigeon',
common == 'U' ~ 'unknown',
common == 'Unknown' ~ 'unknown',
common == 'Douglas.squirrel' ~ 'Douglas squirrel',
common == 'douglas.squirrel' ~ 'Douglas squirrel',
common == 'bushy-tailed.woodrat' ~ 'bushy-tailed woodrat',
common == 'chimpunk' ~ 'chipmunk',
common == 'sooty.grouse' ~ 'sooty grouse',
common == 'ruffed.grouse' ~ 'ruffed grouse',
common == 'northern.flying.squirrel' ~ 'flying squirrel',
common == 'Rat' ~ 'rat',
common == 'red.squirrel' ~ 'red squirrel',
common == 'snowshoe.hare' ~ 'snowshoe hare',
TRUE ~ common))
# Filter out only observations of prey.
prey <- df %>% filter(!is.na(class))
# Check if any are missing size values.
prey %>% filter(is.na(size))
# Make the correction.
df$size[df$genus=='Lepus'] <- 'Large'
# And check.
df %>% filter(!is.na(class)) %>%
filter(is.na(size))
# Number of prey deliveried to nest.
df %>% filter(interest %in% c('newprey', 'delivery')) %>%
summarize(n())
# Number of prey identified.
df %>% filter(!is.na(class)) %>%
summarize(n())
write.csv(df, '../data/interim/camera_data.csv')
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load up some libraries.
library('tidyverse')
library('lubridate')
library('ggplot2')
library('knitr')
library('kableExtra')
# Import the squeaky clean data.
df <- read.csv('../data/interim/camera_data.csv', stringsAsFactors=FALSE)
# How many photos, period?
df %>% group_by(site) %>% summarize(photos=n())
df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>% summarize(prey=n())
ymd_hms(df$datetime)
df %>% mutate(datetime=ymd_hms(datetime))
df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime))
df.br <- df %>% mutate(datetime=ymd_hms(datetime))
df.br <- df %>% mutate(datetime=parse_date_time(datetime))
df.br <- df %>% mutate(datetime=parse_date_time(datetime,
orders=c('%Y-%m-%d %H:%M:%S', '%Y/%m/%d %H:%M:%S')))
df.br %>% mutate(month=month(datetime)) %>% group_by(month) %>% summarise(n())
df.br <- df %>% mutate(datetime=parse_date_time(datetime,
orders=c('%Y-%m-%d %H:%M:%S', '%Y/%m/%d %H:%M:%S')))
df.br %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime))
# Import the squeaky clean data.
df <- read.csv('../data/interim/camera_data.csv', stringsAsFactors=FALSE)
# Do the datetime thing.
df <- df %>% mutate(datetime=parse_date_time(datetime,
orders=c('%Y-%m-%d %H:%M:%S', '%Y/%m/%d %H:%M:%S')))
df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime))
df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime)) %>%
mutate(first=day(first), last=day(last))
df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime)) %>%
mutate(first=date(first), last=date(last))
df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime)) %>%
mutate(first=date(first), last=date(last)) %>%
mutate(days=difftime(first, last))
df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime)) %>%
mutate(first=date(first), last=date(last)) %>%
mutate(days=difftime(last, first))
n.prey <- df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>% summarize(prey=n())
n.prey
# Do the datetime thing.
df <- df %>% mutate(datetime=parse_date_time(datetime,
orders=c('%Y-%m-%d %H:%M:%S', '%Y/%m/%d %H:%M:%S')))
# Calculate days.
timespan <- df %>% filter(interest %in% c('delivery', 'newprey')) %>% group_by(site) %>%
summarize(first=min(datetime), last=max(datetime)) %>%
mutate(first=date(first), last=date(last)) %>%
mutate(days=difftime(last, first))
timespan
bind_cols(timespan, prey)
bind_cols(timespan, n.prey)
bind_cols(timespan, n.prey) %>%
mutate(per.day=prey/days)
as.numeric(timespan$days)
bind_cols(timespan, n.prey) %>%
mutate(days=as.numeric(days), per.day=prey/days)
df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime))
df.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime))
View(df.br)
1800/60
df.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff=diff/60)
df.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff=diff/60) %>%
summarise(mean(diff))
df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff=diff/60) %>%
summarise(mean(diff))
fd.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff=diff/60)
fd.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff=diff/60)
df.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff=diff/60)
df.br %>% summarise(mean(diff))
class(df.br$diff)
df.br %>% mutate(diff=as.numeric(diff)) %>%
summarise(mean(diff))
df.br %>% mutate(diff=as.numeric(diff))
df.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff=diff/60, diff=as.numeric(diff))
class(df.br$diff)
df.br %>% group_by(site) %>% summarize(mean(diff))
mean(df.br$diff)
class(df.br$diff)
mutate(diff=datetime-lag(datetime), diff.min=as.numeric(diff/60)
df.br <- df %>%
mutate(diff=datetime-lag(datetime), diff.min=as.numeric(diff, units='mins')
4+6
df.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff.min=as.numeric(diff, units='mins'))
class(df.br$diff.min)
mean(df.br$diff.min)
df.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff.min=as.numeric(diff, units='mins')) %>%
ungroup()
class(df.br$diff.min)
mean(df.br$diff.min)
mean(df.br$diff.min)
min(df.br$diff.min)
df.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff.min=as.numeric(diff, units='mins')) %>%
replace_na(diff.min, 0)
mutate(diff.min=replace_na(diff.min, 0)
)
df.br <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff.min=as.numeric(diff, units='mins')) %>%
mutate(diff.min=replace_na(diff.min, 0))
min(df.br$diff.min)
mean(df.br$diff.min)
df.br %>% group_by(site) %>% summarize(mean(diff.min))
df.br %>% summarize(mean(diff.min))
df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff.min=as.numeric(diff, units='mins')) %>%
mutate(diff.min=replace_na(diff.min, 0)) %>%
summarize(mean(diff.min))
df %>% ymd_h(datetime)
ymd_h(df$datetime)
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly()
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=60) +
theme_classic()
60*60
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=3600) +
theme_classic()
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(bins=30) +
theme_classic()
3600*12
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=43200) +
theme_classic()
3600*24
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400) +
theme_classic()
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=2) +
theme_classic()
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=1) +
theme_classic()
library('colorBrewer')
library('ColorBrewer')
library('ColorBrewer2')
library('RColorBrewer')
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=1) +
scale_color_brewer(palette='Blues')
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=1) +
scale_color_brewer(palette='Set2')
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=1) +
scale_color_brewer(palette='Dark2')
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=1) +
scale_color_brewer(palette='PRGn')
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=1) +
scale_color_brewer(palette='RdYlBu') +
theme_classic()
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=1) +
scale_color_brewer(palette='Set1') +
theme_classic()
ggplot(df, aes(x=hour(datetime), color=site)) +
geom_freqpoly(size=1) +
scale_color_brewer(palette='Set1') +
theme_classic()
ggplot(df, aes(x=hour(datetime), color=site)) +
geom_freqpoly(binwidth=1, size=1) +
scale_color_brewer(palette='Set1') +
theme_classic()
library('RColorBrewer')
# By day.
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=1) +
scale_color_brewer(palette='Set1') +
theme_classic()
# By hour.
ggplot(df, aes(x=hour(datetime), color=site)) +
geom_freqpoly(binwidth=1, size=1) +
scale_color_brewer(palette='Set1') +
theme_classic()
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site) %>%
summarize(n())
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n())
df.br <- df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n())
df.br <- df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n())
ggplot(df.br, aes(fill=interest, x=site, y=n)) +
geom_bar(position='dodge', stat='identity')
ggplot(df.br, aes(fill=interest, x=site, y=n)) +
geom_bar(position='dodge', stat='identity') +
theme_classic()
ggplot(df.br, aes(fill=interest, x=site, y=n)) +
geom_bar(position='dodge', stat='identity') +
theme_classic() +
scale_color_brewer(palette='Set1')
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
ggplot(df.br, aes(fill=interest, x=site, y=n)) +
geom_bar(position='dodge', stat='identity') +
theme_classic()
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
ggplot(aes(fill=interest, x=site, y=n)) +
geom_bar(position='dodge', stat='identity') +
theme_classic()
# Photos per day?
bind_cols(timespan, n.prey) %>%
mutate(days=as.numeric(days), per.day=prey/days)
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n())
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
spread(interest, n)
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
spread(interest, n) %>%
mutate(totale=delivery+newprey)
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
spread(interest, n) %>%
mutate(total=delivery+newprey, success=deliver/total)
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
spread(interest, n) %>%
mutate(total=delivery+newprey, success=delivery/total)
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
spread(interest, n) %>%
mutate(total=delivery+newprey, success=delivery/total*100)
success$success
success <- df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
spread(interest, n) %>%
mutate(total=delivery+newprey, success=delivery/total*100)
success
success <- df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
spread(interest, n) %>%
mutate(total=delivery+newprey, success=delivery/total*100)
success
success$success
mean(success$success)
sd(success$success)
library('RColorBrewer')
# By day.
ggplot(df, aes(x=datetime, color=site)) +
geom_freqpoly(binwidth=86400, size=1) +
scale_color_brewer(palette='Set1') +
theme_classic()
# By hour.
ggplot(df, aes(x=hour(datetime), color=site)) +
geom_freqpoly(binwidth=1, size=1) +
scale_color_brewer(palette='Set1') +
theme_classic()
df %>% filter(interest %in% c('delivery', 'newprey')) %>%
group_by(site, interest) %>%
summarize(n=n()) %>%
ggplot(aes(fill=interest, x=site, y=n)) +
geom_bar(position='dodge', stat='identity') +
theme_classic()
diff <- df %>%
arrange(site, datetime) %>%
group_by(site) %>%
mutate(diff=datetime-lag(datetime), diff.min=as.numeric(diff, units='mins')) %>%
mutate(diff.min=replace_na(diff.min, 0)) %>%
summarize(m.diff=mean(diff.min))
bind_cols(success, diff$m.dif)
bind_cols(success, diff$m.diff)
bind_cols(success, diff)
bind_cols(success, diff) %>%
ggplot(aes(x=m.diff, y=success)) +
geom_point() +
theme_classic()
bind_cols(success, diff) %>%
ggplot(aes(x=m.diff, y=success, label=site)) +
geom_point() +
geom_text(hjust='inward', nudge_y = 0.5) +
theme_classic()
bind_cols(success, diff) %>%
ggplot(aes(x=m.diff, y=success, label=site)) +
geom_point() +
geom_text(hjust='inward', nudge_y = 0.5) +
theme_classic()
