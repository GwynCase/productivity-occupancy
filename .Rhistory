proportion.occupied=years.occupied/years.surveyed) %>%
select(site, name, years.surveyed, years.occupied, proportion.occupied) %>%
arrange(desc(years.surveyed, years.occupied))
years.occupied$index <- 1:nrow(years.occupied)
years.occupied %>%
mutate(years.empty=years.surveyed-years.occupied) %>%
pivot_longer(-c(site, name, index), names_to='metric', values_to='value') %>%
filter(metric %in% c('years.occupied', 'years.empty')) %>%
ggplot(aes(x=index, y=value, fill=metric)) +
geom_bar(stat='identity', position='stack', color='white') +
theme_classic() +
coord_flip() +
labs(x='site', y='number of years surveyed') +
scale_fill_brewer(palette='Set2')
load(file='../data/interim/bec_landscape_metrics.rda')
load(file='../data/interim/landcover_landscape_metrics.rda')
load(file='../data/interim/hsi_landscape_metrics.rda')
# Finally, join everything together.
data <- sites %>% select(site, nest, year, lat, lon) %>%
right_join(bec.landscape.metrics, by='nest') %>%
left_join(landcover.landscape.metrics, by=c('nest', 'radius', 'size')) %>%
left_join(hsi.landscape.metrics, by=c('nest', 'radius', 'size')) %>%
left_join(diet.diversity, by='nest') %>%
left_join(proportion.squirrel, by='nest') %>%
left_join(n.fledglings, by='nest') %>%
right_join(landscape, by=c('radius', 'size'))
data %>% filter(size == 'PFA') %>%
select(-site, -nest, -year, -radius, -size, -mature, -old, -rock, -young, -shrub, -regen, -deciduous,
-freshwater, -undefined, -ocean, -hsi.freshwater, -hsi.ocean, -hsi.river,
-diet.diversity, -proportion.squirrel, -n.fledglings, -nil, -moderate, -high, -low, -area) %>%
ggcorr(method=c('pairwise', 'pearson'), nbreaks=5, hjust=1, layout.exp=5)
data %>% filter(size == 'breeding area') %>%
select(-site, -nest, -year, -radius, -size, -mature, -old, -rock, -young, -shrub, -regen, -deciduous,
-freshwater, -undefined, -ocean, -hsi.freshwater, -hsi.ocean, -hsi.river,
-diet.diversity, -proportion.squirrel, -n.fledglings, -nil, -moderate, -high, -low, -area) %>%
ggcorr(method=c('pairwise', 'pearson'), nbreaks=5, hjust=1, layout.exp=5)
data %>% filter(size == 'breeding home range') %>%
select(-site, -nest, -year, -radius, -size, -mature, -old, -rock, -young, -shrub, -regen, -deciduous,
-freshwater, -undefined, -ocean, -hsi.freshwater, -hsi.ocean, -hsi.river,
-diet.diversity, -proportion.squirrel, -n.fledglings, -nil, -moderate, -high, -low, -area) %>%
ggcorr(method=c('pairwise', 'pearson'), nbreaks=5, hjust=1, layout.exp=5)
data %>% filter(size == 'maximum range') %>%
select(-site, -nest, -year, -radius, -size, -mature, -old, -rock, -young, -shrub, -regen, -deciduous,
-freshwater, -undefined, -ocean, -hsi.freshwater, -hsi.ocean, -hsi.river,
-diet.diversity, -proportion.squirrel, -n.fledglings, -nil, -moderate, -high, -low, -area) %>%
ggcorr(method=c('pairwise', 'pearson'), nbreaks=5, hjust=1, layout.exp=5)
# Dominant forest type of territory.
bec.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
select(nest, size, radius, dominant.bec) %>%
group_by(size, dominant.bec) %>%
summarize(count=n()) %>%
ggplot(aes(x=dominant.bec, y=count, fill=size)) +
geom_bar(stat='identity') +
facet_wrap(~size) +
scale_fill_brewer(palette='Set2') +
theme_classic() +
theme(legend.position='none') +
coord_flip()
# Diversity of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.diversity) %>%
ggplot(aes(x=factor(radius), y=bec.diversity, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')
# Evenness of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.evenness) %>%
ggplot(aes(x=factor(radius), y=bec.evenness, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')
# Intermixing of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.contagion) %>%
ggplot(aes(x=factor(radius), y=bec.contagion, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
select(nest, size, undefined, rock, ocean, freshwater,
shrub, deciduous, regen,
young, mature, old) %>%
pivot_longer(-c(nest, size), names_to='metric', values_to='values') %>%
ggplot(aes(x=metric, y=values, fill=size)) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
facet_wrap(~size) +
theme(legend.position='none') +
coord_flip()
data %>% filter(size == 'maximum range') %>%
select(-site, -nest, -year, -radius, -size, -mature, -old, -rock, -young, -shrub, -regen, -deciduous,
-freshwater, -undefined, -ocean, -hsi.freshwater, -hsi.ocean, -hsi.river,
-diet.diversity, -proportion.squirrel, -n.fledglings, -nil, -moderate, -high, -low, -area) %>%
ggcorr(method=c('pairwise', 'pearson'), nbreaks=5, hjust=1, layout.exp=5)
# Dominant forest type of territory.
bec.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
select(nest, size, radius, dominant.bec) %>%
group_by(size, dominant.bec) %>%
summarize(count=n()) %>%
ggplot(aes(x=dominant.bec, y=count, fill=size)) +
geom_bar(stat='identity') +
facet_wrap(~size) +
scale_fill_brewer(palette='Set2') +
theme_classic() +
theme(legend.position='none') +
coord_flip()
# Latitude & longitude of nest.
sites %>% select(nest, lat, lon) %>%
# pivot_longer(-nest, names_to='coord', values_to='value') %>%
ggplot(aes(x=lon, y=lat)) +
geom_point() +
theme_classic()
# Diversity of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.diversity) %>%
ggplot(aes(x=factor(radius), y=bec.diversity, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')
# Diversity of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.diversity) %>%
ggplot(aes(x=factor(radius), y=bec.diversity, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Diverstiy of forest types')
# Diversity of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.diversity) %>%
ggplot(aes(x=factor(radius), y=bec.diversity, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Diversity of forest types')
# Richness of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.richness) %>%
ggplot(aes(x=factor(radius), y=bec.richness, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Richness of forest types')
# Richness of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.richness) %>%
ggplot(aes(x=factor(radius), y=bec.richness, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Richness density of forest types')
# Richness of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.richness) %>%
ggplot(aes(x=factor(radius), y=bec.richness, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Richness density of forest types',
caption='Controls for scale; alternately: absolute richness')
# Richness of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.richness) %>%
ggplot(aes(x=factor(radius), y=bec.richness, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Richness density of forest types',
caption='Patch richness density controls for plot size; alternately absolute richness could be used.')
# Evenness of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.evenness) %>%
ggplot(aes(x=factor(radius), y=bec.evenness, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')+
labs(title='Evenness of forest types')
# Evenness of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.evenness) %>%
ggplot(aes(x=factor(radius), y=bec.evenness, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')+
labs(title='Evenness of forest types')
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
filter(site != 'TCR') %>%
select(nest, size, undefined, rock, ocean, freshwater,
shrub, deciduous, regen,
young, mature, old) %>%
pivot_longer(-c(nest, size), names_to='metric', values_to='values') %>%
ggplot(aes(x=metric, y=values, fill=size)) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
facet_wrap(~size) +
theme(legend.position='none') +
coord_flip()
View(landcover.landscape.metrics)
library(stringr)
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
filter(!str_detect(nest, '$TCR')) %>%
select(nest, size, undefined, rock, ocean, freshwater,
shrub, deciduous, regen,
young, mature, old) %>%
pivot_longer(-c(nest, size), names_to='metric', values_to='values') %>%
ggplot(aes(x=metric, y=values, fill=size)) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
facet_wrap(~size) +
theme(legend.position='none') +
coord_flip()
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
filter(!str_detect(nest, '$TCR'))
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
filter(!str_detect(nest, '$TCR')) %>%
select(nest)
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
filter(!str_detect(nest, '$TCR')) %>%
select(nest) %>%
distinct()
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
filter(str_detect(nest, 'TCR')) %>%
select(nest) %>%
distinct()
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
filter(nest != 'TCR2019') %>%
select(nest, size, undefined, rock, ocean, freshwater,
shrub, deciduous, regen,
young, mature, old) %>%
pivot_longer(-c(nest, size), names_to='metric', values_to='values') %>%
ggplot(aes(x=metric, y=values, fill=size)) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
facet_wrap(~size) +
theme(legend.position='none') +
coord_flip()
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
filter(nest != 'TCR2019') %>%
select(nest, size, undefined, rock, ocean, freshwater,
shrub, deciduous, regen,
young, mature, old) %>%
pivot_longer(-c(nest, size), names_to='metric', values_to='values') %>%
ggplot(aes(x=metric, y=values, fill=size)) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
facet_wrap(~size) +
theme(legend.position='none') +
coord_flip()
landcover.landscape.metrics %>%
mutate(size=fct_reorder(size, radius)) %>%
filter(nest != 'TCR2019') %>%
select(nest, size, undefined, rock, ocean, freshwater,
shrub, deciduous, regen,
young, mature, old) %>%
pivot_longer(-c(nest, size), names_to='metric', values_to='values') %>%
ggplot(aes(x=metric, y=values, fill=size)) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
facet_wrap(~size) +
theme(legend.position='none') +
coord_flip() +
labs(title='Proportion of landcover classes')
# Diversity of land cover types within territory.
select(landcover.landscape.metrics, nest, radius, cover.diversity) %>%
ggplot(aes(x=factor(radius), y=cover.diversity, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Diversity of landcover classes')
# Edge density of land cover.
select(landcover.landscape.metrics, nest, radius, cover.edge.density) %>%
ggplot(aes(x=factor(radius), y=cover.edge.density, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')
# Interspersion of land cover.
select(landcover.landscape.metrics, nest, radius, cover.contagion) %>%
ggplot(aes(x=factor(radius), y=cover.contagion, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')
# Diversity of land cover types within territory.
select(landcover.landscape.metrics, nest, radius, cover.diversity) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=cover.diversity, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Diversity of landcover classes')
# Edge density of land cover.
select(landcover.landscape.metrics, nest, radius, cover.edge.density) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=cover.edge.density, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')+
labs(title='Landcover edge density', caption='Edge density controls for plot size.')
# Interspersion of land cover.
select(landcover.landscape.metrics, nest, radius, cover.contagion) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=cover.contagion, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none')
# Amount of mature forest.
select(landcover.landscape.metrics, nest, radius, amount.cover.mature) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=amount.cover.mature, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Proportion of site in older forest')
```{r, proportion-mature, message=FALSE, warning=FALSe}
# Amount of mature forest.
select(landcover.landscape.metrics, nest, radius, amount.cover.mature) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=amount.cover.mature, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Proportion of site in older forest')
# Amount of mature forest.
select(landcover.landscape.metrics, nest, radius, amount.cover.mature) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=amount.cover.mature, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Proportion of site in older forest')
# Interspersion of land cover.
select(landcover.landscape.metrics, nest, radius, cover.contagion) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=cover.contagion, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Landcover contagion', caption='Contagion and IJI (interspersion & juxtaposition) are 2 similar methods of measuring mixing and clumping')
# Interspersion of land cover.
select(landcover.landscape.metrics, nest, radius, cover.contagion) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=cover.contagion, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Landcover contagion', caption='Contagion measures mixing and clumping. IJI is a very similar metric that could be used instead.')
# Amount of high or moderate habitat under the HSI.
select(hsi.landscape.metrics, nest, radius, amount.suitable) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=amount.suitable, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Proportion of site in suitable habitat', caption='Suitable habitat is forest scored 2 or 3 by the model.')
```{r, amount-suitable, message=FALSE, warning=FALSE}
# Amount of high or moderate habitat under the HSI.
select(hsi.landscape.metrics, nest, radius, amount.suitable) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=amount.suitable, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Proportion of site in suitable habitat', caption='Suitable habitat is forest scored 2 or 3 by the model.')
# Edge density of HSI.
select(hsi.landscape.metrics, nest, radius, hsi.edge.density) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=hsi.edge.density, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Edge density between HSI classes')
# Interspersion of HSI.
select(hsi.landscape.metrics, nest, radius, hsi.contagion) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=hsi.interspersion, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Contagions of HSI classes', caption='Contagion captures the mixing and clumping of classes. IJI is another very similar metric.')
# Interspersion of HSI.
select(hsi.landscape.metrics, nest, radius, hsi.contagion) %>%
filter(nest != 'TCR2019') %>%
ggplot(aes(x=factor(radius), y=hsi.contagion, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Contagions of HSI classes', caption='Contagion captures the mixing and clumping of classes. IJI is another very similar metric.')
View(landcover.landscape.metrics)
View(data)
View(hsi.landscape.metrics)
# Richness of forest types within territory.
select(bec.landscape.metrics, nest, radius, bec.richness) %>%
ggplot(aes(x=factor(radius), y=bec.richness, fill=factor(radius))) +
geom_boxplot() +
geom_jitter() +
scale_fill_brewer(palette='Set2') +
theme_classic() +
scale_x_discrete(labels=c('PFA', 'Breeding area', 'Breeding home range', 'maximum range')) +
theme(axis.title.x=element_blank(), legend.position='none') +
labs(title='Richness density of forest types',
caption='Patch richness density controls for plot size. Alternately, absolute richness could be used.')
data %>% filter(size == 'PFA') %>%
select(-site, -nest, -year, -radius, -size, -mature, -old, -rock, -young, -shrub, -regen, -deciduous,
-freshwater, -undefined, -ocean, -hsi.freshwater, -hsi.ocean, -hsi.river,
-diet.diversity, -proportion.squirrel, -n.fledglings, -nil, -moderate, -high, -low, -area) %>%
select(amount.suitable, starts_with(hsi))
data %>% filter(size == 'PFA') %>%
select(-site, -nest, -year, -radius, -size, -mature, -old, -rock, -young, -shrub, -regen, -deciduous,
-freshwater, -undefined, -ocean, -hsi.freshwater, -hsi.ocean, -hsi.river,
-diet.diversity, -proportion.squirrel, -n.fledglings, -nil, -moderate, -high, -low, -area) %>%
select(amount.suitable, starts_with('hsi'))
data %>% filter(size == 'PFA') %>%
select(-site, -nest, -year, -radius, -size, -mature, -old, -rock, -young, -shrub, -regen, -deciduous,
-freshwater, -undefined, -ocean, -hsi.freshwater, -hsi.ocean, -hsi.river,
-diet.diversity, -proportion.squirrel, -n.fledglings, -nil, -moderate, -high, -low, -area) %>%
select(amount.suitable, starts_with('hsi')) %>%
ggcorr(method=c('pairwise', 'pearson'), nbreaks=5, hjust=1, layout.exp=5)
