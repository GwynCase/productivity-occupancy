top.prey <- prey.table %>%
ungroup() %>%
filter(name != ' ') %>%
top_n(10, p.biomass)
View(top.prey)
View(site.mass)
# Pull out prey all prey items which match these criteria.
top.items <- semi_join(site.mass, top.prey, by='common') %>%
unite(name, 3:4, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(site, name, p.biomass) %>%
distinct()
# Redo the biomass calculation on a per-site basis.
site.mass <- items %>%
mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(s.mass=sum(mass)) %>%
ungroup() %>%
group_by(site, common) %>%
mutate(biomass=sum(mass), p.biomass=(biomass/s.mass*100)) %>%
ungroup()
# Pull out prey all prey items which match these criteria.
top.items <- semi_join(site.mass, top.prey, by='common') %>%
unite(name, 3:4, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(site, name, p.biomass) %>%
distinct()
View(top.prey)
View(site.mass)
top.items <- semi_join(site.mass, top.prey, by='common')
View(top.items)
top.items <- semi_join(site.mass, top.prey, by='common')%>%
unite(name, 3:4, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
))
# Do the calculations
mass.table <- items %>% mutate(mass=as.numeric(mass)) %>%
# Calculate totall biomass & total count.
mutate(t.biomass=sum(mass), t.n=n()) %>%
group_by(common) %>%
# Calcuate biomass and count by group.
# Calculate percent biomass and count by group.
mutate(n=n(), biomass=sum(mass), p.biomass=(biomass/t.biomass*100),
p.n=(n/t.n*100))
# Make a pretty table.
prey.table <- mass.table %>% arrange(class, group, genus) %>%
unite(name, 4:5, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(common, name, n, p.n, p.biomass) %>%
distinct()
# Print it out.
prey.table %>%
kable(col.names=(c('Prey species', '', 'Count', '% count', '% biomass')),
digits=2) %>%
kable_styling(full_width=TRUE) %>%
pack_rows('Large birds (> 150 g)', 1, 3) %>%
pack_rows('Medium birds (60-150 g)', 4, 8) %>%
pack_rows('Small birds (< 40 g)', 9, 10) %>%
pack_rows('Large mammals (> 600 g)', 11, 12) %>%
pack_rows('Medium mammals (200-600 g)', 13, 18) %>%
pack_rows('Small mammals (< 200 g)', 19, 22) %>%
pack_rows('Unidentified items', 23, 24)
top.items <- semi_join(site.mass, top.prey, by='common')%>%
unite(name, 4:5, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
))
top.items <- semi_join(site.mass, top.prey, by='common') #%>%
semi_join(site.mass, top.prey, by='common')
# What are the most common prey items, identified to species, by biomass?
top.prey <- prey.table %>%
ungroup() %>%
filter(name != ' ') %>%
top_n(10, p.biomass)
# Pull out prey all prey items which match these criteria.
top.items <- semi_join(site.mass, top.prey, by='common') %>%
unite(name, 4:5, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(site, name, p.biomass) %>%
distinct()
View(top.items)
# Pull out prey all prey items which match these criteria.
top.items <- semi_join(site.mass, top.prey, by='common') %>%
unite(name, 4:5, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(site, common, p.biomass) %>%
distinct()
top.items %>% spread(common, p.biomass)
top.items %>% spread(common, p.biomass) %>%
replace_na(0)
top.items %>% spread(common, p.biomass) %>%
replace_na(list(0))
top.items %>% spread(common, p.biomass) %>%
mutate(1:6=replace_na(list(0)))
top.items %>% spread(common, p.biomass) %>%
replace(is.na(.), 0)
top.table <- top.items %>% spread(common, p.biomass) %>%
replace(is.na(.), 0)
View(top.table)
top.table <- top.items %>% spread(common, p.biomass) %>%
replace(is.na(.), 0) %>%
mutate(total = rowSums(.[2:11]))
# And make a pretty table.
top.table %>%
kable(digits=2) %>%
kable_styling(full_width=TRUE)
install.packages('formattble')
colnames(top.table)
top.table$`Douglas squirrel`
library('formattable')
top.table %>%
mutate(`Douglas squirrel`=`Douglas squirrel`*2)
top.table %>%
mutate(`Douglas squirrel` = color_tile("white", "orange")(`Douglas squirrel`))
kable(digits=2) %>%
kable_styling(full_width=TRUE)
top.table %>%
mutate(`Douglas squirrel` = color_tile("white", "orange")(`Douglas squirrel`)) %>%
kable(digits=2) %>%
kable_styling(full_width=TRUE)
top.table %>%
mutate(`Douglas squirrel` = color_tile("white", "orange")(`Douglas squirrel`)) %>%
kable(digits=2) %>%
kable_styling(full_width=TRUE)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
})%>%
kable(escape = F, align = "c") %>%
kable_styling(c("striped", "condensed"), full_width = F)
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9)
})%>%
kable(escape = F, align = "c") %>%
kable_styling(c("striped", "condensed"), full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
}) %>%
kable(digits=2) %>%
kable_styling(c("striped", "condensed"), full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
}) %>%
kable(escape = F, digits=2) %>%
kable_styling(c("striped", "condensed"), full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(c("striped", "condensed"), full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
cell_spec(x,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
bold = T,
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
}) %>%
kable(escape = F, align = "c") %>%
kable_styling(c("striped", "condensed"), full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
}) %>%
kable(escape = F, align = "c") %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9),
font_size = spec_font_size(x))
}) %>%
kable(escape=F) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9))
}) %>%
kable(escape=F) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, start=0, end=0.9))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, begin=0, end=0.9))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
cell_spec(x, bold = T,
color = spec_color(x, begin=0, end=0.9, scale_from(c(0,0.9))))
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, begin=0, end=0.9, scale_from(c(0,0.9))))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, scale_from=range(0, 90)))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
range(unlist(top.table)
)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, scale_from=range(0, 50)))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 50)))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=1, scale_from=range(0, 50)))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
}) %>%
kable(digits=2) %>%
kable_styling(full_width = F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
test <- data.frame(text = "hello", number1 = 1.135, number2 = 2.135)
kable(test, digits = 2)
kable(test, digits = 2)
top2 <- top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
})
kable(top2, digits = 2, escape=F)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
detatch('package:formattable', unload=TRUE)
detach('package:formattable', unload=TRUE)
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
}) %>%
kable(digits=2, escape=F) %>%
kable_styling(full_width = F)
site.mass <- items %>%
mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(s.mass=sum(mass)) %>%
ungroup() %>%
group_by(site, common) %>%
mutate(biomass=sum(mass), p.biomass=(biomass/s.mass*100)) %>%
mutate(p.biomass=round(p.biomass, digits=2)) %>%
ungroup()
# Redo the biomass calculation on a per-site basis.
site.mass <- items %>%
mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(s.mass=sum(mass)) %>%
ungroup() %>%
group_by(site, common) %>%
mutate(biomass=sum(mass), p.biomass=(biomass/s.mass*100)) %>%
ungroup()
items %>%
mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(s.mass=sum(mass)) %>%
ungroup() %>%
group_by(site, common) %>%
mutate(biomass=sum(mass), p.biomass=(biomass/s.mass*100)) %>%
mutate(p.biomass=round(p.biomass, digits=2)) %>%
ungroup()
site2 <- items %>%
mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(s.mass=sum(mass)) %>%
ungroup() %>%
group_by(site, common) %>%
mutate(biomass=sum(mass), p.biomass=(biomass/s.mass*100)) %>%
mutate(p.biomass=round(p.biomass, digits=2)) %>%
ungroup()
View(site2)
# Redo the biomass calculation on a per-site basis.
site.mass <- items %>%
mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(s.mass=sum(mass)) %>%
ungroup() %>%
group_by(site, common) %>%
mutate(biomass=sum(mass), p.biomass=(biomass/s.mass*100)) %>%
mutate(p.biomass=round(p.biomass, digits=2)) %>%
ungroup()
# What are the most common prey items, identified to species, by biomass?
top.prey <- prey.table %>%
ungroup() %>%
filter(name != ' ') %>%
top_n(10, p.biomass)
top.prey
# Redo the biomass calculation on a per-site basis.
site.mass <- items %>%
mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(s.mass=sum(mass)) %>%
ungroup() %>%
group_by(site, common) %>%
mutate(biomass=sum(mass), p.biomass=(biomass/s.mass*100)) %>%
mutate(p.biomass=round(p.biomass, digits=2)) %>%
ungroup()
# Pull out prey all prey items which match these criteria.
top.items <- semi_join(site.mass, top.prey, by='common') %>%
unite(name, 4:5, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(site, common, p.biomass) %>%
distinct()
# Reorganize the data.
top.table <- top.items %>% spread(common, p.biomass) %>%
replace(is.na(.), 0) %>%
mutate(total = rowSums(.[2:11]))
# And make a pretty table.
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
}) %>%
kable(escape=F) %>%
kable_styling(full_width = F)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load up some libraries.
library('tidyverse')
library('lubridate')
library('ggplot2')
library('knitr')
library('kableExtra')
# Import the data.
df <- read.csv('../data/interim/camera_corrected.csv', stringsAsFactors=FALSE)
# Do the datetime thing.
df <- df %>% mutate(datetime=parse_date_time(datetime,
orders=c('%Y-%m-%d %H:%M:%S', '%Y/%m/%d %H:%M:%S')))
source('../src/prey_attributes.R')
head(items)
# Do the calculations
mass.table <- items %>% mutate(mass=as.numeric(mass)) %>%
# Calculate totall biomass & total count.
mutate(t.biomass=sum(mass), t.n=n()) %>%
group_by(common) %>%
# Calcuate biomass and count by group.
# Calculate percent biomass and count by group.
mutate(n=n(), biomass=sum(mass), p.biomass=(biomass/t.biomass*100),
p.n=(n/t.n*100))
# Make a pretty table.
prey.table <- mass.table %>% arrange(class, group, genus) %>%
unite(name, 4:5, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(common, name, n, p.n, p.biomass) %>%
distinct()
# Print it out.
prey.table %>%
kable(col.names=(c('Prey species', '', 'Count', '% count', '% biomass')),
digits=2) %>%
kable_styling(full_width=TRUE) %>%
pack_rows('Large birds (> 150 g)', 1, 3) %>%
pack_rows('Medium birds (60-150 g)', 4, 8) %>%
pack_rows('Small birds (< 40 g)', 9, 10) %>%
pack_rows('Large mammals (> 600 g)', 11, 12) %>%
pack_rows('Medium mammals (200-600 g)', 13, 18) %>%
pack_rows('Small mammals (< 200 g)', 19, 22) %>%
pack_rows('Unidentified items', 23, 24)
# What are the most common prey items, identified to species, by biomass?
top.prey <- prey.table %>%
ungroup() %>%
filter(name != ' ') %>%
top_n(10, p.biomass)
top.prey
# Redo the biomass calculation on a per-site basis.
site.mass <- items %>%
mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(s.mass=sum(mass)) %>%
ungroup() %>%
group_by(site, common) %>%
mutate(biomass=sum(mass), p.biomass=(biomass/s.mass*100)) %>%
mutate(p.biomass=round(p.biomass, digits=2)) %>%
ungroup()
# Pull out prey all prey items which match these criteria.
top.items <- semi_join(site.mass, top.prey, by='common') %>%
unite(name, 4:5, sep=' ', remove=FALSE) %>%
mutate(name=case_when(
name == 'Unknown unknown' ~ ' ',
TRUE ~ name
)) %>%
dplyr::select(site, common, p.biomass) %>%
distinct()
# Reorganize the data.
top.table <- top.items %>% spread(common, p.biomass) %>%
replace(is.na(.), 0) %>%
mutate(total = rowSums(.[2:11]))
# And make a pretty table.
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
}) %>%
kable(escape=F) %>%
kable_styling(full_width = F)
# And make a pretty table.
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
}) %>%
kable(escape=F) %>%
kable_styling(full_width = T)
# And make a pretty table.
top.table %>%
mutate_if(is.numeric, function(x) {
cell_spec(x,
color = spec_color(x, end=0.9, direction=-1, scale_from=range(0, 55)))
}) %>%
kable(escape=F) %>%
kable_styling(full_width = T)
