"0","# Make a list of landcover metrics to calculate."
"0","landcover.metrics <- c('lsm_c_pland', 'lsm_l_ed', 'lsm_l_contag', 'lsm_l_sidi', 'lsm_l_siei', 'lsm_l_prd')"
"0",""
"0","# Make a function to do the calculations and formatting."
"0","calc.landcover.metrics <- function(x) {"
"0","  sample_lsm(r.landcover, y=camera.sites.sf, size=x, plot_id=camera.nests, shape='circle', "
"0","             what=landcover.metrics) %>% "
"0","    left_join(landcover.levels, by=c('class'='ID')) %>% "
"0","    mutate(class.name=ifelse(is.na(class.name), metric, class.name)) %>% "
"0","    select(-class, -metric, -level) %>%  "
"0","    pivot_wider(names_from=class.name, values_from=value) %>% "
"0","    mutate(radius=x)"
"0","}"
"0",""
"0","# Run the function for each sample size."
"0","landcover.landscape.metrics <- map_df(landscape$radius, calc.landcover.metrics)"
"0",""
"0","# Do some cleanup: fill NAs with zeros and rename columns, calculate mature forest."
"0","landcover.landscape.metrics <- landcover.landscape.metrics %>% "
"0","  replace_na(list(old=0, mature=0)) %>% "
"0","  mutate(proportion.cover.mature=mature + old) %>% "
"0","  select(radius, nest=plot_id, proportion.cover.mature,"
"0","         cover.edge.density=ed, cover.contagion=contag,"
"0","         cover.diversity=sidi, cover.evenness=siei, cover.richness=prd) %>% "
"0","  filter(nest != 'TCR2019')"
"0",""
"0","landcover.landscape.metrics <- select(landscape, radius, size) %>% right_join(landcover.landscape.metrics)"
