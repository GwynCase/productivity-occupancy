"0","# Read in nest data."
"0","nests <- read_csv('../data/processed/sc_nests.csv')"
"0",""
"0","# Calculate a centroid for each site."
"0","centroids <- nests %>% group_by(site) %>% "
"0","  mutate(xcoord=mean(xcoord), ycoord=mean(ycoord)) %>% "
"0","  distinct(site, name, xcoord, ycoord) %>% ungroup()"
"0",""
"0","# Make it a spatial object for later."
"0","centroids.sf <- centroids %>% "
"0","  st_as_sf(coords=c('xcoord', 'ycoord')) %>% "
"0","  st_set_crs('+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs') %>% "
"0","  st_as_sf()"
"0",""
"0","# Bring in study area shapefile."
"0","tz.region <- read_sf(dsn='../data/processed/new_transition_zone.shp', "
"0","                     layer='new_transition_zone') %>% "
"0","  ms_simplify()"
"0",""
"0","# Add zone information to centroids."
"0","centroids.sf <- centroids.sf %>% mutate("
"0","  zone=as.integer(st_intersects(geometry, tz.region)),"
"0","  zone=case_when("
"0","    is.na(zone) ~ 'cs',"
"0","    TRUE ~ 'tz'"
"0","  )"
"0",")"
"0",""
"0","# Bring in specimen data."
"0","remains.data <- read_csv('../data/processed/specimens_20210318.csv', guess_max=7000) %>% "
"0","  ## filter only records with at least size assigned..."
"0","  filter(size != 'U')"
"0",""
"0","# Bring in camera data."
"0","photos <- read_csv('../data/interim/cameras_20210315.csv', guess_max=7000)"
"0","camera.data <- photos %>% "
"0","  ## filter only records with at least size assigned..."
"0","  filter(size != 'U')"
"0",""
"0","# Bring in a list of site abbreviations and site names."
"0","nest.list <- read_csv('../data/processed/site_abbreviations.csv')"
"0",""
"0","# Standardize the specimen data."
"0","remains.data <- left_join(remains.data, nest.list, by=c('name', 'site')) %>% "
"0","  select(site, date, class, order, family, genus, species, common, size, age, source)"
"0",""
"0","# Standardize the camera data."
"0","camera.data <- camera.data %>% "
"0","  mutate(date=date(datetime), source='C') %>% "
"0","  select(site, date, class, order, family, genus, species, common, size, age, source)"
"0",""
"0","# Join them together."
"0","diet.data <- bind_rows(remains.data, camera.data)"
"0",""
"0","# Add a unique site/year identifier."
"0","diet.data <- diet.data %>% "
"0","  mutate(year=year(date), nest=paste(site, year, sep=''))"
"0",""
"0","# Do some cleanup."
"0","diet.data <- diet.data %>% "
"0","  mutate(size=case_when("
"0","    size %in% c('S', 'Small') ~ 'small',"
"0","    size %in% c('M', 'Medium') ~ 'medium',"
"0","    size %in% c('L', 'Large') ~ 'large'"
"0","  ))"
"0",""
"0","# Bring in a list of all known prey."
"0","prey.list <- read_csv('../data/interim/prey_attributes.csv')"
"0",""
"0","# Join the biomass data to the list of diet items."
"0","diet.items <- prey.list %>% select(genus, species, binomial, common, category, mass) %>% "
"0","  right_join(diet.data, by=c('genus', 'species', 'common'))"
"0",""
"0","# For unidentified items, classify them by size and class."
"0","diet.items <- diet.items %>% mutate(category=case_when("
"0","  is.na(category) & class == 'Mammalia' & size == 'small' ~ 'small mammal',"
"0","  is.na(category) & class == 'Mammalia' & size == 'medium' ~ 'medium mammal',"
"0","  is.na(category) & class == 'Mammalia' & size == 'large' ~ 'large mammal',"
"0","  is.na(category) & class == 'Aves' & size == 'small' ~ 'small bird',"
"0","  is.na(category) & class == 'Aves' & size == 'medium' ~ 'medium bird',"
"0","  is.na(category) & class == 'Aves' & size == 'large' ~ 'large bird',"
"0","  is.na(category) & class == 'Unknown' ~ paste(size, 'item'),"
"0","  TRUE ~ category))"
"0",""
"0","# For unidentified items, fill in the binomial column."
"0","diet.items <- diet.items %>% replace_na(list(binomial = 'Unidentified item'))"
"0",""
"0","# Calculate average masses for unidentified items, based of known species."
"0","mean.mass <- diet.items %>% drop_na(mass) %>% "
"0","  distinct(binomial, mass, category) %>% "
"0","  group_by(category) %>% "
"0","  ## averaging the mass for each size & class category..."
"0","  summarize(average=mean(mass)) %>% "
"0","  pivot_wider(names_from=category, values_from=average) %>% "
"0","  ## calculating the average mass for complete unknowns..."
"0","  mutate(`large item` = mean(c(`large bird`, `large mammal`)),"
"0","         `medium item` = mean(c(`medium bird`, `medium mammal`)),"
"0","         `small item` = mean(c(`small bird`, `small mammal`))) %>% "
"0","  ## and reassembling it in a tidy format."
"0","  pivot_longer(everything(), names_to='category', values_to='average')"
"0",""
"0","# Join average mass to diet items..."
"0","diet.items <- left_join(diet.items, mean.mass, by='category') %>% "
"0","  ## and fill in missing mass with average values"
"0","  mutate(mass=coalesce(mass, average)) %>% "
"0","  ## then drop no longer needed average column and rearrange."
"0","  select(site, year, nest, class, order, family, genus, species, binomial, common, "
"0","         category, size, mass, age, source)"
"0",""
"0","# Change mass for juvenile items."
"0","diet.items <- diet.items %>% mutate(mass=case_when("
"0","  age == 'J' ~ 0.5*mass,"
"0","  TRUE ~ mass"
"0","))"
"0",""
"0","# Add grouping categories."
"0","diet.items <- diet.items %>% mutate(group=case_when("
"0","  class == 'Aves' & family == 'Phasianidae' ~ 'grouse',"
"0","  class == 'Aves' & family == 'Corvidae' ~ 'corvid',"
"0","  class == 'Aves' & family == 'Turdidae' ~ 'thrush',"
"0","  class == 'Aves' ~ 'bird',"
"0","  class == 'Mammalia' & genus == 'Tamiasciurus' ~ 'squirrel',"
"0","  class == 'Mammalia' & genus == 'Lepus' ~ 'hare',"
"0","  class == 'Mammalia' ~ 'mammal',"
"0","  TRUE ~ 'unknown'"
"0","))"
"0",""
"0","# Calculate counts per group per zone per source."
"0","zone.counts <- left_join(diet.items, centroids.sf, by=c('site')) %>% "
"0","  group_by(source) %>% nest() %>% "
"0","  mutate(count=map(data, function(data) {"
"0","    data %>% group_by(zone, group) %>% "
"0","      mutate(count=n()) %>% "
"0","      select(zone, group, count) %>% "
"0","      distinct()"
"0","  })) %>% "
"0","  unnest(count) %>% select(!data)"
"0",""
"0","zone.counts"
