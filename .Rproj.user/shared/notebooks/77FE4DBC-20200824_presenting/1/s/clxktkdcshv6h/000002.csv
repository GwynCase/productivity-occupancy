"0","# Create a function to calculate n."
"0","give.n <- function(x){"
"0","  return(c(y = mean(x), label = length(x)))"
"0","}"
"0",""
"0","# Calculate diet diversity separately for camera and remains methods."
"0","camera.only.diversity <- diet.items %>% filter(genus != 'Unknown') %>% "
"0","  group_by(nest, binomial, method) %>% "
"0","  mutate(count=n()) %>% "
"0","  dplyr::select(nest, binomial, count) %>% "
"0","  distinct() %>% "
"0","  pivot_wider(names_from=binomial, values_from=count,"
"0","              values_fill=list(count = 0)) %>% "
"0","  drop_na() %>% "
"0","  filter(method == 'camera') %>% ungroup() %>% "
"0","  select(-method) %>% "
"0","  plyr::ddply(., ~nest, function(x) {"
"0","    data.frame(diet.diversity=diversity(x[-1], index='simpson'))"
"0","  }) %>% "
"0","  mutate(method='camera')"
"0",""
"0","remains.only.diversity <- diet.items %>% filter(genus != 'Unknown') %>% "
"0","  group_by(nest, binomial, method) %>% "
"0","  mutate(count=n()) %>% "
"0","  dplyr::select(nest, binomial, count) %>% "
"0","  distinct() %>% "
"0","  pivot_wider(names_from=binomial, values_from=count,"
"0","              values_fill=list(count = 0)) %>% "
"0","  drop_na() %>% "
"0","  filter(method == 'remains') %>% ungroup() %>% "
"0","  select(-method) %>% "
"0","  plyr::ddply(., ~nest, function(x) {"
"0","    data.frame(diet.diversity=diversity(x[-1], index='simpson'))"
"0","  }) %>% "
"0","  mutate(method='remains')"
"0",""
"0","# Calculate proportion squirrel separately for camera and remains methods."
"0","method.split.proportion <- diet.items %>% mutate(mass=as.numeric(mass)) %>% "
"0","  group_by(method, nest) %>% "
"0","  mutate(total=sum(mass)) %>% "
"0","  filter(genus == 'Tamiasciurus') %>% "
"0","  mutate(amount.sq=sum(mass), proportion.squirrel=amount.sq/total) %>% "
"0","  select(nest, method, proportion.squirrel) %>% distinct()"
"0",""
