"0","#source('../src/load_rasters.R')"
"0","library(landscapemetrics)"
"0",""
"0","### BEC zones"
"0",""
"0","# Make a list of BEC metrics to calculate."
"0","bec.metrics <- c('lsm_l_sidi')"
"0",""
"0","# Make a function to do the calculations and formatting."
"0","calc.bec.metrics <- function(x) {"
"0","  sample_lsm(r.bec, y=sites.sf, size=x, plot_id=site.names, shape='circle', what=bec.metrics) %>% "
"0","    left_join(bec.levels, by=c('class'='ID')) %>% "
"0","    group_by(plot_id, metric) %>% "
"0","    top_n(1, value) %>% ungroup() %>%  "
"0","    fill(category) %>% "
"0","    filter(level == 'landscape') %>% "
"0","    pivot_wider(names_from=metric, values_from=value) %>% "
"0","    mutate(radius=x)%>% "
"0","    rename(bec.inside=percentage_inside)"
"0","}"
"0",""
"0","# Run the function for each sample size."
"0","bec.landscape.metrics <- map_df(landscape$radius, calc.bec.metrics)"
"0",""
"0","# Tidy things up."
"0","bec.landscape.metrics <- bec.landscape.metrics %>% "
"0","  select(nest=plot_id, bec.diversity=sidi, radius, bec.inside)"
"0",""
"0","bec.landscape.metrics <- select(landscape, radius, size) %>% "
"0","  right_join(bec.landscape.metrics, by='radius')"
"0",""
"0","### Landcover classes"
"0",""
"0","# Make a list of landcover metrics to calculate."
"0","landcover.metrics <- c('lsm_c_pland', 'lsm_l_ed', 'lsm_l_contag', 'lsm_l_sidi', 'lsm_l_siei', 'lsm_l_prd')"
"0",""
"0","# Make a function to do the calculations and formatting."
"0","calc.landcover.metrics <- function(x) {"
"0","  sample_lsm(r.landcover, y=sites.sf, size=x, plot_id=site.names, shape='circle', "
"0","             what=landcover.metrics) %>% "
"0","    left_join(landcover.levels, by=c('class'='ID')) %>% "
"0","    mutate(class.name=ifelse(is.na(class.name), metric, class.name)) %>% "
"0","    select(-class, -metric, -level) %>%  "
"0","    pivot_wider(names_from=class.name, values_from=value) %>% "
"0","    mutate(radius=x)%>% "
"0","    rename(landcover.inside=percentage_inside)"
"0","}"
"0",""
"0","# Run the function for each sample size."
"0","landcover.landscape.metrics <- map_df(landscape$radius, calc.landcover.metrics)"
"0",""
"0","# Do some cleanup: fill NAs with zeros and rename columns, calculate mature forest."
"0","landcover.landscape.metrics <- landcover.landscape.metrics %>% "
"0","  replace_na(list(old=0, mature=0)) %>% "
"0","  mutate(proportion.cover.mature=mature + old) %>% "
"0","  mutate(siei=case_when("
"0","    siei == 'NaN' ~ NA_real_,"
"0","    TRUE ~ siei"
"0","  )) %>% "
"0","  select(radius, nest=plot_id, landcover.inside,"
"0","         proportion.cover.mature,"
"0","         cover.edge.density=ed, cover.contagion=contag,"
"0","         cover.diversity=sidi, cover.evenness=siei, cover.richness=prd)"
"0",""
"0","landcover.landscape.metrics <- select(landscape, radius, size) %>%"
"0","  right_join(landcover.landscape.metrics)"
"0",""
"0","### Mature forest."
"0",""
"0","# Make a list of landcover metrics to calculate."
"0","mature.metrics <- c('lsm_c_pland', 'lsm_l_ed')"
"0",""
"0","# Make a function to do the calculations and formatting."
"0","calc.mature.metrics <- function(x) {"
"0","  sample_lsm(r.older, y=sites.sf, size=x, plot_id=site.names, shape='circle', "
"0","             what=mature.metrics) %>% "
"0","    left_join(older.levels, by=c('class'='ID')) %>% "
"0","    mutate(class.name=ifelse(is.na(class.name), metric, class.name)) %>% "
"0","    select(-class, -metric, -level) %>%  "
"0","    pivot_wider(names_from=class.name, values_from=value) %>% "
"0","    mutate(radius=x)%>% "
"0","    rename(mature.inside=percentage_inside)"
"0","}"
"0",""
"0","# Run the function for each sample size."
"0","mature.landscape.metrics <- map_df(landscape$radius, calc.mature.metrics)"
"0",""
"0","mature.landscape.metrics <- mature.landscape.metrics %>% "
"0","  replace_na(list(undefined=0, older=0)) %>% "
"0","  select(radius, nest=plot_id, mature.inside,"
"0","         mature.edge.density=ed, "
"0","         proportion.mature=older, proportion.undefined=undefined)"
"0",""
"0","mature.landscape.metrics <- select(landscape, radius, size) %>%"
"0","  right_join(mature.landscape.metrics)"
"0",""
"0","### Gaps"
"0",""
"0","# Make a list of gap metrics to calculate."
"0","gap.metrics <- c('lsm_l_ed')"
"0",""
"0","# Make a function to do the calculations and formatting."
"0","calc.gap.metrics <- function(x) {"
"0","  sample_lsm(r.gaps, y=sites.sf, size=x, plot_id=site.names, shape='circle', "
"0","             what=gap.metrics) %>% "
"0","    left_join(landcover.levels, by=c('class'='ID')) %>% "
"0","    mutate(class.name=ifelse(is.na(class.name), metric, class.name)) %>% "
"0","    select(-class, -metric, -level) %>%  "
"0","    pivot_wider(names_from=class.name, values_from=value) %>% "
"0","    mutate(radius=x) %>% "
"0","    rename(gap.inside=percentage_inside)"
"0","}"
"0",""
"0","# Run the function for each sample size."
"0","gap.landscape.metrics <- map_df(landscape$radius, calc.gap.metrics)"
"0",""
"0","# Tidy things up."
"0","gap.landscape.metrics <- gap.landscape.metrics %>% "
"0","  select(nest=plot_id, gap.edge.density=ed, radius, gap.inside)"
"0",""
"0","gap.landscape.metrics <- select(landscape, radius, size) %>% right_join(gap.landscape.metrics)"
"0",""
"0","### Canopy cover."
"0",""
"0","# Make a list of canopy metrics to calculate."
"0","canopy.metrics <- c('lsm_c_pland')"
"0",""
"0","# Make a function to do the calculations and formatting."
"0","calc.canopy.metrics <- function(x) {"
"0","  sample_lsm(r.canopy, y=sites.sf, size=x, plot_id=site.names, shape='circle', "
"0","             what=canopy.metrics) %>% "
"0","    left_join(canopy.levels, by=c('class'='ID')) %>% "
"0","    mutate(class.name=ifelse(is.na(class.name), metric, class.name)) %>% "
"0","    select(-class, -metric, -level) %>%  "
"0","    pivot_wider(names_from=class.name, values_from=value) %>% "
"0","    mutate(radius=x) %>% "
"0","    rename(canopy.inside=percentage_inside)"
"0","}"
"0",""
"0","# Run the function for each sample size."
"0","canopy.landscape.metrics <- map_df(landscape$radius, calc.canopy.metrics)"
"0",""
"0","# Do some cleanup: fill NAs with zeros and rename columns, calculate mature forest."
"0","canopy.landscape.metrics <- canopy.landscape.metrics %>% "
"0","  mutate_all(~replace(., is.na(.), 0)) %>%  "
"0","  select(radius, nest=plot_id, canopy.inside,"
"0","         canopy.none=none,"
"0","         canopy.moderate=moderate,"
"0","         canopy.high=high)"
"0",""
"0","canopy.landscape.metrics <- select(landscape, radius, size) %>% "
"0","  right_join(canopy.landscape.metrics, by=c('radius'))"
"0",""
"0","### HSI"
"0",""
"0","# Make a list of metrics to calculate."
"0","hsi.metrics <- c('lsm_l_ed', 'lsm_l_contag')"
"0",""
"0","# Make a function to do the calculations and formatting."
"0","calc.hsi.metrics <- function(x) {"
"0","  sample_lsm(r.hsi, y=sites.sf, size=x, plot_id=site.names, shape='circle', "
"0","             what=hsi.metrics) %>% "
"0","    left_join(hsi.levels, by=c('class'='ID')) %>% "
"0","    mutate(class.name=ifelse(is.na(class.name), metric, class.name)) %>% "
"0","    select(-class, -metric, -level) %>%  "
"0","    pivot_wider(names_from=class.name, values_from=value) %>% "
"0","    mutate(radius=x) %>% "
"0","    rename(hsi.inside=percentage_inside)"
"0","}"
"0",""
"0","# Run the function for each sample size."
"0","hsi.landscape.metrics <- map_df(landscape$radius, calc.hsi.metrics)"
"0",""
"0","# Do some cleanup"
"0","hsi.landscape.metrics <- hsi.landscape.metrics %>% #replace(is.na(.), 0) %>% "
"0","  select(radius, hsi.inside, nest=plot_id, hsi.edge.density=ed, hsi.contagion=contag)"
"0",""
"0","hsi.landscape.metrics <- select(landscape, radius, size) %>% "
"0","  right_join(hsi.landscape.metrics, by=c('radius'))"
"0",""
"0","### Suitable habitat."
"0",""
"0","# Make a list of metrics to calculate."
"0","suitable.metrics <- c('lsm_c_pland', 'lsm_l_ed')"
"0",""
"0","# Make a function to do the calculations and formatting."
"0","calc.suitable.metrics <- function(x) {"
"0","  sample_lsm(r.suitable, y=sites.sf, size=x, plot_id=site.names, shape='circle', "
"0","             what=suitable.metrics) %>% "
"0","    left_join(hsi.levels, by=c('class'='ID')) %>% "
"0","    mutate(class.name=ifelse(is.na(class.name), metric, class.name)) %>% "
"0","    select(-class, -metric, -level) %>%  "
"0","    pivot_wider(names_from=class.name, values_from=value) %>% "
"0","    mutate(radius=x) %>% "
"0","    rename(suitable.inside=percentage_inside)"
"0","}"
"0",""
"0","# Run the function for each sample size."
"0","suitable.landscape.metrics <- map_df(landscape$radius, calc.suitable.metrics)"
"0",""
"0","# Do some cleanup"
"0","suitable.landscape.metrics <- suitable.landscape.metrics %>% # replace(is.na(.), 0) %>% "
"0","  select(radius, suitable.inside, nest=plot_id, suitable.edge.density=ed, proportion.suitable=pland)"
"0",""
"0","suitable.landscape.metrics <- select(landscape, radius, size) %>% "
"0","  right_join(suitable.landscape.metrics, by=c('radius'))"
"0",""
"0","### Wrap-up."
"0",""
"0","landscape.data <- full_join(bec.landscape.metrics, suitable.landscape.metrics, "
"0","                            by=c('nest', 'radius', 'size')) %>% "
"0","  full_join(landcover.landscape.metrics, by=c('nest', 'radius', 'size')) %>% "
"0","  full_join(mature.landscape.metrics, by=c('nest', 'radius', 'size')) %>% "
"0","  full_join(hsi.landscape.metrics, by=c('nest', 'radius', 'size')) %>% "
"0","  full_join(gap.landscape.metrics, by=c('nest', 'radius', 'size')) %>% "
"0","  full_join(canopy.landscape.metrics, by=c('nest', 'radius', 'size'))"
"0",""
"0","write_csv(landscape.data, '../data/processed/landscape_metrics_plain.csv')"
