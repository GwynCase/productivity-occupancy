"0","# Calculate percent mass for each nest."
"0","nest.mass <- diet.items %>% filter(source == 'C') %>% "
"0","  group_by(nest) %>% nest() %>% "
"0","  mutate(class=map(data, class.mass), "
"0","         genus=map(data, squirrel.mass), "
"0","         group=map(data, group.mass)) %>% "
"0","  pivot_longer(-c(nest, data), names_to='var', values_to='per') %>% "
"0","  unnest(per) %>% "
"0","  select(nest, variable, percent) %>% "
"0","  pivot_wider(id_cols=c(nest), names_from=variable, values_from=percent, values_fill=0)"
"0",""
"0","# Calculate counts of items identified to genus for entire study area."
"0","study.area.count <- diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>% "
"0","  group_by(binomial) %>% "
"0","  mutate(count=n()) %>% "
"0","  select(binomial, count) %>% "
"0","  distinct() %>% "
"0","  pivot_wider(names_from=binomial, values_from=count, values_fill=list(count = 0))"
"0",""
"0","# Calculate counts of items identified to genus for each nest."
"0","nest.count <- diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>% "
"0","  group_by(nest, binomial) %>% "
"0","  mutate(count=n()) %>% "
"0","  select(nest, binomial, count) %>% "
"0","  distinct() %>% "
"0","  pivot_wider(names_from=binomial, values_from=count, values_fill=list(count = 0))"
"0",""
"0","# Total study area diversity."
"0","# diversity(study.area.count, index='simpson')"
"0",""
"0","# Diversity per nest."
"0","nest.diversity <- plyr::ddply(nest.count, ~nest, function(x) {"
"0","  data.frame(diet.diversity=diversity(x[-1], index='simpson'))"
"0","})"
"0",""
"0","# Calculate overlap between nests."
"0","nest.overlap <- nest.count %>% column_to_rownames(var='nest') %>% "
"0","  vegdist(., method='morisita') %>% "
"0","  enframe()"
