"0","# Make a function to calculate class mass."
"0","class.mass <- function(data) {"
"0","    data %>% mutate(total.mass=sum(.data$mass)) %>%"
"0","    filter(class %in% c('Mammalia', 'Aves')) %>%"
"0","    group_by(class) %>% "
"0","    mutate(class.mass=sum(.data$mass), per.class=class.mass/total.mass*100) %>% "
"0","    distinct(class, per.class) %>% "
"0","    rename(variable=class, percent=per.class)"
"0","}"
"0",""
"0","# And a function to calculate squirrel mass."
"0","squirrel.mass <- function(data) {"
"0","    data %>% mutate(total.mass=sum(.data$mass)) %>%"
"0","    filter(genus == 'Tamiasciurus') %>%"
"0","    mutate(genus.mass=sum(.data$mass), per.genus=genus.mass/total.mass*100) %>% "
"0","    distinct(genus, per.genus) %>% "
"0","    rename(variable=genus, percent=per.genus)"
"0","}"
"0",""
"0","# Calculate percent mass for each nest."
"0","nest.mass <- diet.items %>% filter(source == 'C') %>% "
"0","  group_by(nest) %>% nest() %>% "
"0","  mutate(class=map(data, class.mass), "
"0","         genus=map(data, squirrel.mass)) %>% "
"0","  pivot_longer(-c(nest, data), names_to='var', values_to='per') %>% "
"0","  unnest(per) %>% "
"0","  select(nest, variable, percent) %>% "
"0","  pivot_wider(id_cols=c(nest), names_from=variable, values_from=percent, values_fill=0)"
"0",""
"0","# Calculate counts of items identified to genus for each nest."
"0","nest.count <- diet.items %>% filter(source == 'C' & binomial != 'Unidentified item') %>% "
"0","  group_by(nest, binomial) %>% "
"0","  mutate(count=n()) %>% "
"0","  select(nest, binomial, count) %>% "
"0","  distinct() %>% "
"0","  pivot_wider(names_from=binomial, values_from=count, values_fill=list(count = 0))"
"0",""
"0","# Diversity per nest."
"0","nest.diversity <- plyr::ddply(nest.count, ~nest, function(x) {"
"0","  data.frame(diet.diversity=diversity(x[-1], index='simpson'))"
"0","})"
