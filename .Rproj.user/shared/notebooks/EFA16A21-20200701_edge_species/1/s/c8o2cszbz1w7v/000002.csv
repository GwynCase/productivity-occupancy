"0","# Import the raster."
"0","r.vri <- raster('../data/interim/vri_camera-sites_2019.tif')"
"0",""
"0","# Import nests and calculate centroids."
"0","sites <- read_csv('../data/processed/the_big_list_of_nests.csv') %>% "
"0","  group_by(name) %>% "
"0","  mutate_at(c('lat', 'lon'), mean) %>% "
"0","  mutate_at(vars(starts_with('status')), max) %>% "
"0","  mutate_at(c('telemetry', 'cameras', 'remains'), max) %>% "
"0","  dplyr::select(-nest, -NOTES) %>% "
"0","  distinct() %>% "
"0","  filter(cameras > 0)"
"0",""
"0","# Drop TCR, ungroup."
"0","sites <- sites %>% filter(site != 'TCR') %>% "
"0","  ungroup()"
"0",""
"0","# Make site table a spatial object and make it UTMs."
"0","sites.sf <- ungroup(sites) %>% st_as_sf(coords=c('lon', 'lat')) %>%"
"0","  st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%"
"0","  st_transform(""+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs"")"
"0",""
"0","# Convert approximate homerange area in ha to radius in m"
"0","a.hr.ha <- 3700"
"0","r.hr.m <- sqrt(a.hr.ha*10000/pi)"
"0",""
"0","# Calculate area per class per site."
"0","class.area <- sample_lsm(r.vri, y=sites.sf, size=r.hr.m, what='lsm_c_ca', "
"0","           shape='circle') %>% "
"0","  # Amend class number with habitat class name."
"0","  left_join(data.frame(levels(r.vri)), by=c('class'='ID')) %>% "
"0","# Reorganize by site.  "
"0","  pivot_wider(id_cols=plot_id, names_from=category, values_from=value, "
"0","              values_fill=list(value=0))"
"0",""
"0","# Amend with site names."
"0","class.area <- dplyr::select(sites, site) %>% rownames_to_column() %>% "
"0","  mutate(rowname=as.integer(rowname)) %>% "
"0","  right_join(class.area, by=c('rowname'='plot_id'))"
"0",""
"0","class.area"
