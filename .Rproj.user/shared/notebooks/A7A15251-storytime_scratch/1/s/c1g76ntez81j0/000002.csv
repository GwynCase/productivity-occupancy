"0","# Take only items identified to genus and twist to a wide format."
"0","camera.diet.wide <- diet.items %>% filter(binomial != 'Unidentified item' & method == 'camera') %>% "
"0","  group_by(nest, genus, species) %>% "
"0","  mutate(count=n()) %>% ungroup() %>% "
"0","  dplyr::select(nest, binomial, count) %>%"
"0","  distinct() %>% "
"0","  pivot_wider(names_from=binomial, values_from=count,"
"0","              values_fill=list(count = 0))"
"0",""
"0","# Calculate diet diversity."
"0","camera.diet.diversity <- plyr::ddply(camera.diet.wide, ~nest, function(x) {"
"0","           data.frame(diet.diversity=diversity(x[-1], index='simpson'))"
"0","   })"
"0",""
"0","# Do it again with groupings."
"0","camera.groups.wide <- diet.items %>% filter(class != 'Unknown' & method == 'camera') %>% "
"0","  group_by(nest, group) %>% "
"0","  mutate(count=n()) %>% ungroup() %>% "
"0","  dplyr::select(nest, group, count) %>%"
"0","  distinct() %>% "
"0","  pivot_wider(names_from=group, values_from=count,"
"0","              values_fill=list(count = 0))"
"0",""
"0","# Calculate diet diversity."
"0","camera.groups.diversity <- plyr::ddply(camera.groups.wide, ~nest, function(x) {"
"0","           data.frame(diet.diversity=diversity(x[-1], index='simpson'))"
"0","   })"
"0",""
"0","camera.groups.wide.rn <- column_to_rownames(camera.groups.wide, var='nest')"
