"0","# Import the BEC raster."
"0","r.bec <- raster('../data/interim/bec_raster_SC.tif')"
"0",""
"0","# Import the original shapefile."
"0","shp.bec <- st_read('../data/processed/BEC_annual-homerange_clipped.shp')"
"1","Reading layer `"
"1","BEC_annual-homerange_clipped"
"1","' from data source `"
"1","C:\Users\gwync\sfuvault\productivity-occupancy\data\processed\BEC_annual-homerange_clipped.shp"
"1","' using driver `"
"1","ESRI Shapefile"
"1","'"
"1","
"
"1","Simple feature collection with 234 features and 21 fields"
"1","
"
"1","geometry type:  MULTIPOLYGON
"
"1","dimension:      XY
"
"1","bbox:           "
"1","xmin: 342073.1 ymin: 5431194 xmax: 643787.8 ymax: 5631755"
"1","
"
"1","projected CRS:  WGS 84 / UTM zone 10N
"
"0","# Get BEC levels."
"0","bec.levels <- data.frame((shp.bec[[""MAP_LABEL""]])) %>% "
"0","  rownames_to_column() %>% "
"0","  rename(ID=1, map_label=2) %>% "
"0","  mutate(ID=as.numeric(ID))"
"0",""
"0","# Add levels to raster."
"0","levels(r.bec) <- bec.levels"
"0",""
"0","# Import nests and calculate centroids."
"0","cam.sites <- read_csv('../data/processed/the_big_list_of_nests.csv') %>% "
"0","  group_by(name) %>% "
"0","  mutate_at(c('lat', 'lon'), mean) %>% "
"0","  mutate_at(vars(starts_with('status')), max) %>% "
"0","  mutate_at(c('telemetry', 'cameras', 'remains'), max) %>% "
"0","  dplyr::select(-nest, -NOTES) %>% "
"0","  distinct() %>% "
"0","  filter(cameras > 0)"
"0",""
"0","# Drop TCR, ungroup."
"0","cam.sites <- cam.sites %>% filter(site != 'TCR') %>% "
"0","  ungroup() %>% "
"0","  rownames_to_column(var='plot_id') %>% "
"0","  mutate(plot_id=as.integer(plot_id))"
"0",""
"0","# Make site table a spatial object and make it UTMs."
"0","cam.sites.sf <- ungroup(cam.sites) %>% st_as_sf(coords=c('lon', 'lat')) %>%"
"0","  st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%"
"0","  st_transform(""+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs"")"
"0",""
"0","# Convert approximate homerange area in ha to radius in m"
"0","a.hr.ha <- 3700"
"0","r.hr.m <- sqrt(a.hr.ha*10000/pi)"
"0",""
"0","# Calculate amount of each BEC type."
"0","bec.class.amount <- sample_lsm(r.bec, y=cam.sites.sf, size=r.hr.m, what='lsm_c_ca', "
"0","                         shape='circle') %>% "
"0","  inner_join(bec.levels, by=c('class'='ID')) %>% "
"0","  inner_join(cam.sites)"
"0",""
"0","# Regroup by forest type bc stupid reasons."
"0","bec.type.amount <- bec.class.amount %>% group_by(site, map_label) %>% "
"0","  summarize(total=sum(value))"
"0",""
"0","# Graph it."
"0","ggplot(bec.type.amount, aes(x='', y=total, fill=as.factor(map_label))) +"
"0","  geom_bar(stat='identity', width=1, color='white') +"
"0","  facet_wrap(~site) +"
"0","  labs(fill='Forest type') +"
"0","  coord_polar('y', start=0) +"
"0","  theme_void()"
