zone.counts

# Chi-squared test
zone.chi

# Standardized residuals for camera data.
zone.chi[[3]][[2]]$stdres
zone.chi[[3]][[1]]$stdres
zone.chi[[3]][[3]]$stdres

install.packages('chisq.posthoc.test')
library(chisq.posthoc.test)

# Data for chisquare.
zone.counts

# Just camera.
hoc <-zone.counts %>% filter(source == 'C') %>% ungroup() %>% select(-source) %>% 
  pivot_wider(names_from=zone, values_from=count, values_fill=0) %>% column_to_rownames(var='group')
hoc

# Test?
test <- chisq.posthoc.test(hoc, method='bonferroni')

# p.values
test %>% filter(Value == 'p values')

# resids
test %>% filter(Value == 'Residuals')


# Just pellets
hocp <-zone.counts %>% filter(source == 'P') %>% ungroup() %>% select(-source) %>% 
  pivot_wider(names_from=zone, values_from=count, values_fill=0) %>% column_to_rownames(var='group')
hocp


# Test?
testp <- chisq.posthoc.test(hocp, method='bonferroni')

# p.values
testp %>% filter(Value == 'p values')


# Just remains + pellets
hocrp <- zone.counts %>% filter(source != 'C') %>% group_by(zone, group) %>% 
  mutate(c.count=sum(count)) %>% distinct(zone, group, c.count) %>% 
  pivot_wider(names_from=zone, values_from=c.count, values_fill=0) %>% 
  column_to_rownames(var='group')
hocrp

# Test?
testrp <- chisq.posthoc.test(hocrp, method='bonferroni')

# p.values
testp %>% filter(Value == 'p values')

chisq.test(hocrp)












zone.chi[[2]][[2]] %>% 
  pivot_wider(names_from=zone, values_from=count, values_fill=0) %>% 
  column_to_rownames(var='group') %>% 
  chisq.posthoc.test(., method='bonferroni', simulate.p.value=TRUE, correct=FALSE)




