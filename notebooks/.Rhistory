knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load up some libraries.
library('tidyverse')
library('lubridate')
library('questionr')
library('ggplot2')
library('knitr')
library('kableExtra')
# Import the data.
df <- read.csv('../data/interim/camera_corrected.csv', stringsAsFactors=FALSE)
# Do the datetime thing.
df <- df %>% mutate(datetime=parse_date_time(datetime,
orders=c('%Y-%m-%d %H:%M:%S', '%Y/%m/%d %H:%M:%S')))
source('../src/prey_attributes.R')
to.genus <- items %>% filter(genus != 'Unknown')
to.family <- items %>% filter(family != 'Unknown')
to.class <- items %>% filter(class != 'Unknown')
count.by.genus <- to.genus %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=n()) %>%
group_by(site, genus, species) %>%
mutate(count=n()) %>%
distinct() %>%
ungroup() %>%
mutate(prop=count/total) %>%
dplyr::select(site, class, family, genus, species, count, total, prop) %>%
arrange(site, class)
count.by.genus %>% dplyr::select(-site, -total) %>%
kable(digits=2) %>%
kable_styling(full_width=TRUE) %>%
pack_rows('Mount Currie', 1, 7) %>%
pack_rows('Mount Ford', 8, 14) %>%
pack_rows('Ruby Lake', 15, 16) %>%
pack_rows('Turbid Creek', 17, 22) %>%
pack_rows('Twenty-Mile Creek', 23, 25) %>%
pack_rows('Utziletz', 26, 33)
count.by.family <- to.family %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=n()) %>%
group_by(site, family) %>%
mutate(count=n()) %>%
ungroup() %>%
mutate(prop=count/total) %>%
dplyr::select(site, class, family, count, total, prop) %>%
arrange(site, class) %>%
distinct()
count.by.family %>% dplyr::select(-site, -total) %>%
kable(digits=2) %>%
kable_styling(full_width=TRUE) %>%
pack_rows('Mount Currie', 1, 4) %>%
pack_rows('Mount Ford', 5, 9) %>%
pack_rows('Ruby Lake', 10, 12) %>%
pack_rows('Turbid Creek', 13, 18) %>%
pack_rows('Twenty-Mile Creek', 19, 22) %>%
pack_rows('Utziletz', 23, 27)
count.by.class <- to.class %>%
group_by(site) %>%
mutate(total=n()) %>%
group_by(site, class) %>%
mutate(count=n()) %>%
ungroup() %>%
mutate(prop=count/total) %>%
dplyr::select(site, class, count, total, prop) %>%
arrange(site, class) %>%
distinct()
count.by.class %>% dplyr::select(-site, -total) %>%
kable(digits=2) %>%
kable_styling(full_width=TRUE) %>%
pack_rows('Mount Currie', 1, 2) %>%
pack_rows('Mount Ford', 3, 4) %>%
pack_rows('Ruby Lake', 5, 6) %>%
pack_rows('Turbid Creek', 7, 8) %>%
pack_rows('Twenty-Mile Creek', 9, 10) %>%
pack_rows('Utziletz', 11, 12)
mass.by.genus <- to.genus %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=sum(mass)) %>%
group_by(site, genus, species) %>%
mutate(amount=sum(mass)) %>%
ungroup() %>%
mutate(prop=amount/total) %>%
dplyr::select(site, class, family, genus, species, amount, total, prop) %>%
arrange(site, class) %>%
distinct()
mass.by.genus %>% dplyr::select(-site, -total) %>%
kable(digits=2) %>%
kable_styling(full_width=TRUE) %>%
pack_rows('Mount Currie', 1, 7) %>%
pack_rows('Mount Ford', 8, 14) %>%
pack_rows('Ruby Lake', 15, 16) %>%
pack_rows('Turbid Creek', 17, 22) %>%
pack_rows('Twenty-Mile Creek', 23, 25) %>%
pack_rows('Utziletz', 26, 33)
mass.by.family <- to.family %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=sum(mass)) %>%
group_by(site, family) %>%
mutate(amount=sum(mass)) %>%
ungroup() %>%
mutate(prop=amount/total) %>%
dplyr::select(site, class, family, amount, total, prop) %>%
arrange(site, class) %>%
distinct()
mass.by.family %>% dplyr::select(-site, -total) %>%
kable(digits=2) %>%
kable_styling(full_width=TRUE) %>%
pack_rows('Mount Currie', 1, 4) %>%
pack_rows('Mount Ford', 5, 9) %>%
pack_rows('Ruby Lake', 10, 12) %>%
pack_rows('Turbid Creek', 13, 18) %>%
pack_rows('Twenty-Mile Creek', 19, 22) %>%
pack_rows('Utziletz', 23, 27)
mass.by.class <- to.class %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=sum(mass)) %>%
group_by(site, class) %>%
mutate(amount=sum(mass)) %>%
ungroup() %>%
mutate(prop=amount/total) %>%
dplyr::select(site, class, amount, total, prop) %>%
arrange(site, class) %>%
distinct()
mass.by.class %>% dplyr::select(-site, -total) %>%
kable(digits=2) %>%
kable_styling(full_width=TRUE) %>%
pack_rows('Mount Currie', 1, 2) %>%
pack_rows('Mount Ford', 3, 4) %>%
pack_rows('Ruby Lake', 5, 6) %>%
pack_rows('Turbid Creek', 7, 8) %>%
pack_rows('Twenty-Mile Creek', 9, 10) %>%
pack_rows('Utziletz', 11, 12)
day <- c(1, 1, 2, 2, 4, 4)
n.chicks <- c(2, NA, 1, NA, 2, 1)
data.frame(day, n.chicks)
day <- c(1, 2, 3, 4)
n.chicks <- c(2, 2, 2, 1)
data.frame(day, n.chicks)
library('tidyverse')
library('lubridate')
df <- read.csv('../data/interim/camera_corrected.csv', stringsAsFactors=FALSE)
chicks <- df %>% mutate(date=date(datetime)) %>%
dplyr::select(site, date, live.chicks) %>%
drop_na() %>%
group_by(site, date) %>%
summarize(max(live.chicks)) %>%
ungroup() %>% group_by(site) %>%
complete(nesting(site), date=seq(min(date), max(date), by='day'))
head(chicks)
x1 <- c(2, 2, 2, 2, 2, 1, 1, 1, 1)
x2 <- c(2, 2, 2, 1, 1, 1, 2, 2, 2)
x3 <- c(3, 3, 2, 1, 2, 1, 2, 1, 0)
fix_errors <- function (x) rev(cummax(rev(x)))
print("x1")
x1
fix_errors(x1)
print("x2")
x2
fix_errors(x2)
print("x3")
x3
fix_errors(x3)
library('conflicted')
install.packages(conflicted)
install.packages('conflicted')
library('conflicted')
conflict_prefer("select", "dplyr")
camera_obs <- read_csv('../data/interim/camera_corrected.csv', guess_max = 10000)
live_chicks_all_before_fill <-
camera_obs %>%
mutate(date = date(datetime)) %>%
select(site, date, live.chicks)
live_chicks_all_after_fill <-
live_chicks_all_before_fill %>%
group_by(site) %>%
fill(live.chicks, .direction = "downup")
View(live_chicks_all_before_fill)
View(live_chicks_all_after_fill)
live_chicks_all <-
live_chicks_all_after_fill %>%
mutate(live.chicks = fix_errors(live.chicks))
View(live_chicks_all)
live_chicks_per_day <-
live_chicks_all %>%
group_by(site, date) %>%
summarise(live.chicks = floor(median(live.chicks))) %>%
complete(site, date = full_seq(date, period = 1)) %>%
fill(live.chicks, .direction = "down")
View(live_chicks_per_day)
# Let's try with max chicks per day.
per.day <-
live_chicks_all %>%
group_by(site, date) %>%
summarise(live.chicks = max(live.chicks))) %>%
# Let's try with max chicks per day.
per.day <-
live_chicks_all %>%
group_by(site, date) %>%
summarise(live.chicks = max(live.chicks)) %>%
complete(site, date = full_seq(date, period = 1)) %>%
fill(live.chicks, .direction = "down")
View(live_chicks_per_day)
View(per.day)
df %>% filter(site=='TMC') %>%
select(date, live.chicks)
df %>% dplyr::filter(site=='TMC') %>%
select(date, live.chicks)
live_chicks_all_after_fill %>% dplyr::filter(site=='TMC')
live_chicks_all_after_fill %>% dplyr::filter(site=='TMC') %>%
group_by(date, live.chicks) %>%
summarize(n())
TMC <- live_chicks_all_after_fill %>% dplyr::filter(site=='TMC') %>%
group_by(date, live.chicks) %>%
summarize(n())
View(TMC)
library('ggplot')
library('ggplot2')
group=site, color=site)) +
geom_line() +
theme_classic()
ggplot(live_chicks_all_after_fill, aes(x=date, y=live.chicks,
group=site, color=site)) +
geom_line() +
theme_classic()
ggplot(live_chicks_per_day, aes(x=date, y=live.chicks,
group=site, color=site)) +
geom_line() +
theme_classic()
ggplot(live_chicks_per_day, aes(x=date, y=live.chicks,
group=site, color=site)) +
geom_line(aes(size=1.5, alpha=0.5)) +
theme_classic()
ggplot(live_chicks_per_day, aes(x=date, y=live.chicks)) +
geom_line() +
facet_wrap(~site)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
library('tidyverse')
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv')
source('../src/prey_attributes.R')
# Calculate proportion of squirrel biomass per site.
squirrel.mass <- items %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=sum(mass)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(amount.sq=sum(mass), prop.sq=amount.sq/total) %>%
select(site, prop.sq) %>% distinct()
squirrel.mass
install.packages('raster')
install.packages('rgdal')
install.packages('landscapemetrics')
# Load some libraries.
library('raster')
library('tidyverse')
library('sf')
library('landscapemetrics')
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv')
source('../src/prey_attributes.R')
# Calculate proportion of squirrel biomass per site.
squirrel.mass <- items %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=sum(mass)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(amount.sq=sum(mass), prop.sq=amount.sq/total) %>%
select(site, prop.sq) %>% distinct()
# Calculate proportion of squirrel biomass per site.
squirrel.mass <- items %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=sum(mass)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(amount.sq=sum(mass), prop.sq=amount.sq/total) %>%
dplyr::select(site, prop.sq) %>% distinct()
squirrel.mass
# Import BEC raster created previously.
bec.raster <- raster('../data/interim/bec_raster_SC.tif')
# Double-check that it's ok.
check_landscape(bec.raster)
# Import data and get centroids for camera nests.
sites <- read_csv('../data/processed/the_big_list_of_nests.csv') %>%
group_by(name) %>%
mutate_at(c('lat', 'lon'), mean) %>%
mutate_at(vars(starts_with('status')), max) %>%
mutate_at(c('telemetry', 'cameras', 'remains'), max) %>%
select(-nest, -NOTES) %>%
distinct() %>%
filter(cameras > 0)
# Import data and get centroids for camera nests.
sites <- read_csv('../data/processed/the_big_list_of_nests.csv') %>%
group_by(name) %>%
mutate_at(c('lat', 'lon'), mean) %>%
mutate_at(vars(starts_with('status')), max) %>%
mutate_at(c('telemetry', 'cameras', 'remains'), max) %>%
dplyr::select(-nest, -NOTES) %>%
distinct() %>%
filter(cameras > 0)
# Make site table a spatial object and make it UTMs.
sites.sf <- st_as_sf(sites, coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Import data and get centroids for camera nests.
sites <- read_csv('../data/processed/the_big_list_of_nests.csv') %>%
group_by(name) %>%
mutate_at(c('lat', 'lon'), mean) %>%
mutate_at(vars(starts_with('status')), max) %>%
mutate_at(c('telemetry', 'cameras', 'remains'), max) %>%
dplyr::select(-nest, -NOTES) %>%
distinct() %>%
filter(cameras > 0) %>%
ungroup()
# Make site table a spatial object and make it UTMs.
sites.sf <- st_as_sf(sites, coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Convert area in ha to radius in m
a.hr.ha <- 3700
r.hr.m <- sqrt(a.hr.ha*10000/pi)
# Calculate area per class per site.
class.area <- sample_lsm(bec.raster, y=sites.sf, size=r.hr.m, what='lsm_c_ca',
shape='circle') %>%
# Amend class number with BEC name.
left_join(data.frame(levels(bec.raster)), by=c('class'='ID')) %>%
# Reorganize by site.
pivot_wider(id_cols=plot_id, names_from=category, values_from=value,
values_fill=list(value=0))
# Amend with site names.
class.area <- select(sites, site) %>% rownames_to_column() %>%
mutate(rowname=as.integer(rowname)) %>%
right_join(class.area, by=c('rowname'='plot_id'))
# Amend with site names.
class.area <- dplyr::select(sites, site) %>% rownames_to_column() %>%
mutate(rowname=as.integer(rowname)) %>%
right_join(class.area, by=c('rowname'='plot_id'))
class.area
class.area <- class.area %>% mutate(amt.tz=CWHds1+CWHms1)
# Add proportion of biomass that is squirrel.
class.area <- left_join(class.area, squirrel.mass)
# Make a model.
sq.x.tz <- lm(prop.sq ~ amt.tz, data=class.area)
# Look at it.
summary(sq.x.tz)
# Calculate proportion of mammalian biomass.
mammal.mass <- items %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=sum(mass)) %>%
filter(class == 'Mammalia') %>%
mutate(amount.sq=sum(mass), prop.ml=amount.sq/total) %>%
select(site, prop.ml) %>% distinct()
# Calculate proportion of mammalian biomass.
mammal.mass <- items %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=sum(mass)) %>%
filter(class == 'Mammalia') %>%
mutate(amount.sq=sum(mass), prop.ml=amount.sq/total) %>%
dplyr::select(site, prop.ml) %>% distinct()
# Add to the main data set.
class.area <- left_join(class.area, mammal.mass)
# Try another model.
ml.x.tz <- lm(prop.ml ~ amt.tz, data=class.area)
# Look at it.
summary(ml.x.tz)
install.packages("AICcmodavg")
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
library(AICcmodavg)
# Load some libraries.
library(tidyverse)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Load some libraries.
library(tidyverse)
library(landscapemetrics)
library(raster)
library(sf)
library(AICcmodavg)
library(AICcmodavg)
# Bring in diet data.
df <- read_csv('../data/interim/camera_corrected.csv', guess_max=7000)
source('../src/prey_attributes.R')
head(items)
# Calculate proportion of diet made up of squirrel at each site.
sq.mass <- items %>% mutate(mass=as.numeric(mass)) %>%
group_by(site) %>%
mutate(total=sum(mass)) %>%
filter(genus == 'Tamiasciurus') %>%
mutate(amount.sq=sum(mass), prop.sq=amount.sq/total) %>%
dplyr::select(site, prop.sq) %>% distinct()
sq.mass
# Import the raster.
r.vri <- raster('../data/interim/vri_camera-sites_2019.tif')
# Import nests and calculate centroids.
sites <- read_csv('../data/processed/the_big_list_of_nests.csv') %>%
group_by(name) %>%
mutate_at(c('lat', 'lon'), mean) %>%
mutate_at(vars(starts_with('status')), max) %>%
mutate_at(c('telemetry', 'cameras', 'remains'), max) %>%
dplyr::select(-nest, -NOTES) %>%
distinct() %>%
filter(cameras > 0)
# Drop TCR, ungroup.
sites <- sites %>% filter(site != 'TCR') %>%
ungroup()
# Make site table a spatial object and make it UTMs.
sites.sf <- ungroup(sites) %>% st_as_sf(coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Convert approximate homerange area in ha to radius in m
a.hr.ha <- 3700
r.hr.m <- sqrt(a.hr.ha*10000/pi)
# Calculate area per class per site.
class.area <- sample_lsm(r.vri, y=sites.sf, size=r.hr.m, what='lsm_c_ca',
shape='circle') %>%
# Amend class number with habitat class name.
left_join(data.frame(levels(r.vri)), by=c('class'='ID')) %>%
# Reorganize by site.
pivot_wider(id_cols=plot_id, names_from=category, values_from=value,
values_fill=list(value=0))
# Calculate area per class per site.
class.area <- sample_lsm(r.vri, y=sites.sf, size=r.hr.m, what='lsm_c_ca',
shape='circle') %>%
# Amend class number with habitat class name.
left_join(data.frame(levels(r.vri)), by=c('class'='ID')) %>%
# Reorganize by site.
pivot_wider(id_cols=plot_id, names_from=category, values_from=value,
values_fill=list(value=0))
# Amend with site names.
class.area <- dplyr::select(sites, site) %>% rownames_to_column() %>%
mutate(rowname=as.integer(rowname)) %>%
right_join(class.area, by=c('rowname'='plot_id'))
class.area
# Join VRi and diet data together.
sq.vri <- sq.mass %>% filter(site != 'TCR') %>% left_join(class.area)
# Sum mature and old forest classes
sq.vri <- sq.vri %>% mutate(older=sum(mature, old))
sq.vri
# Plot it.
ggplot(sq.vri, aes(x=older, y=prop.sq, label=site)) +
geom_point() +
geom_text(hjust='inward', nudge_y = 0.5) +
geom_smooth(method='lm', se=FALSE, color='black', linetype='dashed') +
theme_classic()
# Proportion of squirrel biomass is function of amount of mature forest.
sq.x.mature <- lm(prop.sq ~ mature, data=sq.vri)
# Proportion of squirrel biomass is function of amount of old forest.
sq.x.old <- lm(prop.sq ~ old, data=sq.vri)
# Proportion of squirrel biomass if function of total older forest.
sq.x.older <- lm(prop.sq ~ older, data=sq.vri)
# Do the AIC thing.
mods <- c(sq.x.mature, sq.x.old, sq.x.older)
modnames <- c('mature', 'old', 'total older')
aictab(mods)
aic(mods)
AIC(mods)
AIC(sq.x.mature, sq.x.old, sq.x.older)
# Do the AIC thing.
cand.models <- list()
cand.models[[1]] <- lm(prop.sq ~ mature, data=sq.vri)
cand.models[[2]] <- lm(prop.sq ~ old, data=sq.vri)
cand.models[[3]] <- lm(prop.sq ~ older, data=sq.vri)
aictab(cand.set=cand.models)
models <- list(sq.x.mature, sq.x.old, sq.x.older)
aictab(models)
modnames <- list('mature', 'old', 'older')
aictab(models, modnames=modnames)
modnames <- c('mature', 'old', 'older')
aictab(models, modnames=modnames)
library(MuMIn)
install.packages('MuMIn')
library(MuMIn)
summary(sq.x.mature)
# And the R2 thing.
summary(sq.x.mature)$r.squared
# Proportion of squirrel biomass is function of amount of mature forest.
sq.x.mature <- lm(prop.sq ~ mature, data=sq.vri)
# Proportion of squirrel biomass is function of amount of old forest.
sq.x.old <- lm(prop.sq ~ old, data=sq.vri)
# Proportion of squirrel biomass if function of total older forest.
sq.x.older <- lm(prop.sq ~ older, data=sq.vri)
# Do the AIC thing.
models <- list(sq.x.mature, sq.x.old, sq.x.older)
modnames <- c('mature', 'old', 'older')
aictab(models, modnames=modnames)
# And the R2 thing.
summary(sq.x.mature)$r.squared
summary(sq.x.old)$r.squared
summary(sq.x.older)$r.squared
